{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/chrome-devtool-extension","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/IjSHmuEY9OQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Oh Girl</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/IjSHmuEY9OQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>身為工程師，想辦法提高自己的工作效率是一件很重要的事情，<del>畢竟這樣才有多餘的時間打電動</del>，除了平時加強各種知識與累積經驗外，撰寫工具的能力也值得培養。剛好在前不久，公司舉辦了一次內部的 hackday，我就利用這個時間針對公司內部的 framework 寫了一個簡單的 chrome devtools 的 extension，增加開發上的便利性。而在開發的過程中，發現關於 Chrome devtools extension 的文章並不是很多，中文的更少。總之，雖然<a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方文件</a>該有的都有，但跟 vscode extension 的文件比起來就是差了很多，光是排版就讓人不太想閱讀...\n因此希望藉此篇文章介紹開發 chrome devtools extension 的方法與一些注意事項。（註：可能需要先有點 Chrome extension 的相關知識會比較好懂） </p>\n<p>先給大家看其中一個範例（共有兩個），主要是能自動將 DOM 物件的 element inline style 轉化為 <a href=\"https://acss.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atomic CSS</a> 的 class 名稱（<a href=\"https://blog.techbridge.cc/2017/04/29/css-methodology-atomiccss/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">不知道 Atomic CSS 的可以看這篇</a>），如此一來，在 Inspector 中調整完 style 後，就能直接將轉換好的 Atomic CSS 複製貼上到 code 當中，省去一次自己轉換的時間（有時還會忘記 class name...）</p>\n<p><img src=\"/image/devtools-acss-demo.gif\" alt=\"Sidebar Demo\"></p>\n<h1 id=\"chrome-devtools-extension-基本介紹\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9\" aria-label=\"chrome devtools extension 基本介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension 基本介紹</h1>\n<p>有開發過 Chrome extension 的人應該都知道，我們會有所謂的 <code class=\"language-text\">Content Script</code> 與 <code class=\"language-text\">Background page</code> 兩種不同的 context 存在於我們的 extension 中，而 <code class=\"language-text\">Devtools page</code> 也是一個獨立的 context，從下面這張官方圖可以很清楚的看到其之間的差異：</p>\n<p><img src=\"/image/devtools-extension-overview.png\" alt=\"官方圖片\"></p>\n<ul>\n<li>Content Script: 可以存取實際頁面的 DOM 物件與事件。</li>\n<li>Background page: 可以調用多數 extension API，像是 <code class=\"language-text\">chrome.runtime.*</code> 與 <code class=\"language-text\">chrome.tabs.onUpdated</code>，並負責 extension 與 Content script、Devtools page 之間的溝通。</li>\n<li>Devtools page: 可以調用 <code class=\"language-text\">chrome.extensions.*</code> 與 <code class=\"language-text\">chrome.devtools.*</code> Devtools API，其他的就都無法存取。可以透過 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval</code> 能與目前開啟 inspector 的頁面互動。</li>\n</ul>\n<p>與一般 Extension 不同的地方就在於多了 Devtools API 需要了解，而主要的 Devtools API 其實也只有三種：</p>\n<h3 id=\"1-chromedevtoolsinspectedwindow\" style=\"position:relative;\"><a href=\"#1-chromedevtoolsinspectedwindow\" aria-label=\"1 chromedevtoolsinspectedwindow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. chrome.devtools.inspectedWindow</h3>\n<p>透過 <code class=\"language-text\">inspectedWindow.eval</code> 可以在當前開啟 inspector 的頁面 context 執行 javascript：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// result 為 window.$0.style.cssText</span>\n    <span class=\"token comment\">// 在當前頁面的 context 下支執行結果 </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-chromedevtoolsnetwork\" style=\"position:relative;\"><a href=\"#2-chromedevtoolsnetwork\" aria-label=\"2 chromedevtoolsnetwork permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. chrome.devtools.network</h3>\n<p>network api 可以取得你在 <code class=\"language-text\">Network panel</code> 看到的資訊。\n<img src=\"/image/devtools-networkpanel.png\" alt=\"network panel\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 取得當前開啟 inspector 的頁面所發出的 request 中，bodySize > 40*1024 的 url</span>\nchrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>network<span class=\"token punctuation\">.</span>onRequestFinished<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>bodySize <span class=\"token operator\">></span> <span class=\"token number\">40</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">'console.log(\"Large request: \" + unescape(\"'</span> <span class=\"token operator\">+</span>\n              <span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-chromedevtoolspanels\" style=\"position:relative;\"><a href=\"#3-chromedevtoolspanels\" aria-label=\"3 chromedevtoolspanels permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. chrome.devtools.panels</h3>\n<p>panels api 應該是最重要的一塊了，因為我們必須透過它來創建 Panel 或 Sidebar。</p>\n<p><img src=\"/image/devtools-panel&#x26;sidebar.png\" alt=\"panel-sidebar\"></p>\n<p>Chrome devtools 的 extension UI 基本上就是分為上面這兩種類型，與上方 <code class=\"language-text\">Elements</code>、<code class=\"language-text\">Network</code> 和 <code class=\"language-text\">Sources</code> 同 Level 的稱為 Panel，而在每個 Panel 底下還可以另外創建 Sidebar，像是 Elements panel 右邊的 <code class=\"language-text\">style sidebar</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Panel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// code invoked on panel creation</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>看完這些 API 應該也是一頭霧水，也不清楚到底要在哪裡呼叫，別急，接下來會針對這兩種 UI 個別實作一個範例來說明。</p>\n<h1 id=\"chrome-devtools-extension---sidebar-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---sidebar-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   sidebar 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Sidebar 實作</h1>\n<p>開頭的範例中，就是採取 Sidebar 的 UI，屬於 <code class=\"language-text\">ElementPanel</code> 底下的 sidebar。</p>\n<p>接著先看一下我們的檔案結構：</p>\n<img src=\"/image/devtools-foldr-structure.png\" style=\"width:50%;height:50%\">\n<p>很簡單，重點只有三個檔案，ruleMap.js 是跟 Atomic CSS 相關的 mapping 檔案，這邊不需要理會：</p>\n<h3 id=\"1-manifestjson\" style=\"position:relative;\"><a href=\"#1-manifestjson\" aria-label=\"1 manifestjson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. manifest.json</h3>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Atomic CSS Devtool\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtool extension for making Acss users happier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devtools_page\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtools.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"manifest_version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>  跟一般 extension 一樣，要在 manifest.json 中做相對應設定，既然是開發 Devtools extension，自然就要註冊 <code class=\"language-text\">devtools_page</code>，指定為 devtools.html，這份 html 就是用來載入相關 js 的入口頁面。</p>\n<h3 id=\"2-devtoolshtml\" style=\"position:relative;\"><a href=\"#2-devtoolshtml\" aria-label=\"2 devtoolshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. devtools.html</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ruleMap.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>devtools.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>  內容非常簡單，載入整個 devtools extension 需要的 javascript 檔案。如果你在 devtools.js 中有其他需要使用的 lib，也請記得在這個地方進行載入，像是 lodash 等等。\n但若你要載入非本地端的 javascript（透過 cdn 之類），會遇到 CSP(content security policy) 的錯誤，在 <a href=\"#notice\">注意事項</a> 中我會再說明解法。</p>\n<h3 id=\"3-devtoolsjs\" style=\"position:relative;\"><a href=\"#3-devtoolsjs\" aria-label=\"3 devtoolsjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. devtools.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"acss class\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// The function below is executed in the context of the inspected page.</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">page_generateAtomicClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selectedElementCssText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// generate Atomic CSS</span>\n          <span class=\"token comment\">// 略...</span>\n          <span class=\"token keyword\">return</span> styleMap<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acssClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> selectedElementCssText <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">const</span> acssClass <span class=\"token operator\">=</span> <span class=\"token function\">page_generateAtomicClass</span><span class=\"token punctuation\">(</span>selectedElementCssText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>\n          elements<span class=\"token punctuation\">.</span>onSelectionChanged<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>getAcssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>devtool.js 就比較複雜了，所有主要功能都發生在這裡。</p>\n<p>首先，我們利用 <code class=\"language-text\">chrome.devtools.panels.elements.createSidebarPane(sidebarTitle, callbackFunc)</code> 來創建 Sidebar，在 callback 中我們會拿到一個 <code class=\"language-text\">sidebar</code> 物件，此物件是我們與右邊這個 sidebar 區塊互動的媒介，有四種 method 可以使用：</p>\n<ul>\n<li>\n<p>sidebar.setObject()\n我們範例中就是使用 <code class=\"language-text\">setObject()</code> 來將運算完的資料（轉換後的 atomic css classname）傳到 sidebar 顯示，他會將傳入的 Object 展開：</p>\n<p><img src=\"/image/devtools-setobj.png\" alt=\"setObject\"></p>\n</li>\n<li>\n<p>sidebar.setPage() 與 sidebar.setHeight()\n若是覺得光是顯示 JS 的 Object 太單調，你也可以利用 <code class=\"language-text\">setPage()</code> 搭配 <code class=\"language-text\">setHeight()</code> 來在 sidebar 中塞入一個 html。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Atomic Css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sidebar.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"8ex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sidebar.html 中，可以自由繪製畫面，但要注意的是，你是在 sidebar 的 context 中，不能取得當前頁面的 DOM 物件資料，需要的話得透過 background.js 以 <code class=\"language-text\">postMessage</code> 來傳遞，我們最後還會提到。</p>\n</li>\n<li>\n<p>sidebar.setExpression()\n除了 <code class=\"language-text\">setObject</code> 以外，我們也能夠過 <code class=\"language-text\">setExpression</code> 直接 <code class=\"language-text\">eval()</code> js code 到當前的 inspected page。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> page_generateAtomicClass<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用方法有點特殊，因為是 eval 的方式，你需要把函式 toString() 後再傳入，此外，在傳入的 <code class=\"language-text\">page_generateAtomicClass()</code> 中，你可以取得當前 inspected 頁面的資訊！\n例如：$0 (Chrome devtools 中特殊的變數，等同於 Element panel 中你目前選取的元素 DOM)。\n官方文件中 setExpression 還能傳入一個 callback，但是我怎麼傳都會有 Error 就是了...</p>\n</li>\n</ul>\n<p>接著，我用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval(\"window.$0.style.cssText\", callback);</code> 的方式去取得 selected element 的 css 資訊，接著在 callback 中將其傳給 <code class=\"language-text\">page_generateAtomicClass()</code> 做運算，最後用 <code class=\"language-text\">sidebar.setObject()</code> 將結果輸出。</p>\n<p>等等，你不是說 <code class=\"language-text\">sidebar.setExpression</code> 就能直接取得 <code class=\"language-text\">$0</code> 了嗎？何必多此一舉？</p>\n<p>原因很簡單，因為在 <code class=\"language-text\">setExpression</code> 傳入的 function 中，你取不到 devtools.js 中的 context，所有你在 devtools.html 中 include 的 js 都無法取得，像是我需要用來轉換 Atomic css 的 <code class=\"language-text\">ruleMap.js</code> 就無法拿到，只好採此作法。在實作時需要特別注意 context 的問題！</p>\n<p>最後，我們註冊一個 <code class=\"language-text\">onSelectionChanged</code> 監聽事件 <code class=\"language-text\">chrome.devtools.panels.elements.onSelectionChanged.addListener(getAcssClass);</code>，只要選擇別的 elements 時就重新執行。</p>\n<p>到這邊為止，你就能夠做出如同一開始範例所展現功能的 Devtools extension 了！</p>\n<h1 id=\"chrome-devtools-extension---panel-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---panel-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   panel 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Panel 實作</h1>\n<p>這個範例是實作 Panel UI 的 extension，這邊我將功能降之最低，單純抓出目前頁面的 Page title，目的在展示如何將不同 context 的資訊呈現在 Devtools 的 Panel 中。</p>\n<p><img src=\"/image/devtools-panel-demo.gif\" alt=\"Panel Demo\"></p>\n<p>一樣先來看檔案結構：</p>\n<img src=\"/image/devtools-panel-structure.png\" style=\"width:50%;height:50%\">\n<p>可以看到基本上跟前一個範例差不多，只是多了 <code class=\"language-text\">Panel.html</code> 與 <code class=\"language-text\">background.js</code> 兩個檔案。</p>\n<p>另外的差別在於 <code class=\"language-text\">devtools.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isException <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Panel Demo\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// code invoked on panel creation</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>有別於前一個範例我們都將程式邏輯寫在 <code class=\"language-text\">devtools.js</code> 中，這次我們只在這邊進行創建 panel 的程式，可以從上面程式碼中看到，我們創建了一個 Title 叫做 \"Panel Demo\" 的 panel，並告訴 chrome devtool 是要用 <code class=\"language-text\">Panel.html</code> 這份檔案。</p>\n<p>在 <code class=\"language-text\">Panel.html</code> 中，我們載入主要程式邏輯 <code class=\"language-text\">getPageTitle.js</code>，你也可以看到，這邊就是繪製 Panel 的地方，因此可以載入 bootstrap 等 css style 來輔助。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container mt-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getPageTitle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>接著來看主要程式邏輯，<code class=\"language-text\">getPageTitle.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 與 background.js 建立 channel 連結</span>\n  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Devtools.js Communication\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> inspectedWindowId <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span>tabId<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Listen to messages from the background page</span>\n  port<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>action <span class=\"token operator\">===</span> <span class=\"token string\">\"reloadExtension\"</span> <span class=\"token operator\">&amp;&amp;</span> message<span class=\"token punctuation\">.</span>updatedTabId <span class=\"token operator\">===</span> inspectedWindowId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span>appNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> titleWrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n              titleWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              appNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">HTMLNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          HTMLNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// init</span>\n  <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我們利用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval()</code> 來執行 <code class=\"language-text\">document.title</code>，取得 page title 資訊，並利用 <code class=\"language-text\">document.createElement</code> 等原生 Web API 來將資訊呈現在頁面上。</p>\n<p>接著這邊我們用到了 <code class=\"language-text\">port.onMessage.addListener()</code>，原因是我們想要 monitor 頁面的變化，像是 page reload 或是 page update。而這些資訊都只能透過 <code class=\"language-text\">content script</code> 或是 <code class=\"language-text\">Background.js</code> 才能取得，因此我們必須建立一個 messaging 的 channel，讓 <code class=\"language-text\">background.js</code> 告訴我們頁面是否更新了，若更新就重新繪製 <code class=\"language-text\">Panel.html</code> 的內容。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsbackground.js\"><pre class=\"language-jsbackground.js\"><code class=\"language-jsbackground.js\">chrome.runtime.onConnect.addListener(function (port) {\n    chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n        if (changeInfo.status === &#39;complete&#39;) {\n            reloadExtension(port, tabId);\n        }\n    });\n    function reloadExtension(port, tabId) {\n        const message = { action: &quot;reloadExtension&quot;, updatedTabId: tabId };\n        port.postMessage(message);\n    }\n});\n// `background.js` 透過 `chrome.runtime.onConnect.addListener`\n// 在與 devtools page 的 script 連接到後，監聽 `chrome.tabs.onUpdated` 事件，\n// 當 update status 為 complete 後，`postMessage()` 給 `Panel.html` 中的 `getPageTitle.js`。</code></pre></div>\n<p>此外，由於 <code class=\"language-text\">Background.js</code> 存在於整個 Browser 中，因此在 <code class=\"language-text\">getPageTitle.js</code> 中，需要透過 <code class=\"language-text\">const inspectedWindowId = chrome.devtools.inspectedWindow.tabId;</code> 取得當前 inspected page 的 tab id 來過濾其他 tab 的 event change。</p>\n<p>就這樣我們就完成了一個可以取得頁面 Title 的 Devtools extension！雖然功能超廢但要是希望讓大家有個概念，知道要怎麼開始。\n基本上所有程式碼都在這邊了，但如果還是想直接載範例 code 來看的話可以移駕至 github，但只是 demo 用就是了...<a href=\"https://github.com/ArvinH/acss_devtool\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 1</a> <a href=\"https://github.com/ArvinH/chrome-devtools-extension-panelDemo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 2</a>\n<span id=\"notice\"></span></p>\n<h1 id=\"注意事項\" style=\"position:relative;\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\" aria-label=\"注意事項 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事項</h1>\n<p>在 hackday 開發內部工具時其實踩到不少雷，而在上述的範例中比較難去說明，因此在文章的最後額外與大家分享：</p>\n<ol>\n<li>\n<p>載入外部檔案的方式\n雖然在 <code class=\"language-text\">devtools.html</code> 或 <code class=\"language-text\">Panel.html</code> 中可以載入除了 <code class=\"language-text\">devtools.js</code> 外的檔案，但若是載入的檔案中存有 <code class=\"language-text\">eval()</code> 或著是透過 web 下載的 js，都會出現 CSP(content ecurity policy) 錯誤，而解法是在 <code class=\"language-text\">manifest.json</code> 中加上一行：\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval'; object-src 'self'\"\n這樣就能解決 js 中存有 <code class=\"language-text\">eval()</code> 或是 <code class=\"language-text\">setTimeout()</code> 所造成的 CSP error </p>\n<p>而若要載外部資源，則還要另外將其 domain 也加進去，當作 white list\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval' <a href=\"https://maps.googleapis.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://maps.googleapis.com/</a>; object-src 'self'\"</p>\n</li>\n<li>chrome.devtools.inspectedWindow.eval 長度限制\n在製作內部工具時，其實是需要從 inspected page 的 context 中取出大量資料到 Panel.html 中進行處理，而透過 <code class=\"language-text\">inspectedWindow.eval</code> 的方式並沒有辦法傳送太大量的 JSON object，因此我是先將其 <code class=\"language-text\">JSON.stringify()</code> 後才往後傳的。 eg. <code class=\"language-text\">chrome.devtools.inspectedWindow.eval( \"JSON.stringify(context.getStore())\"</code>。</li>\n</ol>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>今天透過兩種範例介紹了如何用最主要的 Devtools API 來搭建 Devtools extension，但當然還有許多 API 或是 Event 沒有介紹到，像 panels 就有 <code class=\"language-text\">onShown</code>, <code class=\"language-text\">onHide</code> 等監聽 devtools 是否有開啟的事件可以用，不過很難從一次的範例中全部介紹到，有需要的話還是得去查看官方文件。至少希望能讓大家對於製作增加自己工作效率的工具有一個初步的開始方向，有任何問題也歡迎提出指教！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google offical doc</a></li>\n<li><a href=\"https://div.io/topic/1669\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome Extension CSP 開發小記</a></li>\n<li><a href=\"http://www.360doc.com/content/17/1212/14/26662048_712402137.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome 插件(擴展)全攻略</a></li>\n</ol>","fields":{"slug":"chrome-devtool-extension"},"frontmatter":{"title":"Chrome devtools extension 實作介紹","date":"02-10-2018","tags":["Chrome","devtools","extension"]},"timeToRead":11}},"pageContext":{"slug":"chrome-devtool-extension","prev":{"excerpt":"『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』","html":"<blockquote>\n<p>『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』</p>\n</blockquote>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>還記得約莫是 2012 年我還在唸研究所的時候，有位清大教授（原諒我忘了是哪位...）來系上演講關於類神經網路的應用，當時的我聽得霧煞煞，覺得是離我很遙遠的一門學問，而如今 Machine Learning、Deep Learning 滿天飛，說你沒聽過 KNN 就像說你沒背過 99 乘法表一樣驚人。</p>\n<p>對於一個成天在網頁打滾的前端工程師，可能真的沒太多機會碰觸到相關實作或研究。\n但小心了！AI 的觸角也慢慢伸到前端的領域 - [Screenshot to code in Keras]((<a href=\"https://github.com/emilwallner/Screenshot-to-code-in-Keras\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emilwallner/Screenshot-to-code-in-Keras</a>)，從圖片就能轉成 HTML，以後該怎麼辦啊...</p>\n<p>你可能會想，身處於變化快速的前端領域，我們最擅長的不就是快速學習應對嗎？現在已經有很多 js 版本的機器學習函式庫啦，像是 Keras.js、Deeplearn.js 等等，讓你可以在 browser 上透過 WebGL 的幫助來使用 GPU 做運算。</p>\n<p>但是這些 Library 的宗旨比較是拓展機器學習的應用層面，對於沒接觸過 Deeplearning 的前端工程師來說，要做出 <a href=\"https://teachablemachine.withgoogle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">teachablemachine</a> 這樣的東西，其實沒這麼簡單。</p>\n<p>而今天要介紹的這款 library 就是想提供一個 Higher level 的 js library，降低採用 Machine learning 實作產品的門檻。</p>\n<p>先來看個 Demo：</p>\n<p><img src=\"/image/deeplearnjs-demo.gif\" alt=\"p5ML-Deeplearnjs-demo\"></p>\n<p>Demo 裡是一個簡單的 Chrome extension，透過 WebCam 擷取圖片來分析，利用 <a href=\"https://github.com/PAIR-code/deeplearnjs/tree/master/models/knn_image_classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNN image classifier model</a>，來判斷出不同動作，並對應到網頁上的互動，像是 scroll dow, scroll up 或是修改 DOM 元件（ Demo 中的開關燈效果 ）。主要參考自 <a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a>。</p>\n<p>沒有，我的另一隻手絕對沒有在下面控制滑鼠。</p>\n<p>這一切的實現都是依靠 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 與 <a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a> 的 knn image classifier。</p>\n<h1 id=\"p5ml\" style=\"position:relative;\"><a href=\"#p5ml\" aria-label=\"p5ml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>p5ML</h1>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 還持續在開發中，主要是提供一系列的 API wrapper，讓你能忽略掉一些直接使用 deeplearn.js 需要知道的細節，像是 <code class=\"language-text\">NDArrayMath</code>, <code class=\"language-text\">Scalar</code>, <code class=\"language-text\">Array3D</code> 等 deeplearn 提供的物件。</p>\n<p>使用方式很簡單，直接在 html 中載入：</p>\n<p> <code class=\"language-text\">&lt;script src=\"p5ML.min.js\">&lt;/script></code></p>\n<p> 或是 <code class=\"language-text\">npm install p5ML --save</code> 下載皆可。</p>\n<p><code class=\"language-text\">p5ML.min.js</code> 會 expose 一個 <code class=\"language-text\">p5ml</code> 的全域變數，裡面提供以下幾種目前實作的 Modal 演算法：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#lstm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM</a></p>\n<ul>\n<li>沒研究過 LSTM 的讀者可以看看這篇介紹，<a href=\"http://x-algo.cn/index.php/2017/03/21/lstm-understanding/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM直觀理解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#imagenet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageNet</a> - 目前只支援 SqueezeNet Modal</p>\n<ul>\n<li><a href=\"http://blog.csdn.net/xbinworld/article/details/50897870\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SqueezeNet 模型詳解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#knn-image-classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNNImage</a></p>\n<ul>\n<li>其中採用了 <a href=\"https://github.com/PAIR-code/deeplearnjs/blob/master/models/knn_image_classifier/knn_image_classifier.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deeplearn.js 的 knn models</a>，寫得很簡潔，又是 Typescript，對於理解這種演算法很有幫助。</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#neural-network\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NeuralNetwork</a></li>\n</ul>\n<p>除了 Neura Network 外，上述其餘每個 Modal 在 p5ML 的 github 上都有對應的 Demo，以及簡短的使用方式。</p>\n<h1 id=\"實作範例\" style=\"position:relative;\"><a href=\"#%E5%AF%A6%E4%BD%9C%E7%AF%84%E4%BE%8B\" aria-label=\"實作範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>實作範例</h1>\n<p>以剛剛開頭看到的例子來說，我們使用到的是 <strong>KNNImgae</strong> 這個 API：</p>\n<p><code class=\"language-text\">let knn = new p5ml.KNNImageClassifier(callback);</code></p>\n<p>建立出 KNNImageClassifier 的物件 knn 後，我們可以透過 <code class=\"language-text\">knn.addImage(video, index);</code> 來加入 example（video 變數)，並告知其 class 類別（index 變數）。\n當加入的 example 足夠多以後，就能透過 <code class=\"language-text\">knn.predict(input, callback)</code> 來預測 input 是屬於哪種類別：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">knn<span class=\"token punctuation\">.</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>classIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 屬於類別 1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用起來就是這麼簡單。</p>\n<h2 id=\"整合-extension---popupjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---popupjs\" aria-label=\"整合 extension   popupjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - popup.js</h2>\n<p>要整合到 Chrome extension 中的話，需要使用到的是 <code class=\"language-text\">popup.js</code>, <code class=\"language-text\">popup.html</code>, <code class=\"language-text\">content.js</code> 以及 <code class=\"language-text\">option.html</code>。</p>\n<p>疑？為什麼需要 <code class=\"language-text\">option.html</code>？這次的範例應該還用不著需要使用者設定什麼參數吧？</p>\n<p>原因是為了取得使用者的<strong>攝影機權限</strong>。</p>\n<p>一般 Web 上是呼叫 <code class=\"language-text\">navigator.mediaDevices.getUserMedia(options, callback)</code>來取得使用者 WebCam 權限：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> audio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> video<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webcam not ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但要讓 Chrome extension 也拿到權限的話，你的這段程式碼，必須放置在由 extension 本身開啟的 html 內才可以，<code class=\"language-text\">popup.html</code> 不算。\n因此，利用設置頁面 <code class=\"language-text\">option.html</code> 是最為適合的，只要在你的 <code class=\"language-text\">manifest.json</code> 中設定：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonmanifest.json\"><pre class=\"language-jsonmanifest.json\"><code class=\"language-jsonmanifest.json\">&quot;options_ui&quot;: {\n    &quot;page&quot;: &quot;options.html&quot;,\n    &quot;chrome_style&quot;: true,\n    &quot;open_in_tab&quot;: true\n}</code></pre></div>\n<p>之後就能透過開啟 Extension 的設定頁面，來徵求使用者的攝影權限。</p>\n<img src=\"/image/extension-option.png\" style=\"width: 300px;height:200px\">\n<p>取得權限後，在我們的 <code class=\"language-text\">popup.html</code> 中要繪製一些頁面元件，以供之後我們在前端進行 Image 的分類：</p>\n<div class=\"gatsby-highlight\" data-language=\"popup.html\"><pre class=\"language-popup.html\"><code class=\"language-popup.html\">&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;video crossorigin=&quot;anonymous&quot; width=&quot;227&quot; height=&quot;227&quot; id=&quot;video&quot;&gt;&lt;/video&gt;\n  &lt;button id=&quot;still&quot;&gt;Do nothing&lt;/button&gt;\n  &lt;button id=&quot;up&quot;&gt;Up&lt;/button&gt;\n  &lt;button id=&quot;down&quot;&gt;Down&lt;/button&gt;\n  &lt;button id=&quot;turnoff&quot;&gt;Turn Off Light&lt;/button&gt;\n  &lt;script src=&quot;scripts/p5ml.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;scripts/popup.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>popup.js 中則是放入最主要的 knn 相關程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspopup.js\"><pre class=\"language-jspopup.js\"><code class=\"language-jspopup.js\">let knn = new p5ml.KNNImageClassifier(modelLoaded);\nlet turnoffButton = document.getElementById(&#39;turnoff&#39;);\n// turnoffButton\nturnoffButton.addEventListener(&#39;click&#39;, function () {\n    knn.addImage(video, 4);\n    times++;\n})\nsetInterval(function() {\n    if (times &gt; 10) {\n        knn.predict(video, function(data) {\n            if (data.classIndex == 1) {\n                console.log(&#39;response&#39;, &#39;still&#39;);\n            } else if (data.classIndex == 2) {\n                // ...\n            } else if (data.classIndex == 3) {\n                // ...\n            } else if (data.classIndex == 4) {\n                chrome.runtime.sendMessage({ direction: &quot;turn off&quot; }, function (response) {\n                console.log(&#39;response&#39;, &#39;turn off&#39;);\n                });\n            }\n        });\n    }\n}, 1500);</code></pre></div>\n<p>Line 1 我們初始化 <code class=\"language-text\">p5ml.KNNImageClassifier</code> 物件 <code class=\"language-text\">knn</code>，接著在 <code class=\"language-text\">turnoffButton</code> 按下時加入範例 <code class=\"language-text\">knn.addImage(video, 4)</code>，並設定該範例類別為 4。</p>\n<p>接著在 Line 8 開始，利用 <code class=\"language-text\">setInterval()</code> 不斷的進行 <code class=\"language-text\">knn.predict()</code>，這樣就能盡量即時分辨 WebCam 傳來的資料。</p>\n<p>其他部分，像是如何讓 WebCam 的影像顯示在 <code class=\"language-text\">&lt;video></code> tag 中的程式碼也是在 <code class=\"language-text\">popup.js</code> 中實作。</p>\n<p>完整 popup.js 程式碼可以看 <a href=\"https://gist.github.com/ArvinH/f10ea345904d09f51aebb3f1e34e95e5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這裏</a> 或是<a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension/blob/master/scripts/popup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">原作者的</a></p>\n<p>實作到這裡以後，基本上你就可以開啟 Extension 然後進行一些影片的分類，像是這樣：</p>\n<p><img src=\"/image/deeplearn-demo-2.gif\" alt=\"教育你的 extension\"></p>\n<p>可以從上面的片段發現，你需要點擊對應分類的按鈕，並且做出你想要的動作來教導你的 extension，讓他認得你的手勢！\n當你給予的 example 越多，就愈有機會判斷得更好。</p>\n<h2 id=\"整合-extension---contentjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---contentjs\" aria-label=\"整合 extension   contentjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - content.js</h2>\n<p>這邊假定大家都知道 Extension 的實作方式（如果不知道可以從<a href=\"https://developer.chrome.com/extensions/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>學習）。</p>\n<p>在 Extension 中，可以透過 <code class=\"language-text\">chrome.runtime.sendMessage()</code> 與 <code class=\"language-text\">chrome.runtime.onMessage.addListener()</code> 來針對 Popup page 與 當前頁面的 content script 進行溝通，我們就是利用這點來將辨識完的手勢，轉換成頁面上的互動操作：</p>\n<div class=\"gatsby-highlight\" data-language=\"jscontent.js\"><pre class=\"language-jscontent.js\"><code class=\"language-jscontent.js\">chrome.runtime.onMessage.addListener(gotMessage)\nfunction gotMessage(message, sender, sendResponse){\n  let direction = 0;\n  if(message.direction == &#39;up&#39;){\n    direction = -500;\n  } else if(message.direction == &#39;down&#39;){\n    direction = +500;\n  } else if (message.direction == &#39;turn off&#39;) {\n    const mask = document.getElementById(&#39;body-maskDiv&#39;);\n    if (mask) {\n      removeMask();\n    } else {\n      addMask();\n    }\n  }\n  window.scrollBy({ \n    top: direction,\n    left: 0, \n    behavior: &#39;smooth&#39; \n  });\n}</code></pre></div>\n<p>到這邊為止基本上就完成了範例的所有功能，對完整程式碼（或是遮罩實作方式 XD）有興趣的人可以從<a href=\"https://gist.github.com/ArvinH/96fa770dcd007c02a69f31676020cbe6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>取得。</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>這次算是初步嘗試在前端上應用 ML 相關的功能，介紹大家有像是 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a> 這樣有趣的 library 可以使用，希望可以有多一點的前端高手來發揮創意，並分享作品出來，不然真的很難找到相關的經驗分享。\n不過當然，這只是個非常粗淺的應用，更是用非常 High level 的 API 來實作，還是需要真正去了解 ML 相關的演算法，才是比較正確的學習方向，接下來我也會繼續學習，p5-deeplearn-js 會是一個不錯的起點，加上 deeplearn.js 的 KNN 演算法程式碼都算蠻簡潔的，以 Typescript 實作，閱讀起來比起純 JS 好理解一些（多了 Type 很有幫助啊！），推薦給各位！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a></li>\n<li><a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a></li>\n<li><a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a></li>\n</ol>","id":"027bada1-0bee-5863-a87d-42bbd8690b73","fields":{"slug":"p-5-ml-deeplearnjs"},"frontmatter":{"date":"2018-01-13T16:30:21.000Z","title":"前端也能玩 Deepleaning - 以 p5-deeplearn-js 為例","tags":["deeplearning","deeplearnjs","p5ML","chrome extension"],"type":"tech","slug":"p5ML-deeplearnjs"},"timeToRead":8},"next":{"excerpt":"好歌分享：鈴木雅之　恋人","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/CZ95wRScgvU\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">鈴木雅之　恋人</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/CZ95wRScgvU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>約莫兩個月前，我利用 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a> 這套工具在 Chrome extension 中玩了一下機器學習的應用 (請參閱<a href=\"https://blog.techbridge.cc/2018/01/13/p5ML-deeplearnjs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">前端也能玩 Deepleaning - 以 p5-deeplearn-js 為例</a>)，當時雖然有去看他們的 source code，但對於底層 deeplearnjs 的部分並沒有仔細去了解，畢竟還是要對 ML 有根本的了解，才能讀得懂。</p>\n<p>而隨著 Google 發布 <a href=\"https://developers.google.com/machine-learning/crash-course/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Machine Learning Crash Course</a>，再度讓我有了研究 deeplearn.js 的念頭，但萬事起頭難，一開始不能太勉強自己，所以本文就先從最簡單的 linear regression 實作開始，來熟悉一下基本操作！</p>\n<p>照慣例先來張 Demo 成果圖：</p>\n<p><img src=\"/image/deeplearnjs-demo-img.png\" alt=\"Demo\"> </p>\n<p>範例是從 <a href=\"https://ithelp.ithome.com.tw/articles/10186905\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇文章</a> 中獲得的靈感，假資料也是取自該處。</p>\n<h2 id=\"先進入假想情境\" style=\"position:relative;\"><a href=\"#%E5%85%88%E9%80%B2%E5%85%A5%E5%81%87%E6%83%B3%E6%83%85%E5%A2%83\" aria-label=\"先進入假想情境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>先進入假想情境！</h2>\n<p>想像一下你是一間飲料店老闆，在經濟不景氣的情況下，你需要嚴格控管你的進貨成本，因此，聰明的你開始觀察各種可能，最後發現天氣的變化與你的飲料銷售量有很大的關聯！</p>\n<p>然而，氣象資料很好取得，但你需要的是能夠預測在哪種天氣下，你需要進多少貨，以此來控管每一次的進貨量。</p>\n<p>也就是說，你需要一個公式！</p>\n<p>這個公式要能夠讓你輸入一個特徵 X（也就是氣溫度數），接著透過運算後產生一個目標變數 Y（也就是飲料銷售量）。</p>\n<p>能當到老闆，想必數學不會太差，整理一下後發現，我們只有一個自變量 <code class=\"language-text\">X</code>，以及因變量 <code class=\"language-text\">Y</code>，因此可以嘗試用一個簡單的線性函數來逼近這公式：</p>\n<p><code class=\"language-text\">Y = aX + b</code></p>\n<p>問題就來了，要怎麼樣找出適合的係數 <code class=\"language-text\">a</code> 與 <code class=\"language-text\">b</code> 呢？</p>\n<h2 id=\"先別急讓我們先把資料整理一下\" style=\"position:relative;\"><a href=\"#%E5%85%88%E5%88%A5%E6%80%A5%E8%AE%93%E6%88%91%E5%80%91%E5%85%88%E6%8A%8A%E8%B3%87%E6%96%99%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8B\" aria-label=\"先別急讓我們先把資料整理一下 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>先別急，讓我們先把資料整理一下</h2>\n<p>資料分析的第一步一定是先取得資料，身為飲料店老闆，要取得銷售資量應該不難，再上網查個氣象資訊就好，因此可以得到如下資料：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 建構資料 （當然是假的）</span>\n<span class=\"token keyword\">const</span> degrees <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> salesVolume <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>資料是成對關係，<code class=\"language-text\">氣溫 29 度</code>，<code class=\"language-text\">冰紅茶銷售量 77</code>。</p>\n<p>接著我們可以先利用 HighCharts 把資料先視覺化出來，你就會很有感覺我們該做什麼。</p>\n<p data-height=\"468\" data-theme-id=\"dark\" data-slug-hash=\"PRweww\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"DeeplearnJS-simple-linear-dataset\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/PRweww/\">DeeplearnJS-simple-linear-dataset</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>嗯...看起來這些點似乎真的可以用一個線性函數去逼近呢！而且更棒的是，透過這些過往資料，應該是有助於我們找出公式中最棒的係數的！</p>\n<h2 id=\"接著就該-linear-regression-就登場了\" style=\"position:relative;\"><a href=\"#%E6%8E%A5%E8%91%97%E5%B0%B1%E8%A9%B2-linear-regression-%E5%B0%B1%E7%99%BB%E5%A0%B4%E4%BA%86\" aria-label=\"接著就該 linear regression 就登場了 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接著就該 Linear regression 就登場了！</h2>\n<p>在機器學習的領域中，像我們這樣依靠大量資料來輔助學習的，稱作監督式學習。</p>\n<p>而當公式中的目標變數（也就是 y）是連續型（continuous）的變數時，這樣的學習問題會稱為回歸（regression）問題。</p>\n<p>那一個線性函數的回歸問題，就是線性迴歸 (linear regression) 了。</p>\n<p>關於 Linear regression 的一些數學公式推導等等，我推薦大家閱讀這篇文章：<a href=\"https://blog.gtwang.org/statistics/standford-machine-learning-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">史丹佛大學機器學習（Machine Learning）上課筆記（一）</a></p>\n<p>裡面解釋得淺顯易懂，絕對比我解釋得還好...</p>\n<p>就算不清楚線性迴歸，光看公式應該也知道，我們可以透過大量的迭代測試，不斷輸入 <code class=\"language-text\">X</code>，然後調整 <code class=\"language-text\">a</code> 與 <code class=\"language-text\">b</code> 來求出 <code class=\"language-text\">Y</code>，然後找出在所有 input 中，能得到與所有真實資料差距最小的一對係數即可。</p>\n<p>用線性回歸的概念來解釋，就是我們需要有一個 cost function（或稱 loss function），藉由不同係數的輸入，從公式得出的值來與實際資料比較，想辦法找出結果差距最小的係數。</p>\n<p>一般來說，cost function 會用 LMS（least mean squares）演算法來處理，可以先猜一個初始係數值，然後藉由 LMS 來不斷更新係數，直到找出最小差距的情況。</p>\n<p>但這是單一 training sample 的狀況，當有多個 training sample 時，通用的演算法稱為 stochastic gradient descent (sgd)，概念雷同，就像是根據每一筆 training sample 去跑一次 LMS。</p>\n<p>一樣，還是請大家去閱讀 <a href=\"https://blog.gtwang.org/statistics/standford-machine-learning-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">史丹佛大學機器學習（Machine Learning）上課筆記（一）</a>，獲得更正確的概念。畢竟這次主要是練習如何用 deeplearnjs 來實作。</p>\n<h2 id=\"解法都有了那就來看看到底怎麼用-javascript-實作吧\" style=\"position:relative;\"><a href=\"#%E8%A7%A3%E6%B3%95%E9%83%BD%E6%9C%89%E4%BA%86%E9%82%A3%E5%B0%B1%E4%BE%86%E7%9C%8B%E7%9C%8B%E5%88%B0%E5%BA%95%E6%80%8E%E9%BA%BC%E7%94%A8-javascript-%E5%AF%A6%E4%BD%9C%E5%90%A7\" aria-label=\"解法都有了那就來看看到底怎麼用 javascript 實作吧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解法都有了，那就來看看到底怎麼用 Javascript 實作吧！</h2>\n<p>要使用 deeplearn.js，只需要從 cdn 載入即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"https://unpkg.com/deeplearn@latest\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>接著，我們要先初始化資料：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 建構資料</span>\n<span class=\"token keyword\">const</span> degrees <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> salesVolume <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">84</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 運用 Deeplearn.js 結構化資料</span>\n<span class=\"token comment\">// dl 就是 deeplearn.js 的 global 變數</span>\n<span class=\"token keyword\">const</span> degrees_data <span class=\"token operator\">=</span> dl<span class=\"token punctuation\">.</span><span class=\"token function\">tensor1d</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> salesVolume_data <span class=\"token operator\">=</span> dl<span class=\"token punctuation\">.</span><span class=\"token function\">tensor1d</span><span class=\"token punctuation\">(</span>salesVolume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在 deeplearn.js 中，tensor 是最核心的資料結構，用來表示向量、矩陣或是多維度的資料。</p>\n<p>有許多 utility function 可以輔助創建 tensor 資料結構，像是這邊用的是 <code class=\"language-text\">tensor1d</code>，也就是 1D (1-dimension) 的 tensor。</p>\n<p>一個 tensor 其實包含三個成分，也是創建 tensor 時可以傳入的參數：</p>\n<ul>\n<li>values (TypedArray|Array): tensor 的值。可以是 nested array 或 flat array 的結構。</li>\n<li>shape（number[]）:基本上就是該 tensor 的維度。若創建 tensor 時沒有指定維度，就會繼承傳入的 values 維度。也可以像這邊的範例一樣直接使用 <code class=\"language-text\">tensor${1|2|3|4}d</code> 來創建</li>\n<li>dtype（float32'|'int32'|'bool）：值的型別，當然是 optional。</li>\n</ul>\n<p>初始化好 deeplearn.js 的資料結構後，接著定義我們要 training 的係數，這邊取為 <code class=\"language-text\">aw</code> 與 <code class=\"language-text\">ba</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 要 train 的參數 aw, ba</span>\n<span class=\"token keyword\">const</span> aw <span class=\"token operator\">=</span> dl<span class=\"token punctuation\">.</span><span class=\"token function\">variable</span><span class=\"token punctuation\">(</span>dl<span class=\"token punctuation\">.</span><span class=\"token function\">scalar</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ba <span class=\"token operator\">=</span> dl<span class=\"token punctuation\">.</span><span class=\"token function\">variable</span><span class=\"token punctuation\">(</span>dl<span class=\"token punctuation\">.</span><span class=\"token function\">scalar</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">dl.variable(initialValue, trainable?, name?, dtype?)</code> 用來創建 training 過程中需要的變數，也可透過參數指定該變數能否在 training 過程中被修改（trainable），預設是 <code class=\"language-text\">true</code>。</p>\n<p>其中 <code class=\"language-text\">initialValue</code> 可以是一個 Tensor，也可以像我們這邊一樣，傳入 <code class=\"language-text\">dl.scalar</code>。</p>\n<p><code class=\"language-text\">dl.scalar</code> 是維度為 0 的 tensor，基本上 0 維就是一個點，由於我們只需要亂數產生一個初值給 <code class=\"language-text\">aw</code> 與 <code class=\"language-text\">ba</code>，因此用 <code class=\"language-text\">dl.scalar</code> 即可。</p>\n<p>再來，我們定義目標函數與 loss function</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 定義目標函數 與 loss function （最一般的 mean square）</span>\n<span class=\"token comment\">// f = aw * X + ba</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> aw<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ba<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loss</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">pred<span class=\"token punctuation\">,</span> label</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> pred<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在 deeplearn.js 中，函數的建構蠻直覺的，<code class=\"language-text\">y = a * x + b</code> 可以直接寫成 <code class=\"language-text\">y = x => a.mul(x).add(b)</code></p>\n<p>loss function 則是接收兩個參數的函式，<code class=\"language-text\">pred</code> 就是 training data 中的自變因 <code class=\"language-text\">x</code> 透過目標函數 <code class=\"language-text\">f</code>，計算出的值，而 label 是 training data 中的答案 <code class=\"language-text\">y</code>。</p>\n<p>然後，定義我們的 Optimizer，也就是用來最佳化 loss function 結果的演算法，這邊採用 <code class=\"language-text\">stochastic gradient descent (sgd)</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 採用 stochastic gradient descent 來做最佳化 </span>\n<span class=\"token comment\">// learning rate 這邊不能設太大</span>\n<span class=\"token keyword\">const</span> learningRate <span class=\"token operator\">=</span> <span class=\"token number\">0.0005</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> optimizer <span class=\"token operator\">=</span> dl<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">.</span><span class=\"token function\">sgd</span><span class=\"token punctuation\">(</span>learningRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">dl.train.sgd</code> 是 deeplearn.js 內建的 sgd 演算法模型，接受一個 <code class=\"language-text\">leanring rate</code> 參數。在每一次的迭代中，係數都會不斷被更新，以找出最佳的結果，而這個 <code class=\"language-text\">learningRate</code> 參數是用來控制每一次的更新幅度。因此不能夠設得太大，也不能設得太小。</p>\n<p>利用定義好的目標函數 <code class=\"language-text\">f</code>、<code class=\"language-text\">loss function</code> 與 <code class=\"language-text\">optimizer</code>，我們可以就開始 training modal 了！</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// training</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cost <span class=\"token operator\">=</span> optimizer<span class=\"token punctuation\">.</span><span class=\"token function\">minimize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">loss</span><span class=\"token punctuation\">(</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span>degrees_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> salesVolume_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>aw<span class=\"token punctuation\">,</span> ba<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cost'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cost<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aw'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  aw<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ba'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ba<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最核心的就是這一行：</p>\n<p><code class=\"language-text\">const cost = optimizer.minimize(() => loss(f(degrees_data), salesVolume_data), true, [aw, ba])</code></p>\n<p>使用 <code class=\"language-text\">optimizer</code> 的方式如上所示，輸入執行 <code class=\"language-text\">loss function</code> 的函示，並可額外輸入兩個參數，分別控制 1. 是否回傳最後的 cost; 2. 限制只更新哪些變數。</p>\n<p>我們簡單 for loop 30 次（因為資料量很少...你要 train 一百次也行，但這邊結果不會有什麼差別）</p>\n<p>過程中若想要 debug，可以像我一樣用 <code class=\"language-text\">tensor.print()</code> 的方式把 traning 過程的係數變化 log 出來。</p>\n<p>最後，當 training 結束後，透過 <code class=\"language-text\">dataSync()</code> 將最終係數從 Tensor 中讀出：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 利用 dataSync() 取出 training 後得到的係數</span>\n<span class=\"token keyword\">const</span> awPredict <span class=\"token operator\">=</span> aw<span class=\"token punctuation\">.</span><span class=\"token function\">dataSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> baPredict <span class=\"token operator\">=</span> ba<span class=\"token punctuation\">.</span><span class=\"token function\">dataSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>很容易看出 <code class=\"language-text\">dataSync()</code> 是 Synchronously 的，會 block Browser 的 UI thread，直到 data 被你讀出。另外還有個 Asynchronously 的 <code class=\"language-text\">data()</code> method，會回傳 promise，當讀取結束時再呼叫 <code class=\"language-text\">resolves</code>。</p>\n<p>在我們的範例中，因為接下來要用 Highcharts 畫圖，我們需要 block 著 UI thread 等資料讀出後再繼續，因此採用 <code class=\"language-text\">dataSync()</code>。</p>\n<p>取出係數的值後，就能夠畫圖啦～</p>\n<p>根據算出的係數，畫出線條頭尾兩點：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> dataLine <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span> <span class=\"token operator\">*</span> awPredict <span class=\"token operator\">+</span> baPredict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span> <span class=\"token operator\">*</span> awPredict <span class=\"token operator\">+</span> baPredict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>然後用 HighCharts 繪圖：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'deeplearn.js  最高溫與紅茶銷售量'</span>                 \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    xAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'氣溫'</span>                 \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      min<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n      max<span class=\"token operator\">:</span> <span class=\"token number\">40</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    yAxis<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        text<span class=\"token operator\">:</span> <span class=\"token string\">'銷售量'</span>                 \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      min<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n      max<span class=\"token operator\">:</span> <span class=\"token number\">100</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    series<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">:</span> <span class=\"token string\">'predict line'</span><span class=\"token punctuation\">,</span>\n            data<span class=\"token operator\">:</span> dataLine\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  \n        <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'scatter'</span><span class=\"token punctuation\">,</span>\n            name<span class=\"token operator\">:</span> <span class=\"token string\">'dataset'</span><span class=\"token punctuation\">,</span>\n            marker<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                symbol<span class=\"token operator\">:</span> <span class=\"token string\">'cross'</span><span class=\"token punctuation\">,</span>  \n                radius<span class=\"token operator\">:</span> <span class=\"token number\">4</span>         \n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            data<span class=\"token operator\">:</span> dataset\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 繪製圖表</span>\n<span class=\"token keyword\">const</span> chart <span class=\"token operator\">=</span> Highcharts<span class=\"token punctuation\">.</span><span class=\"token function\">chart</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"最終成果\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E7%B5%82%E6%88%90%E6%9E%9C\" aria-label=\"最終成果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最終成果</h2>\n<p data-height=\"472\" data-theme-id=\"dark\" data-slug-hash=\"dmPZdj\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"DeeplearnJS-simple-linear\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/dmPZdj/\">DeeplearnJS-simple-linear</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>初次使用 deeplearn.js 其實主要門檻還是在於對 Machine Learning 的了解不夠，我有稍微比對一下用 python 與 R 的做法，其實都很雷同，包含資料向量的概念都是，加上很多演算法在這些語言的 library 中都有內建，相信對 ML 與 DL 有深入了解的人來學習 deeplearn.js 會更得心應手。deeplearn.js 畢竟有 Google 支持，也支援 TensorFlow 的 modal，還是很值得投資學習的，想想未來能用別人的 browser 來 training 你的 modal 有多好啊！喔不，是想想未來 Web 能因此有更多的發展潛力，多好呀！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Deeplearnjs</a></li>\n<li><a href=\"https://deeplearnjs.org/docs/api/index.html#dl.train.sgd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deeplearn js API doc</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10186905\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">機器學習 玩具資料與線性迴歸</a></li>\n<li><a href=\"https://blog.gtwang.org/statistics/standford-machine-learning-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">史丹佛大學機器學習（Machine Learning）上課筆記</a></li>\n<li><a href=\"http://blog.csdn.net/ns2250225/article/details/79414790\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn.js的線性迴歸</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s/X0k2JPze7x8nkSxkoHtWnw\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">8 大JavaScript 機器學習框架之探索</a></li>\n</ol>","id":"407fbb50-54af-565f-ad66-fb73fd730202","fields":{"slug":"deeplearnjs-simple-linear-regression"},"frontmatter":{"date":"2018-03-10T15:09:02.000Z","title":"用 Javascript 進行簡單線性迴歸分析","tags":["deeplearnjs","machine learning","linear-regression","javascript"],"type":"tech","slug":"deeplearnjs-simple-linear-regression"},"timeToRead":10},"type":"tech"}},"staticQueryHashes":["2123680655"]}