{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/web-vr-101","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>『探索宇宙真理已經很累了，我沒有時間撒謊。』</p>\n</blockquote>\n<!-- more -->\n<p>Web VR 出來也很久了，但沒有去玩過，因為想說我沒有相關設備，直到前陣子看到這篇文章 <a href=\"https://css-tricks.com/minecraft-webvr-html-using-frame/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Minecraft in WebVR with HTML Using A-Frame</a></p>\n<p>整個驚艷！</p>\n<p>隨便加幾個 tag，然後調整一下就可以有 VR 效果，這東西不試試怎麼行！說不定以後能像這篇作者一樣，在自己的婚禮上搞一套 VR 的網站！因此決定跟著<a href=\"https://aframe.io/docs/0.5.0/guides/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官網範例</a>來了解一下 Web VR 到底該如何實作。</p>\n<p>一樣先看個成品：</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"BWMjBd\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"webVR-test-demo5\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/BWMjBd/\">webVR-test-demo5</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"a-frame\" style=\"position:relative;\"><a href=\"#a-frame\" aria-label=\"a frame permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A-frame</h2>\n<p>A-Frame 是 Mozilla VR team 為了在 browser 上利用 Javascript 提供 VR 體驗的一套 web framework，<a href=\"https://aframe.io/docs/0.5.0/guides/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官網</a> 上有很詳細的教學與介紹。\n核心基於 HTML 與 entity-component-system framework (似乎是一套遊戲上常用的 pattern，像是 Unity)，雖然我不懂遊戲，但他的概念頗簡單，<strong>\"ECS favors composition over inheritance\"</strong>。</p>\n<p>在每個場景（scene）中的每個物件（object）都是一個 <strong>entity</strong>，<strong>entity</strong> 可以想做一個物件的空殼，而該空殼的動作、行為、外觀皆是由 <strong>components</strong> 來完成。\n所以透過在場景中混搭組合各種 components 就能創造出無數種的物件，這種方式若是用繼承的方式則會需要 create 許多特殊的 class 才行。</p>\n<p>在 A-frame 中，一個 entity 就是 <code class=\"language-text\">&lt;a-entity>&lt;/a-entity></code>。</p>\n<p>而這個 entity 可以掛載上各種 component，大致的方式如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">AFRAME</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sun'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  schema<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    degree<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something when component is plugged in.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something when component's data is updated.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>接著就能夠在 html 中使用 sun 這個 component，<code class=\"language-text\">&lt;a-entity sun=\"degree: 5; color: yellow\">&lt;/a-entity></code>。\n（這邊比較會跟一般的 html tag 混淆，因為 tag 上看似 attribute 的東西其實是 entity 掛載的 component。）</p>\n<p>就像 Web component 一樣，A-frame 也有個 <a href=\"https://aframe.io/aframe-registry/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A-Frame Registry</a> 在收集各種開發者貢獻的 component。</p>\n<p>除了 <code class=\"language-text\">&lt;a-entity>&lt;/a-entity></code> 以外，Web VR 還有許多原生原件，像是 <code class=\"language-text\">&lt;a-scene></code>、<code class=\"language-text\">&lt;a-assets></code>、<code class=\"language-text\">&lt;a-box></code> 等等。\n這些 Primitives 的 tag 也是一種 entity，主要是包含了一些複雜但是 common 的元件（像是 <a-sky>，用來代表場景中的天空），\n以 <code class=\"language-text\">&lt;a-box></code> 為例，其實就是一個包含 geometry 與 material components 的 entity：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>entity id<span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span> geometry<span class=\"token operator\">=</span><span class=\"token string\">\"primitive: box\"</span> material<span class=\"token operator\">=</span><span class=\"token string\">\"color: red\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>entity<span class=\"token operator\">></span></code></pre></div>\n<p>也可以透過 <code class=\"language-text\">AFRAME.registerPrimitive</code> 的方式來註冊：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">AFRAME</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerPrimitive</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-wave'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Attaches the wave component by default.</span>\n  <span class=\"token comment\">// And smartly makes the wave parallel to the ground.</span>\n  defaultComponents<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    wave<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    rotation<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Maps HTML attributes to wave component's properties.</span>\n  mappings<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token operator\">:</span> <span class=\"token string\">'wave.width'</span><span class=\"token punctuation\">,</span>\n    depth<span class=\"token operator\">:</span> <span class=\"token string\">'wave.depth'</span><span class=\"token punctuation\">,</span>\n    density<span class=\"token operator\">:</span> <span class=\"token string\">'wave.density'</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'wave.color'</span><span class=\"token punctuation\">,</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token string\">'wave.opacity'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這樣就有一個 Primitives 元件可用，<code class=\"language-text\">&lt;a-wave color=\"aqua\" depth=\"100\" width=\"100\">&lt;/a-wave></code></p>\n<p>其中可以看到我們有 <code class=\"language-text\">defaultComponents</code> 與 <code class=\"language-text\">mappings</code> 兩個 properties 可以用，分別讓你設置這個 entity 的 default component 與 將 HTML 的 attribute 映射到你自定義的 component 的屬性中，\n向這邊就是將 html 的 width 映射到 wave 這個 component 的 width 屬性。</p>\n<p>更詳細內容可以參考官網 <a href=\"https://aframe.io/docs/0.5.0/primitives/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">primitives</a></p>\n<h2 id=\"our-first-web-vr-scene-skeleton\" style=\"position:relative;\"><a href=\"#our-first-web-vr-scene-skeleton\" aria-label=\"our first web vr scene skeleton permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Our first Web VR Scene (Skeleton)</h2>\n<p>接下來從實作一個最簡單的 Web VR Scene 來一步步認識 Web VR 的一些基礎元件。</p>\n<p>Web VR 的基礎骨幹：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://aframe.io/releases/0.5.0/aframe.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">&lt;a-scene></code> 會 setup 一切 VR 所需的東西，並包含所有 entities，包含 WebGL, canvas, camera 等等，另外還有一些針對不同平台的 WebVR support，一個 out of box 的 magic tag！\n加上這個以後，整個 html 就會變成 WebVR 的骨幹了，你在 codepen 上的話就會看到右下角有個眼鏡的圖示。（當然記得要載入 aframe.js）</p>\n<p>接著，我們需要瞭解一下在 A-frame 的世界中的座標系統，採用所謂的 <a href=\"https://en.wikipedia.org/wiki/Right-hand_rule\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">right-hand rule</a></p>\n<p><img src=\"/image/right-hand-rule.png\" alt=\"Right-hand rule\" title=\"Right-hand rule\"></p>\n<p>在 WebVR API 回傳的距離資料以 Meter 為單位，因此在 A-frame 中的距離單位也是 Meter，所以當你在設計你的 WebVR project 時要注意一下，<code class=\"language-text\">height: 10</code> 跟 <code class=\"language-text\">width: 10</code> 在一般開發 web 來說好像很小，\n但在 A-frame 中可是會超大。</p>\n<h2 id=\"add-entity\" style=\"position:relative;\"><a href=\"#add-entity\" aria-label=\"add entity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Entity</h2>\n<p>再來我們可以在 <code class=\"language-text\">&lt;a-scene></code> 中加入 <code class=\"language-text\">&lt;a-cylinder color=\"red\">&lt;/a-cylinder></code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-cylinder</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-cylinder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>當你放上去以後應該會覺得奇怪，怎麼什麼都看不到，轉動了一下才發現東西在你腳下ＸＤ\n原因很簡單，我們沒有設定 postion，所以 x, y, z 軸都是 0。根據 right-hand rule，我們可以給 position component 一些參數，另外還可以進行 rotation 與 scale：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-cylinder</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 2 -5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 45 45<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1 1 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-cylinder</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>如此應該就能看到如下結果：</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"MpLwKa\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"webVR-test-demo1\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/MpLwKa/\">webVR-test-demo1</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>Note：這邊岔開介紹一下 codepen 上的 WebVR 功能，點選右下角眼鏡可以進入全 VR 環境，在電腦上 default 的控制是用滑鼠拖拉，或是 WASD 控制，如果你有 VR headset 就能更直接的體驗。</p>\n<h2 id=\"add-background\" style=\"position:relative;\"><a href=\"#add-background\" aria-label=\"add background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Background</h2>\n<p>我們可以透過 <code class=\"language-text\">&lt;a-sky>&lt;/a-sky></code> 來增加背景，裡面可以單純設置顏色、360度的影片或照片</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>sky src<span class=\"token operator\">=</span><span class=\"token string\">\"http://i.imgur.com/JHZjdp6.jpg\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>sky<span class=\"token operator\">></span></code></pre></div>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"yMZNXO\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"webVR-test-demo2\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/yMZNXO/\">webVR-test-demo2</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>這樣我們就有一個漂浮在城市空中的圓柱體了 XD  (<a href=\"http://www.nwicon.com/seattle-view-from-the-top-of-the-space-needle.htm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">圖片來源</a>)</p>\n<h2 id=\"asset-management-system\" style=\"position:relative;\"><a href=\"#asset-management-system\" aria-label=\"asset management system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Asset Management System</h2>\n<p>在 A-frame 裡面有個 <code class=\"language-text\">&lt;a-assets></code>，用來管理所有 Entity 的 assets 資源，與其直接寫在 inline 裡面在 runtime 時讀取，透過定義在 <code class=\"language-text\">&lt;a-assets></code> 中可以讓 Browser 更輕易地做 cache，而 A-frame 會保證在 render 之前就把這些資源都載好，因此官方建議使用這種方式來處理圖片等 assets。</p>\n<p>用法很簡單，在 <code class=\"language-text\">&lt;a-assets></code> 中宣告 <code class=\"language-text\">&lt;img></code>，然後設定好 id，接著在想使用該 asset 的 entity 中的 src 指定對應 id 即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-assets</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>skyTexture<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://i.imgur.com/JHZjdp6.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-assets</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-sky</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#skyTexture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-sky</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"more-entity-ground-light-animation\" style=\"position:relative;\"><a href=\"#more-entity-ground-light-animation\" aria-label=\"more entity ground light animation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More entity (Ground, Light, Animation)</h2>\n<h3 id=\"ground--light\" style=\"position:relative;\"><a href=\"#ground--light\" aria-label=\"ground  light permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ground &#x26; Light</h3>\n<p>基本的場景除了天空以外，當然還要有地板、燈光，地板其實有很多種選擇，可以用 <code class=\"language-text\">&lt;a-plane></code>，也能用 <code class=\"language-text\">&lt;a-cylinder></code>，只要設置對的高度跟方位即可。\n以 <code class=\"language-text\">&lt;a-plane></code> 來說，因為他 defalut 的角度是與 XY 平行，因此我們要將 X 軸反轉九十度，讓他與 XZ 平行：</p>\n<p><code class=\"language-text\">&lt;a-plane src=\"#groundTexture\" rotation=\"-90 0 0\" width=\"30\" height=\"30\">&lt;/a-plane></code></p>\n<p>另外場景中很重要的燈光，在目前的例子中，我們都沒有特別設定，A-frame 會自己幫我們定義一個 ambient light 和 directional light，一旦我們有了自己的設定，default 值就會被拔掉。</p>\n<p>基本有兩種燈光可以設定：</p>\n<ul>\n<li>ambient: 針對整個 scene 的燈光設定</li>\n<li>point: 像是一個電燈泡，我們可以調整其位置與強度，讓 entity 上的光影效果因應距離與角度的不同有所變化。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-light</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ambient<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#445451<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-light</span><span class=\"token punctuation\">></span></span>\n    // intensity 為強度 2 距離在 x y z: 2 4 4 的燈泡\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-light</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>point<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">intensity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2 4 4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-light</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"animation\" style=\"position:relative;\"><a href=\"#animation\" aria-label=\"animation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Animation</h3>\n<p>A-frame 有內建的 <a href=\"https://aframe.io/docs/0.5.0/core/animations.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">animation system</a>，要使用很簡單，加上 <code class=\"language-text\">&lt;a-animation></code> 即可（文件上寫說這個 entity 將被取代，不過在我寫文的當下，該 issue 從 aframe 的 milestone 拔除了，所以還需要再觀察看看。）</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-cylinder</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 2 -5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 45 45<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1 1 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-animation</span> <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 60 45<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2000<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-animation</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-cylinder</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>是的，A-frame 中的 entity 可以有 child，而 child 會擁有 parent 設定的位置與角度等等，A-frame 會幫你處理好。</p>\n<p>這邊我們的動畫讓 <a-cylinder> 改變 rotation，到 30 60 45，也就是往 Y 軸轉動到 60 度，方向是 alternate，兩秒內做完，並且不斷 repeat。\n如果要多個動畫，就再加上一個 <a-animation>。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-cylinder</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 2 -5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 45 45<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1 1 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-animation</span> <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30 60 45<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2000<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-animation</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-animation</span> <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>position<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 2.2 -5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2000<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-animation</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-cylinder</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>現在我們的圓柱體會上下左右旋轉移動了！</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"aJXvZa\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"webVR-test-demo3\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/aJXvZa/\">webVR-test-demo3</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"add-user-interation\" style=\"position:relative;\"><a href=\"#add-user-interation\" aria-label=\"add user interation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add user interation</h2>\n<p>VR 如果不能互動，還有什麼意義嗎？</p>\n<p>雖然我們沒有 VR 設備，但 A-frame 有提供給 Desktop 的開發者一個好用的內建 component <code class=\"language-text\">&lt;a-cursor></code>，用來模擬 controllers，我們要讓 controller 固定在 camera 的中間，也就是跟著我們的眼睛，\n只要當作 child 放在 <a-camera> 底下即可。\n(cursor 可以監聽的事件在此 <a href=\"https://aframe.io/docs/0.5.0/components/cursor.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://aframe.io/docs/0.5.0/components/cursor.html</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-camera</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-cursor</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-cursor</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-camera</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>如此一來我們就可以用滑鼠來做點擊的動作。</p>\n<p>要讓場景中的物件跟隨我們的點擊有所反應的話，有兩種做法：</p>\n<ul>\n<li>\n<p>Event Listener Component:\n如同一般我們在 Web 當中一樣，用 javascript 去 querySelector 出 object，接著加上 EventListener：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n        <span class=\"token keyword\">const</span> cylinderEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-cylinder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cylinderEl<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cylinderEl<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scale'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>也可以設置一個 component 然後 attach 到 Entity 上：\n<code class=\"language-text\">js\n        &lt;script>\n            AFRAME.registerComponent('scale-on-mouseenter', {\n                schema: {\n                    to: {default: '2.5 2.5 2.5'}\n                },\n                init: function () {\n                    var data = this.data;\n                    // 在這邊設定 listener\n                    this.el.addEventListener('mouseenter', function () {\n                        this.setAttribute('scale', data.to);\n                    });\n                    this.el.addEventListener('mouseleave', function () {\n                        this.setAttribute('scale', data.leave);\n                    });\n                }\n            });\n        &lt;/script></code>\n<code class=\"language-text\">html\n        &lt;!-- 掛載一個 sacle-on-mouseenter component 上去 -->\n        &lt;a-cylinder color=\"red\" position=\"0 2 -5\" rotation=\"30 100 0\" scale=\"1 1 1\" height=\"0.2\"\n            scale-on-mouseenter=\"to: 2.2 2.2 2.2\">\n            &lt;a-animation attribute=\"rotation\" to=\"30 90 90\" direction=\"alternate\" dur=\"2000\"\n            repeat=\"indefinite\">&lt;/a-animation>\n            &lt;a-animation attribute=\"position\" to=\"0 2.2 -5\" direction=\"alternate\" dur=\"2000\"\n            repeat=\"indefinite\">&lt;/a-animation>\n        &lt;/a-cylinder></code></p>\n</li>\n<li>Animating on Event:\n另一種方式很簡單，是直接設定 Event 到 <a-animation> 上頭，但你就少了一些自由操作的彈性：\n<code class=\"language-text\">html\n        &lt;a-cylinder color=\"red\" position=\"0 2 -5\" rotation=\"30 100 0\" scale=\"1 1 1\" height=\"0.2\"\n            scale-on-mouseenter=\"to: 2.2 2.2 2.2\">\n            &lt;a-animation attribute=\"rotation\" to=\"30 90 90\" direction=\"alternate\" dur=\"2000\"\n            repeat=\"indefinite\">&lt;/a-animation>\n            &lt;a-animation attribute=\"position\" to=\"0 2.2 -5\" direction=\"alternate\" dur=\"2000\"\n            repeat=\"indefinite\">&lt;/a-animation>\n            &lt;a-animation attribute=\"scale\" begin=\"mouseenter\" dur=\"300\" to=\"2.2 2.2 2.2\">&lt;/a-animation>\n            &lt;a-animation attribute=\"scale\" begin=\"mouseleave\" dur=\"300\" to=\"1 1 1\">&lt;/a-animation>\n            &lt;a-animation attribute=\"rotation\" begin=\"click\" dur=\"2000\" to=\"30 405 0\">&lt;/a-animation>\n        &lt;/a-cylinder></code></li>\n</ul>\n<p>中間的點（cursor）移入與移出圓柱體時會放大縮小，點擊時會旋轉：</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"BWMjBd\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"webVR-test-demo5\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/BWMjBd/\">webVR-test-demo5</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>到目前為止學到的東西其實已經足夠我們回去最開始我提及的那篇文章 <a href=\"https://css-tricks.com/minecraft-webvr-html-using-frame/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://css-tricks.com/minecraft-webvr-html-using-frame/</a> 深入閱讀，\n大部分的內容在我這篇都有涵括到了，但透過閱讀該篇文章可以更了解如何利用 reusable 的 component 製作出一個 VR 的 Minecraft！並且裡面還有教你怎麼要設置 Vive, Oculus 的 controller，很推薦閱讀！</p>\n<p>最後，再告訴大家一個好康，A-frame 有提供 Inspector<a href=\"https://github.com/aframevr/aframe-inspector\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a>！而且只要在你的 html 加上：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span> <span class=\"token attr-name\">inspector</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url: https://aframe.io/releases/0.3.0/aframe-inspector.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Scene... --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>接著按下 <code class=\"language-text\">&lt;ctrl> + &lt;alt> + i</code>，就可以看到如下畫面了！</p>\n<p><img src=\"/image/vr-inspector.png\" alt=\"aframe-inspector\" title=\"aframe-inspector\"></p>\n<p>A-frame 使用起來真的很簡單方便，大家都來玩玩看吧！</p>\n<p>這邊有瀏覽器支援度：<a href=\"https://webvr.rocks/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://webvr.rocks/</a></p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://aframe.io/docs/0.5.0/guides\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A-frame.io</a></li>\n<li><a href=\"https://css-tricks.com/minecraft-webvr-html-using-frame/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Minecraft webVR using A-frame</a></li>\n<li><a href=\"https://mozvr.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mozilla VR</a></li>\n<li><a href=\"https://webvr.rocks/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">webvr.rocks</a></li>\n<li><a href=\"https://www.gamedev.net/resources/_/technical/game-programming/understanding-component-entity-systems-r3013\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Understanding Component-Entity-Systems</a></li>\n</ol>","fields":{"slug":"web-vr-101"},"frontmatter":{"title":"Web VR 初探","date":"04-01-2017","tags":["web vr","javascript"]},"timeToRead":12}},"pageContext":{"slug":"web-vr-101","prev":{"excerpt":"好歌分享：莫宰羊 - 健康快樂","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/SfehQq0wC84\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">莫宰羊 - 健康快樂 </a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/SfehQq0wC84\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<p>去年年底時趁著 Udemy 特價，買了上面很有名的課程 - JavaScript: Understanding the Weird Parts，當初會想買是因為他最後面有個章節是介紹如何建構自己的 JS Framework，\n而我一直都很想有系統性地去瞭解建構一個可供大家使用的 JS library 或是 framework 需要注意哪些事項，該怎麼寫才是安全有彈性的結構。</p>\n<p>大約花了三天的時間斷斷續續把課程上完，這邊紀錄一下該章節的一些筆記，並實做一個小小的 js library 當範例。</p>\n<h3 id=\"goal\" style=\"position:relative;\"><a href=\"#goal\" aria-label=\"goal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Goal</h3>\n<p>目標是建構一個 js library，可以將數字做一些簡化約分，像是我在 <a href=\"http://blog.techbridge.cc/2017/03/04/webcomopnent-practice/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Web Component 實戰</a> 中所實作的 function。\n並讓 user 透過 <code class=\"language-text\">&lt;script src=\"formatNum.js\" /></code> 的方式就能載入使用。</p>\n<p>完整的 code 如下：</p>\n<p><a class=\"jsbin-embed\" href=\"http://jsbin.com/cayelaxewu/embed?js,console\">JS Bin on jsbin.com</a><script src=\"http://static.jsbin.com/js/embed.min.js?3.41.9\"></script></p>\n<h3 id=\"structuring-safe-code\" style=\"position:relative;\"><a href=\"#structuring-safe-code\" aria-label=\"structuring safe code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Structuring Safe Code</h3>\n<p>要建構一個安全的 JS lib，勢必需要保護好自己的 scope 不受外部影響，也不會去影響外部。要做到這件事最簡單的方式就是使用一個 IIFE (Immediately Invoked Function Expression)，</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而我們需要將 lib 能夠 export 到外部供人使用，所以在這個立即執行函式中需要傳入 window 物件，在函式內我們則取名為 global，這樣未來如果想要執行在不同環境，像是 nodejs 裡面時，可以不用更改內部的變數名稱，\n只要修改傳入的 window 變數即可。</p>\n<p>另外最前方可以加上個分號，以免有其他人的 code 沒有用分號做結尾而造成問題，不過這個並不是必須的。</p>\n<p>在這個立即執行函式中的變數除非我們刻意 export 出去，否則都只存在於自己的作用域內，是個安全的結構。</p>\n<p>下方的 <code class=\"language-text\">supportedUnit</code> 與 <code class=\"language-text\">unit</code> 在外部都無法存取，無法透過 <code class=\"language-text\">FormaNum.unit</code> 取得。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// hidden within the scope of the IIFE and never directly accessible</span>\n    <span class=\"token keyword\">const</span> supportedUnit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'scientific'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        normalUnit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"k\"</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        siUnit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E18</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"E\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E15</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"P\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E12</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"T\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E9</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"G\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E6</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E3</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"k\"</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"object-prototype-and-properties\" style=\"position:relative;\"><a href=\"#object-prototype-and-properties\" aria-label=\"object prototype and properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object, Prototype and Properties</h3>\n<p>接著就是開始實作我們的 lib 內容了，這門課程中，有帶著我們了解 JQuery 的 source code，看看這個偉大的 lib 是如何架構其內部程式，其中很特別的地方在於它 new 一個物件的方式，\n通常我們載入一個別人寫好的物件，或是我們自己寫好了一個物件，要使用的時候會需要透過 <code class=\"language-text\">const objectInstanc = new Object()</code> 的方式來產生物件實例，但為何我們使用 JQuery 的時候都不需要特別使用 new 關鍵字呢？</p>\n<p>因為在 JQuery 中，他透過下面的方式來幫你在每次使用它時自動 new 了一個物件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token comment\">// 'new' an object</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FormatNum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormatNum<span class=\"token punctuation\">.</span>init</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//...</span>\n\n    <span class=\"token comment\">// the actual object is created here, allowing us to 'new' an object without calling 'new'</span>\n    FormatNum<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span> num <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>digits <span class=\"token operator\">=</span> digits <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>unit <span class=\"token operator\">=</span> unit <span class=\"token operator\">||</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">;</span>\n        \n        self<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這時候你可能會想說，這樣的寫法，不就代表我要加 method 到 prototype 的話，都是要加在 <code class=\"language-text\">FormatNum.init.prototype</code> 了嗎？ 這樣有點奇怪耶，畢竟我的 lib 是叫做 FormatNum呀！</p>\n<p>沒錯，所以我們可以將 FormatNum.init.prototype 在指定到 FormatNum.prototype 上：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    FormatNum<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token class-name\">FormatNum</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span></code></pre></div>\n<p>透過短短這兩個步驟，我們就能夠不需要自己 new object，同時又能直接在 FormatNum 上面設置 prototype method！</p>\n<p>另外，透過在每個 method 的最後 return this，就能讓我們的 function chainable。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// prototype holds methods (to save memory space)</span>\n    <span class=\"token class-name\">FormatNum</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token function-variable function\">validate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">///</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      \n        <span class=\"token function-variable function\">calculate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">unitType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">///</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      \n        <span class=\"token function-variable function\">formatScientific</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'siUnit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token function-variable function\">formatNormal</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'normalUnit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// chainable methods return their own containing object</span>\n        <span class=\"token function-variable function\">format</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> formattedNum<span class=\"token punctuation\">;</span>\n            \n            <span class=\"token comment\">// if undefined or null it will be coerced to 'false'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unit <span class=\"token operator\">===</span> <span class=\"token string\">'scientific'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                formattedNum <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatScientific</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                formattedNum <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatNormal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>\n          \n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formattedNum <span class=\"token operator\">=</span> formattedNum<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 'this' refers to the calling object at execution time</span>\n            <span class=\"token comment\">// makes the method chainable</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token function-variable function\">log</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formattedNum is: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formattedNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token comment\">// make chainable</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"export-to-outside-world\" style=\"position:relative;\"><a href=\"#export-to-outside-world\" aria-label=\"export to outside world permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export to outside world</h3>\n<p>最後我們只要加上 <code class=\"language-text\">global.FormatNum = global.F$ = FormatNum;</code></p>\n<p>就可以在外部使用 <code class=\"language-text\">FormatNum</code> 或是 <code class=\"language-text\">F$</code> 來呼叫我們的 lib 了！</p>\n<h3 id=\"小問題\" style=\"position:relative;\"><a href=\"#%E5%B0%8F%E5%95%8F%E9%A1%8C\" aria-label=\"小問題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小問題</h3>\n<p>在實作範例時，本來想直接全用 ES6 寫（課程主要都是 ES5），但是在這邊的 function 都不能用 ES6 的 arrow function 取代，<code class=\"language-text\">this</code> 的作用域不同，會造成問題。\n<a href=\"https://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇有提到</a>\narrow function 會 binding 到整個 module 的 scope，而非 object。不知道是否有什麼好方法可以解決，等我查到後再來補上。</p>","id":"c2f70c5f-5181-5121-ba39-71a2245daa09","fields":{"slug":"build-own-js-lib"},"frontmatter":{"date":"2017-04-01T15:21:37.000Z","title":"[筆記] JavaScript: Understanding the Weird Parts --- Build your own lib/framework","tags":["javascript","note"],"type":"tech","slug":"build-own-js-lib"},"timeToRead":4},"next":{"excerpt":"今天來點輕鬆的，看標題就知道我想介紹一下 Atomic CSS，這是一套由 Yahoo 開源的 CSS 工具，工作上使用了蠻長一段時間，一開始使用起來其實覺得蠻不習慣的，\n但是久了以後發現搭配 React 寫起來雖然醜了點但是方便又易懂，非常適合獨立作業的前端工程師（設計師不參與 HTML, CSS 切版等動作），待我稍後慢慢說來～ 在介紹 Atomic CSS 之前，我想順便複習一下現今的 CSS methodology，以及 React 出現後對 CSS 的影響，進而帶出 Atomic…","html":"<p data-height=\"300\" data-theme-id=\"29194\" data-slug-hash=\"bWqOeK\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"css-is-awesome\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/bWqOeK/\">css-is-awesome</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<!-- more -->\n<p>今天來點輕鬆的，看標題就知道我想介紹一下 <a href=\"https://acss.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atomic CSS</a>，這是一套由 Yahoo 開源的 CSS 工具，工作上使用了蠻長一段時間，一開始使用起來其實覺得蠻不習慣的，\n但是久了以後發現搭配 React 寫起來雖然醜了點但是方便又易懂，非常適合獨立作業的前端工程師（設計師不參與 HTML, CSS 切版等動作），待我稍後慢慢說來～</p>\n<p>在介紹 Atomic CSS 之前，我想順便複習一下現今的 CSS methodology，以及 React 出現後對 CSS 的影響，進而帶出 Atomic CSS 想解決的問題與其帶來的好處。後續的一些說明多參考自許多網路資源，附錄在文章最後面。</p>\n<h2 id=\"css-架構心法\" style=\"position:relative;\"><a href=\"#css-%E6%9E%B6%E6%A7%8B%E5%BF%83%E6%B3%95\" aria-label=\"css 架構心法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 架構心法</h2>\n<p>剛開始接觸前端時，對於 CSS 也不太會去思考什麼架構，覺得就自己 class name 命名清楚一點，檔案整理好一點就好，但是這幾乎僅適用於專案規模還算小的時候，一但開發的專案龐大起來，並且有多位前端工程師在進行程式碼撰寫時，就很容易遇到命名衝突、stylesheet 過於龐大等問題，主因是在 CSS 的世界中，所有規則集都是全域的。（註：規則集 (ruleset) - 由一個宣告區塊所涵括的一或多個選擇器所組成, ex: <code class=\"language-text\">modal-text { color: #000, font-size: 12px }</code>）</p>\n<p>為了更加明確的管理 CSS，開始有人提出一些 CSS 的架構心法，想讓 CSS 也能有良好的<strong>重用性</strong>、<strong>維護性</strong>與<strong>延展性</strong>。</p>\n<p>比較有名的 CSS 架構心法大致上分為這三種：</p>\n<ul>\n<li>OOCSS</li>\n<li>SMACSS</li>\n<li>BEM</li>\n</ul>\n<p>有份流傳已久的投影片在說明這三種心法：<a href=\"https://www.slideshare.net/kurotanshi/css-oocss-smacss-bem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">漫談 CSS 架構方法 - Kuro Hsu</a></p>\n<p>這邊我就簡單節錄重點：</p>\n<p><span style=\"font-size: 2rem; color: #ba0707;\">OOCSS</span></p>\n<p>身為工程師，看到 OO 兩個字一定就會想到 Object-Oriented 吧，OOCSS 主意就在於將 CSS 物件化、模組化，其主要原則有兩個：</p>\n<p><span style=\"font-size: 1.2rem; color: #2626cc\">1. Separation of Structure from Skin: </span></p>\n<p>Structure 可以看作是 CSS 中定義元素的 box-modal 大小、margin 與 position 的部分，而 Skin 自然就是表現性的 Style，像是顏色、字型大小、border-color、box-shadow 等等，在 OOCSS 的原則中，這兩部分的 CSS 不能混合在同一個規則集中。</p>\n<p>Example:</p>\n<p>一般在定義一個 div 的長相時，直覺就會寫出下列這種 CSS，根據該 div selector 定義好其大小、位置與顏色</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#modal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #1ED3A9<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>#09D083<span class=\"token punctuation\">,</span> #1ED3A9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#button</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #1ED3A9<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>#09D083<span class=\"token punctuation\">,</span> #1ED3A9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>而 apply OOCSS 的第一原則後，可以修改成如下，將共用的表現型 Style 抽取出來，並且以 class 取代 id 作為 selector，讓其可以 reuse：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.modal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>-50%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.button</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.defaultTheme</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid 1px #1ED3A9<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>#09D083<span class=\"token punctuation\">,</span> #1ED3A9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> .5<span class=\"token punctuation\">)</span> 2px 2px 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><span style=\"font-size: 1.2rem; color: #2626cc\">2. Separation of Containers and Content:</span></p>\n<p>關於 OOCSS 的第二原則，白話來說就是要求你將 css 與 html 盡量切割，以可共用的 class selector 來定義 style 並放入該 html 元素中。</p>\n<p>Example:</p>\n<p>假設我們定義 Header id 底下的 h1 要是如下 style：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#header h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #1ED3A9\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>假若之後想要在不同地方的 h1 有不同顏色，但同時保有相同 size 呢？你得這樣複寫：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#header h1, #footer h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #1ED3A9\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#footer h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>這樣不僅是有重複的 style，更是難以維護，以 OOCSS 的角度來看，若將這些共用的 style 另外包成 class，最後在 apply 到需要的 html 上，會清楚許多。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header commonFontSize<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer commonFontSize<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.commonFontSize</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.header</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #1ED3A9\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>OOCSS 的指標人物 Nicole Sullivan 有個 <a href=\"https://github.com/stubbornella/oocss/wiki/Content\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">media object</a> 的 reusable module 以 oocss 概念實作，大家可以參考。</p>\n<p>總結一下 OOCSS 優點與實作方針：</p>\n<p>優點：更小的 css size，能讓網站加速；更方便管理模組化的 css stylesheet。\n實作方針：避免 descendent selector 與 id selector，使用 class 並盡量與 html 元素綁定。\n<strong>Don' do</strong>: <code class=\"language-text\">#button h3</code>, <code class=\"language-text\">span.title</code></p>\n<p><span style=\"font-size: 2rem; color: #ba0707;\">SMACSS</span></p>\n<p>SMACSS 有線上的官方電子書 <a href=\"https://smacss.com/book/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scalable and Modular Architecture for CSS</a></p>\n<p>看名稱就知道是以整體專案的 Architecture 來考量，與 OOCSS 我覺得是相同概念，只是關注點的起始位置不同，從不同瀏覽器對於基礎元件的 style 就開始考量，除了與 OOCSS 相似但有規範的 <strong>結構分類</strong> 與 <strong>CSS與HTML分離</strong>，還多了命名規則的限制。</p>\n<h4 id=\"結構分類\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E6%A7%8B%E5%88%86%E9%A1%9E\" aria-label=\"結構分類 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結構分類：</h4>\n<ul>\n<li>Base</li>\n<li>Layout</li>\n<li>Module</li>\n<li>State</li>\n<li>Theme</li>\n</ul>\n<h4 id=\"base\" style=\"position:relative;\"><a href=\"#base\" aria-label=\"base permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Base:</h4>\n<p>定義頁面中HTML Element的最基本Style，包含CSS Reset(一致化各瀏覽器自定義的 style)，因此只會用到 element tag selector。</p>\n<h4 id=\"layout\" style=\"position:relative;\"><a href=\"#layout\" aria-label=\"layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layout:</h4>\n<p>所謂 Layout 就是將頁面切割定義成不同的區塊，像是 naviagtion、header、sidebar 等等，由於這些區塊大多獨立出現在頁面，因此用 ID 宣告是 ok 的，但若是有重複區塊類型，但不同 style，則可以採用 class 加上 cascade 來處理。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#sidebar</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.l-fixed #sidebar</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 10%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"module\" style=\"position:relative;\"><a href=\"#module\" aria-label=\"module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Module:</h4>\n<p>Module 基本上與 Layout 相同，都是頁面上的區塊，只是偏向於 Content，但是嚴禁使用 id 或是 element selector，只准使用 <strong>class selector</strong>，可以透過命名的方式來管理這些 class，即 <code class=\"language-text\">Subclassing</code> 或 <code class=\"language-text\">Sub module</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.modal-body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100% <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 用 dash 分隔 class (subclassing/submodule)*/</span>\n<span class=\"token selector\">.modal-header</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span> <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100% <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"state\" style=\"position:relative;\"><a href=\"#state\" aria-label=\"state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State:</h4>\n<p>State 顧名思義就是根據元件的狀態給予不同的 style，因此命名上，針對該狀態的描述越精準越好：</p>\n<p><code class=\"language-text\">&lt;div class=\"modal-button active\">&lt;/div></code></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.active</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"theme\" style=\"position:relative;\"><a href=\"#theme\" aria-label=\"theme permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Theme:</h4>\n<p>這個很好懂，其實就是針對網站主視覺定義好各種 Module 或是 Layout 需要的 Style，像是 Bootstrap、Material-UI 中也有類似概念。</p>\n<p>這邊稍為總結一下 SMACSS 的優缺，更多細節可以參考電子書：</p>\n<p>優： 根據結構分類，並定義出 Base style，最小化各瀏覽器的差異，遵守其 Layout、Module、State 規則可以有良好的重用性與維護性，並分離 CSS 與 HTML，進而幫助簡化 selector 深度，增加效能、減少 Size。\n缺：與 OOCSS 一樣，可能會造成 Class 定義過多</p>\n<p><span style=\"font-size: 2rem; color: #ba0707;\">BEM</span></p>\n<p>最後一個心法是 BEM，核心觀念與現今流行的 React, Vuejs 相像，強調模組化與 css 的重複利用性，因此只使用 Class selector，以其特有的命名規則來規範。不像先前 OOCSS 或 SMACSS 的 class 可能會讓你命名出 MargintTop-10 這樣以 skin 為主的 class name，BEM 以<strong>功能導向</strong>來命名，將網頁組成分為 <em>Block</em>, <em>Element</em>, <em>Modifier</em>。</p>\n<h4 id=\"block\" style=\"position:relative;\"><a href=\"#block\" aria-label=\"block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Block：</h4>\n<p>就是一個獨立並可重複使用的頁面元件，如同 SMACSS 的 Layout/Module，命名若有需要則以 dash (-) 串接\n<code class=\"language-text\">.search-field {...}</code>。</p>\n<h4 id=\"element\" style=\"position:relative;\"><a href=\"#element\" aria-label=\"element permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Element：</h4>\n<p>是 Block 中不可分離的小元件，一定存在於 Block 下，但 Block 不一定會有 Element。\n因為一定存在於 Block 中，因此命名會一定有 Block Name 作為 prefix，以<span style=\"font-weight: 600; color: red;\">雙底線</span>分隔 :</p>\n<p>.search-field<span style=\"color:red\">__button</span> {...}</p>\n<p><img src=\"/image/BEM_BE_example.png\" alt=\"BEM example\" title=\"BEM example\"></p>\n<h4 id=\"modifier\" style=\"position:relative;\"><a href=\"#modifier\" aria-label=\"modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modifier：</h4>\n<p>用來定義 Block 或 Element 的狀態或屬性，像是 SMACSS 的 State，可以多個 modifier 同時存在於 Block 與 Element 中。命名則以 Block 或 Element name 作為 prefix，以<span style=\"font-weight: 600; color: red;\">單底線</span>分隔</p>\n<p>.search-field_<em>button<span style=\"color:red\"></em>hover</span> {...}</p>\n<p>另外，BEM 甚至提出了依照 BEM 的架構來區分 file structure：\n（截圖至<a href=\"https://en.bem.info/methodology/quick-start/#file-structure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官網</a>）\n<img src=\"/image/BEM_file.png\" alt=\"BEM file structure\" title=\"BEM file structure\"></p>\n<h2 id=\"結論與轉折\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96%E8%88%87%E8%BD%89%E6%8A%98\" aria-label=\"結論與轉折 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論與轉折</h2>\n<p>CSS 心法除了上述三種以外，其實還有 <a href=\"https://suitcss.github.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SUIT CSS</a> 等等，不過就大同小異，主要都是希望提高 CSS 的重用性、可維護性與延展性，發展至此似乎趨於穩定，搭配 SASS 等工具幾乎已經能很好的管理 CSS 了，但是從 React 出來以後，其推薦的 CSS in JS 根本打翻了上述的哲學，既然要用 JS 來寫 component，那 CSS 直接用 inline-style 的方式寫在 jsx 中，就不用記一堆有的沒的命名規則，又不用擔心全域變數影響，多棒啊！</p>\n<p>但從來沒有完美的解法，有很多人討厭這樣的做法，所以出現了 <a href=\"http://stack.formidable.com/radium/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Radim</a> 或 <a href=\"https://github.com/css-modules/css-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS-module</a> 這樣的東西，算是蠻完美的利用 Scoped css\n來做到擁有原始 css style 使用彈性的 CSS in JS。</p>\n<p>不管是用哪種方式，朝向模組化、Scoped CSS 的方向看來都是不變的。</p>\n<p><span style=\"font-size: 2rem; color: #ba0707;\">Atomic CSS</span></p>\n<p>既然我們複習了 CSS 心法，也了解到目前因應 React 的發展而出現的 CSS-module 等方式，我們就可以來介紹一下由 Yahoo 這個曾經的網路巨人所開源的 Atomic CSS 吧！</p>\n<p><strong>這邊要特別說明一下，Atomic CSS 並不是來解決上述心法的缺點，要解決的問題都雷同，都是希望能讓 CSS 在大型專案下能擁有更好的重用性與維護性，只是採用的方法與面向不同罷了。</strong></p>\n<p>透過前述心法我們可以利用 class selector 的方式來處理命名衝突的麻煩，但是還有可能造成 stylesheet 過大，因為你可能會依據不同 component 來設置不同的 namespace，而且一個不小心，若 CSS 階層越多，效能就會越差。加上不同團隊一起開發時，可能還會有不同命名，卻有相同效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">block1__text_highlight</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">...\n\nblock2__text_bright</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>因此 Atomic CSS 提出另一種觀點：</p>\n<h4 id=\"將-css-style-最小元件化重用性最大化\" style=\"position:relative;\"><a href=\"#%E5%B0%87-css-style-%E6%9C%80%E5%B0%8F%E5%85%83%E4%BB%B6%E5%8C%96%E9%87%8D%E7%94%A8%E6%80%A7%E6%9C%80%E5%A4%A7%E5%8C%96\" aria-label=\"將 css style 最小元件化重用性最大化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>將 CSS style 最小元件化，重用性最大化</h4>\n<p>只要確保同一個 style 永遠只會被定義一次，並且可以運用在各個地方，就能解決這些問題！</p>\n<p>實際作法就看一下範例吧：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>D(f) W(100px)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>利用 Atomic css 的工具，會幫你將上述 html 中的 class name 解析成：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.D\\(f\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.W\\(300px\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>應該很淺顯易懂吧！<code class=\"language-text\">D(f)</code> 對應到 <code class=\"language-text\">display:flex</code> 這個 style，也就是說，Atomic 以一種 css style 作為 class name 的最小單位。</p>\n<p>再稍微想一下你就會發現，這根本就是在寫 inline-style，只是我們用 class name 的方式來表示而已啊！</p>\n<p>沒錯，但這樣做的好處就是可以 <span style=\"color:red\">Define once, use everywhere.</span></p>\n<p>今天你就算有另一個 div 也想要有 display:flex 的屬性，只要加上 <code class=\"language-text\">D(f)</code> 這個 class name 就可以了，同樣 style，不用重複定義 class name！</p>\n<p><strong>在大型專案內，你的元件越多、重複的屬性用得越多，相對於其他心法，你就可能省下更多 Size！</strong></p>\n<p>而且這樣的寫法，搭配 React 真的很方便，也符合原先 CSS in JS 的概念，透過串接多個 \"Atomic Class\" 的方式在元素上來達到原先 css style 的效果。</p>\n<p>來看個實際的 Example：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Modal</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>P(10px) M(20%) Pos(f) Start(50%) Bgc(#fff)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Modal<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Atomic css tool parsed 過的 css</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.Bgc\\(#fff\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.M\\(20\\%\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.Pos\\(f\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.Start\\(50%\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.P\\(10px\\)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>有發現嗎？從此以後你要看一個 component 的時候，可以直接從 jsx 檔案中看完整個元件的狀態與樣式，不用再切換 jsx 與 css 檔案了，而且透過這樣的 class name 命名，只要稍微熟悉以後，就超級好懂這個 div 用了哪些 style。（就算不懂，官網也有很方便的<a href=\"https://acss.io/reference\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查閱工具</a>）。</p>\n<p>最後列舉一下優點：</p>\n<ol>\n<li>將 class name 定義最小化，讓全站都能重複使用。</li>\n<li>透過 Atomic CSS 的 parser（or webpack loader），只會產生你有使用到的 classname 的 stylesheet。</li>\n<li>比起 inline style 的寫法更簡潔，又不會有命名衝突。</li>\n<li>加上此種 class name 很好壓縮，整體 size 可以很小。</li>\n<li>搭配 React，從此 component 的狀態與樣式合為一體。</li>\n</ol>\n<p>我知道會有很多人覺得這樣違反直覺、寫起來很醜、沒有語意化等等，我一開始也閃過這種念頭，\n但是身為工程師，我們擅長打破常規、利用創意來解決問題。\n這些 class name 的確不語意化，但是身為工程師，我想我們擅長理解這些代號。\n寫程式都知道，語言只是工具，邏輯才是重點，如果可以避免，可以不必花這麼多時間在思考命名。</p>\n<p>當然，以上只是我的觀點啦～推薦大家試用看看！</p>\n<p>同場加映另一個類似概念，但處理機制不太相同的 <a href=\"http://tachyons.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tachyons css</a></p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://www.smashingmagazine.com/2011/12/an-introduction-to-object-oriented-css-oocss/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intro-to-OOCSS</a></li>\n<li><a href=\"https://www.slideshare.net/kurotanshi/css-oocss-smacss-bem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">漫談 CSS 架構方法 - Kuro Hsu</a></li>\n<li><a href=\"http://sj82516-blog.logdown.com/posts/1077348/finish-css-intro-oocss-smacss-bem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scalable CSS - 介紹OOCSS/SMACSS/BEM</a></li>\n<li><a href=\"https://smacss.com/book/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scalable and Modular Architecture for CSS</a></li>\n<li><a href=\"https://en.bem.info/methodology/quick-start/#file-structure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BEM</a></li>\n<li><a href=\"http://tom76kimo-blog.logdown.com/posts/737611-atomic-css-introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atomic css 介紹</a></li>\n</ol>","id":"e5c22241-a6a6-5fc7-bd29-9807cd75fa0a","fields":{"slug":"css-methodology"},"frontmatter":{"date":"2017-04-29T09:51:16.000Z","title":"淺談 CSS 方法論與 Atomic CSS","tags":["css","atomic css","methodology"],"type":"tech","slug":"css-methodology"},"timeToRead":12},"type":"tech"}},"staticQueryHashes":["2123680655"]}