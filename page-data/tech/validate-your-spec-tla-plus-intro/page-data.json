{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/validate-your-spec-tla-plus-intro","result":{"data":{"markdownRemark":{"html":"<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>在年初我分享過團隊在嘗試的 <a href=\"https://blog.techbridge.cc/2021/01/03/the-self-improvement-program-20percent-time/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">self-improvement 計畫</a>，過了半年，還是持續運作中，而且也不斷有收穫，在最近一次的分享會上，後端團隊的同事提到了在設計系統上遇到的一個問題，他們想知道有沒有辦法能驗證自己設計的系統規格沒有邏輯上的錯誤；當下我最直覺的想法是：應該只能把程式照著規格寫出來後，用大量的測試去驗證吧？這也是為什麼越有經驗的人，設計出來的系統通常比較穩定，因為能想到比較多的可能性與細節。</p>\n<p>然而事實證明我還是太菜了。</p>\n<p>同事介紹了 <a href=\"https://lamport.azurewebsites.net/tla/tla.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TLA+</a> 這個 formal specification language，透過它就能讓你在撰寫實際程式碼前，先行一步針對你的規格設計從高於程式碼的抽象層進行驗證。</p>\n<p>這對我來說有點顛覆想像，因此今天就跟大家一起來認識一下 <a href=\"https://lamport.azurewebsites.net/tla/tla.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TLA+</a>！</p>\n<p>（話先說在前頭，這篇會是一個淺白的介紹文，不會涉及到太多程式語法與細節，主要目的在分享這個工具給大家認識。）</p>\n<h2 id=\"tla-的作者\" style=\"position:relative;\"><a href=\"#tla-%E7%9A%84%E4%BD%9C%E8%80%85\" aria-label=\"tla 的作者 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLA+ 的作者</h2>\n<p>介紹 TLA+ 前，必須先認識其作者 - <a href=\"https://en.wikipedia.org/wiki/Leslie_Lamport\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Leslie Lamport</a>，他除了創作出 TLA+ 語言外，也是發明<a href=\"https://en.wikipedia.org/wiki/Lamport%27s_bakery_algorithm#:~:text=Lamport&#x27;s%20bakery%20algorithm%20is%20a,by%20means%20of%20mutual%20exclusion.\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">麵包演算法</a>與 <a href=\"https://www.latex-project.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LaTeX</a> 的人（讀過資工研究所的人對這兩個應該都不陌生吧！），此外更在 2013 年拿到 <a href=\"https://en.wikipedia.org/wiki/Turing_Award\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Turing Award</a>，是個不僅僅在理論上有所突破，在實務上也貢獻良多的大神。</p>\n<p>現年已八十歲的他，除了出書以外，在幾年前更錄製了免費的線上課程來教導大家如何使用 TLA+，在 <a href=\"https://www.youtube.com/channel/UCajiu4Cj_GHOX0if3Up-eRA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Youtube</a> 與<a href=\"http://lamport.azurewebsites.net/video/videos.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">他自己的網站</a>上都找得到。今天這篇文章也是我看了其中兩部影片後總結的一些筆記，從影片與文章中，可以看出他特有的幽默感，很有趣 😂，像是突然扮個小丑：</p>\n<!-- 截圖 -->\n<p><img src=\"/image/lamport-clown.png\" alt=\"leslie-lamport-humor\"></p>\n<h2 id=\"tla-介紹\" style=\"position:relative;\"><a href=\"#tla-%E4%BB%8B%E7%B4%B9\" aria-label=\"tla 介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLA+ 介紹</h2>\n<p>TLA+ 是一門針對 digital system 進行 high-level modeling 的語言，擁有檢查模型的工具、IDE；digital system 包含演算法、程式碼、電腦系統；high-level 指的是在設計階段，在實際程式之上，是針對系統規格的驗證與說明。</p>\n<p>使用 TLA+ 是指撰寫一個 TLA+ spec，並用 TLA+ Model Checker 來執行驗證，先給大家看長相，最後會有完整的範例：</p>\n<p><img src=\"/image/tlaplus-spec-sample.png\" alt=\"tlaplus-spec-sample\"></p>\n<p>雖說是一個語言，但是 TLA+ 並不能產生可實際運行的程式碼。TLA+ 主要讓你能針對系統中 critical 的部分更好得進行建模，將非重要部份與實作細節抽離，在並行運算（concurrent）與分散式系統（distributed system）中尤其有用，能幫助你從設計上抓出透過測試難以發現的錯誤與 bug。</p>\n<p>對許多工程師來說，可能直覺會認為這東西效益不大，平常寫程式說不定連測試都沒時間寫，額外寫 TLA+ spec 去單純驗證系統設計，真的值得嗎？</p>\n<p>這是合理的質疑，但這個方法也是經過許多人實際應用後背書的，許多人學習並使用後，都認為 TLA+ 提供他們一個新的思考方式，即便在實戰上並沒有真的使用到 TLA+，也讓他們成為了更好的工程師。</p>\n<p>我想背後的原因是，透過 TLA+ 你可以學習如何更好的將系統抽象化，而抽象化思考對於寫程式與設計系統來說，是非常重要的一個能力。</p>\n<p>使用 TLA+ 最著名的例子是 Aamazon Web Services，他們用 TLA+ 設計與驗證了十幾套系統，並寫了一篇<a href=\"https://ilyasergey.net/CS6213/_static/papers/aws.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">論文 - How Amazon Web Services Uses Formal Methods</a> 分享他們如何利用 TLA+ 來對系統進行設計驗證。在每一個採用 TLA+ 的系統上，都有顯著的效果，而且不論老鳥新手，都能在幾週內上手 TLA+，是很值得投資的技術。</p>\n<h2 id=\"tla-spec-核心\" style=\"position:relative;\"><a href=\"#tla-spec-%E6%A0%B8%E5%BF%83\" aria-label=\"tla spec 核心 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TLA+ spec 核心</h2>\n<p>一個 TLA+ 主要包含三個要素：Abstraction、State machine 與 Mathematic。</p>\n<h3 id=\"abstraction\" style=\"position:relative;\"><a href=\"#abstraction\" aria-label=\"abstraction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Abstraction</h3>\n<p>如同前面所說，抽象化思考對於寫程式與設計系統來說，是非常重要的一個能力，而學習 TLA+ 最困難的地方就在於學習如何對系統進行抽象化思考。</p>\n<p>透過抽象化思考系統，能讓你不被實作細節干擾，專注在優化整體架構，可以改善的程式碼速度與大小都不是實作上程式碼優化能匹配的。Leslie Lamport 的課程中以運行在 <a href=\"https://en.wikipedia.org/wiki/Rosetta_(spacecraft)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rosetta spacecraft</a> 的程式為例，透過 TLA+ 的幫助，他們減少了 10倍的程式碼。</p>\n<p>對於 TLA+ 來說，系統的執行可以抽象化成一個離散步驟序列（A sequence of discrete steps）。</p>\n<p>舉例來說，一個時鐘（系統）的運行，是透過一連串（sequence）的時分針移動（discrete steps）而完成的。</p>\n<p>這樣的抽象化可以套用在各種系統上，甚至是並行運算的程式，也能用模擬的方式來表達出 A sequence of discrete steps。</p>\n<h3 id=\"state-machine\" style=\"position:relative;\"><a href=\"#state-machine\" aria-label=\"state machine permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State Machine</h3>\n<p>一個系統的運作可以用很多種不同方式來描述，程式語言本身就是一個描述方式，但說到底，不管是哪種方式都可以抽象成 State Machine。</p>\n<p>上面說到的 A sequence of discrete steps，就是透過每一個 step 來改變系統的 state（狀態），進而完成一系列的系統動作。</p>\n<p>一個 State Machine 可以簡化成兩個主要元素：Init 與 Next，分別代表初始狀態，以及可能的下一個狀態。</p>\n<h3 id=\"math\" style=\"position:relative;\"><a href=\"#math\" aria-label=\"math permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Math</h3>\n<p>而這些 State（狀態）的變化與交互，TLA+ 都能夠將其再近一步抽象簡化為數學表達式來呈現，透過數學表示式，能夠更精準且簡潔的表達這些抽象邏輯。</p>\n<h2 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>說了這麼多，相信還是在霧裏看花看不清楚，來個最簡單的例子解釋 TLA+ 到底能做些什麼事情吧。</p>\n<p>這裡我舉一個我覺得最好懂的例子，叫做 Die Hard，沒錯，就是布魯斯威利主演的電影。在電影裡面，他需要用一個 3 加侖的瓶子與 5 加侖的瓶子裝出 4 加侖的水（這個題目似乎蠻常出現在一些腦經急轉彎的題目中，我甚至在某個面試中被問到過...）</p>\n<p>那這個跟 TLA+ 有什麼關係呢？為什麼可以拿來當作範例？</p>\n<p>首先，我們假設 <strong>用一個 3 加侖的瓶子與 5 加侖的瓶子裝出 4 加侖的水</strong> 就是我們系統的<strong>規格</strong>，那在我們真的實際去寫演算法找答案的之前，我們要怎麼知道這個規格是正確的，是真的<strong>有辦法</strong>用一個 3 加侖的瓶子與 5 加侖的瓶子裝出 4 加侖的水？</p>\n<p>TLA+ 可以幫忙。</p>\n<p>完整的 die hard TLA+ 程式碼可以從<a href=\"https://github.com/jameshfisher/tlaplus/blob/master/examples/DieHard/DieHard.tla\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這裡觀看</a>，我只簡單講解一下主要的邏輯，語法就不著墨了，畢竟我也沒有真的學會。</p>\n<p>首先，我們先定義系統的 <strong>variables（變數）</strong>，也就是一個大瓶子與一個小瓶子：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">VARIABLES big,   \\* The number of gallons of water in the 5 gallon jug.\n          small  \\* The number of gallons of water in the 3 gallon jug.</code></pre></div>\n<p>接著定義好一個 invariant，也就是一些限制；在這個規格中，我們的限制是大瓶子最多只能裝 5 加侖，而小瓶子最多只能裝 3 加侖：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">TypeOK == /\\ small \\in 0..3 \n          /\\ big   \\in 0..5</code></pre></div>\n<p>然後定義系統的 State machine，描述初始狀態與可能的 Next state：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Init == /\\ big = 0 \n        /\\ small = 0</code></pre></div>\n<p>大小瓶子初始狀態都為空。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Next ==  \\/ FillSmallJug \n         \\/ FillBigJug    \n         \\/ EmptySmallJug \n         \\/ EmptyBigJug    \n         \\/ SmallToBig    \n         \\/ BigToSmall </code></pre></div>\n<p>可能的下個狀態會是透過各種不同的 <strong>action(steps)</strong> 所產生的，這邊我們有 <code class=\"language-text\">FillSmallJug</code>（裝滿小瓶子）、<code class=\"language-text\">SmallToBig</code>（將小瓶子的水倒入大瓶子）、<code class=\"language-text\">BigToSmall</code>（將大瓶子的水倒入小瓶子）等等。</p>\n<p>而實際的 <strong>action(steps)</strong> 也需要清楚定義其如何造成系統內的 <strong>variables（變數）</strong>的變化：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FillSmallJug  == /\\ small' = 3 \n                 /\\ big' = big</code></pre></div>\n<p>填滿小瓶子的動作，會讓 small 變數更動為 3，而 big 變數保持不變。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SmallToBig == /\\ big'   = Min(big + small, 5)\n              /\\ small' = small - (big' - big)</code></pre></div>\n<p>小瓶子倒入大瓶子，則要考慮大小瓶子內目前的水容量，已決定最終可以倒入的水量。</p>\n<p>當我們描述完整個系統的狀態與狀態轉移動作後，可以訂一個 <strong>SPEC</strong>，來告訴 TLA+ 這個系統的運行規格是什麼，以這邊為例，我們要做的就是能在保持限制（small &#x3C;=3, big &#x3C;=5）的狀況下，能從 Init 狀態，不斷透過 Next 來轉移狀態：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Spec == Init /\\ [][Next]_&lt;&lt;big, small>> </code></pre></div>\n<p>透過運行 TLA+ 的 model check，TLA+ 會將這個 spec 所能產生的各種分支狀況都跑過一遍，若運行過程都沒有出現 Error，也就是不管我們的狀態被多少次不同的 Next 改變，都不會違反我們的限制，那我們就能確保此規格是正確的。</p>\n<p>疑？你說到目前為止我們還是沒有確保整個規格可以<strong>裝出 4 加侖的水</strong>呀？</p>\n<p>很簡單，我們只要加入一個而外的限制（invariant）即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NotSolved == big # 4</code></pre></div>\n<p>這行代表 big 不會等於 4，所以若是出現 big 等於 4 的狀況，TLA+ 的 model checker 就會噴出 Error，並把他是怎麼從 Init 狀態透過哪些 steps 到達這個狀態列出來給你。</p>\n<p>所以說，如果 TLA+ model checker 跑下去，都沒有噴出 Error，那就代表這規格有問題，我們不可能用 3 加侖的瓶子與 5 加侖的瓶子裝出 4 加侖的水，但若是有可能，就會在 big 為 4 時噴出 Error。</p>\n<h3 id=\"vscode-跑-tla\" style=\"position:relative;\"><a href=\"#vscode-%E8%B7%91-tla\" aria-label=\"vscode 跑 tla permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCode 跑 TLA+</h3>\n<p>最後用個簡單的小影片給大家看看實際運行 TLA+ 是什麼感覺，這邊我用的是 VSCode + TLA+ VSCode extension，對於熟悉 VSCode 的我來說，還是比官方的 TLA+ Tookbox 直覺一些。</p>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/H2e5GccTVM0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>若是懶得看影片，最後的結果截圖如下：</p>\n<p><img src=\"/image/tla+_die_hard_result.png\" alt=\"tla+_die_hard_result\"></p>\n<p>可以看他會列出所有造成該 Invariant 出現 error 的過程，也就能知道這個規格是正確的，我們的確能夠<strong>用一個 3 加侖的瓶子與 5 加侖的瓶子裝出 4 加侖的水</strong>。</p>\n<p>最後的最後，還記得上面說過，TLA+ 會將其 Spec 抽象成數學表示式嗎？整個 diehard 的 TLA+ spec 可以透過 TLA+ 轉成如下的 <a href=\"https://github.com/jameshfisher/tlaplus/blob/master/examples/DieHard/DieHard.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pdf</a>，用數學表示式呈現（不虧是 LaTeX 的作者）：</p>\n<p><img src=\"/image/diehard-tla-pdf.png\" alt=\"diehard-tla-pdf\"></p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>今天的文章只是非常粗淺的介紹了 TLA+ 是什麼，以及它最簡單的範例，前面也有說到，它實際上是設計來針對並行運算與分散式系統的規格架構設計做驗證，這種系統的複雜程度可想而知，絕對不是一個 DieHard 範例就能呈現其強大之處，但是希望透過這篇文章，能夠帶給大家一些不同的刺激與想像；或許你跟我一樣，在此之前都不曾聽過 TLA+，也不曾想過可以針對規格去做驗證，那這篇文章應該對你還是有所幫助，若是你早已有所聞，甚至有在使用，也歡迎留言分享讓我跟其他人知道，一起教學相長！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"http://lamport.azurewebsites.net/video/videos.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lamport TLA+ Course</a></li>\n<li><a href=\"https://learntla.com/introduction/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Learn TLA+</a></li>\n<li><a href=\"https://lamport.azurewebsites.net/tla/tla.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TLA+ offical website</a></li>\n<li><a href=\"https://www.jianshu.com/p/a5aaed054f40\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">学习 TLA+ - 介绍</a></li>\n<li><a href=\"https://youtu.be/D_sh1nnX3zY\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A gentle intro to TLA+</a></li>\n</ol>","fields":{"slug":"validate-your-spec-tla-plus-intro"},"frontmatter":{"title":"用 TLA+ 幫你驗證系統規格設計","date":"07-17-2021","tags":["tla+","formal specification language","specifying systems"]},"timeToRead":9}},"pageContext":{"slug":"validate-your-spec-tla-plus-intro","prev":{"excerpt":"chromium 手下留情，別廢掉 SVG SMIL 呀！","html":"<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-additive.svg\" alt=\"animate values attribute demo\">\n</p>\n<p>chromium 手下留情，別廢掉 SVG SMIL 呀！</p>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>前幾個禮拜看到 jotai 的作者推文提到 jotai 的 logo 用了 <code class=\"language-text\">animateTransform</code> 來製作動畫（不知道 jotai 的可以看這篇 - <a href=\"https://blog.techbridge.cc/2021/03/01/jotai-intro/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jōtai 介紹</a>）：</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">If you are not familiar with SVG animation, check this out. jotai <a href=\"https://t.co/Zadia8oug7\">https://t.co/Zadia8oug7</a> 👻 logo is using &lt;animateTransform&gt;. <a href=\"https://t.co/vll2SU5f16\">pic.twitter.com/vll2SU5f16</a></p>&mdash; Daishi Kato (@dai_shi) <a href=\"https://twitter.com/dai_shi/status/1401516470882893827?ref_src=twsrc%5Etfw\">June 6, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<img src=\"https://raw.githubusercontent.com/pmndrs/jotai/master/img/title.svg\" alt=\"jotai logo\">\n<p>(要等一會兒才會出現...如果沒有，可能是 cache 問題，可以點<a href=\"https://raw.githubusercontent.com/pmndrs/jotai/master/img/title.svg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">此</a>開新頁查看。)</p>\n<p>svg 檔案會動不稀奇，像是<a href=\"https://blog.techbridge.cc/2019/11/06/svg-animation-in-10mins/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">十分鐘、五步驟，SVG 動起來！</a>中介紹的，透過第三方套件可以很容易達成，或是用一些繪圖、動畫工具也行，例如：<a href=\"https://app.svgator.com/#/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SVGator</a>，不過這些都得搭配 JavaScript，然而簡單的動畫只要利用 SVG 支援的語法即可達成！</p>\n<p>今天就一起來了解一下，怎麼在不靠其它套件的狀況下，單純的製作 SVG 動畫。</p>\n<h2 id=\"svg-animation-with-smil\" style=\"position:relative;\"><a href=\"#svg-animation-with-smil\" aria-label=\"svg animation with smil permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SVG animation with SMIL</h2>\n<p>能讓 SVG 不靠 JavaScript 與 CSS 就能動起來是因為使用了 <a href=\"https://www.w3.org/TR/REC-smil\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SMIL（Synchronized Multimedia Integration Language）</a>，音同 smile，是 W3C 的標準之一，旨在以 XML 格式提供多媒體的交互表現（白話點其實就是動畫），是 Web 上動畫的開路先鋒，啟發了 Web animation 與 CSS animation。SVG 與 SMIL 的開發團隊合作，讓 SVG 能利用 SMIL 達到如下效果：</p>\n<ul>\n<li>動畫化元素的數值屬性（x, y 值等等)</li>\n<li>動畫化元素的 transform 屬性（平移、旋轉）</li>\n<li>動畫化元素顏色</li>\n<li>軌跡路線移動動畫，類似於 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS 中的 <code class=\"language-text\">offset-path</code></a></li>\n</ul>\n<p>光是這些特性就夠我們組合出很多種的動畫了，還不需要 JavaScript 與 CSS 的輔助。</p>\n<p>使用方法也不難，只要在 SVG 元素內置入以下四種元素即可操作動畫：</p>\n<ol>\n<li><code class=\"language-text\">&lt;set></code></li>\n<li><code class=\"language-text\">&lt;animate></code></li>\n<li><code class=\"language-text\">&lt;animateTransform></code></li>\n<li><code class=\"language-text\">&lt;animateMotion></code></li>\n</ol>\n<p>接著我們針對這四種元素一一介紹。</p>\n<p>不過在開始前，有個小插曲值得一提。</p>\n<p>SMIL 這個標準其實在 2015 年的時候差點被廢除，因為使用人數少，支援的主流瀏覽器也不多，所以 chromium 工程師本來想要 deprecate 它，順勢推廣 Web animation 與 CSS animation，但在消息公布後，收到了社群很多人的回饋，最終決定暫停廢除計劃，也因此我們到現在都還能使用 SVG SMIL animation，<a href=\"https://caniuse.com/svg-smil\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">主流瀏覽器也都支援</a>了，使用者也從 0.04% 上升到 <a href=\"https://www.chromestatus.com/metrics/feature/timeline/popularity/501\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">1% 以上</a>。</p>\n<p>有興趣的讀者可以回追一下<a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/5o0yiO440LM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這串討論</a>。</p>\n<h2 id=\"svg-animation-element-介紹與示範\" style=\"position:relative;\"><a href=\"#svg-animation-element-%E4%BB%8B%E7%B4%B9%E8%88%87%E7%A4%BA%E7%AF%84\" aria-label=\"svg animation element 介紹與示範 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SVG animation element 介紹與示範</h2>\n<h3 id=\"set\" style=\"position:relative;\"><a href=\"#set\" aria-label=\"set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;set></h3>\n<p>利用 <code class=\"language-text\">&lt;set></code> 元素你能夠指定在一段時間後，改變 svg 的一個屬性，例如 2 秒後將 Rick 的眼睛變成往下看：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-set.svg\" alt=\"set element demo\">\n</p>\n<p>疑？你說他本來就是往下看的？</p>\n<p>那是因為 <code class=\"language-text\">set</code> 不會重複執行，從你載入這篇文章到看到這個位置為止，相信已經超過 2 秒，所以已經是執行後的結果，建議你按右鍵 -> \"在新分頁中開啟圖片\"，實際體驗一下，再不然看看下面的 gif 也行：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-svg-animation-set.gif\" alt=\"set element demo\">\n</p>\n<p>相關程式碼如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>56.7573<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>92.8179<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>105.7318<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2s<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>circle</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>將 <code class=\"language-text\">&lt;set></code> 元素放在你想要套用效果的 svg shape 內即可。</p>\n<p><code class=\"language-text\">attributeName</code> 指定你要更動的屬性；<code class=\"language-text\">to</code> 代表變化值；<code class=\"language-text\">begin</code> 代表從載入後的什麼時候開始執行。</p>\n<p>除了 <code class=\"language-text\">attributeName</code> 外，有另一個參數叫 <code class=\"language-text\">attributeType</code>，用來告訴瀏覽器你要動畫化的屬性值是屬於 <code class=\"language-text\">XML</code>（e.g. <code class=\"language-text\">cy</code>），還是 <code class=\"language-text\">CSS</code>（e.g. <code class=\"language-text\">opacity</code>），不指定的話，瀏覽器會自己猜。不過呢，這個參數也已經 <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/attributeType\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deprecated</a> 了，所以實際上我們不再需要它。</p>\n<h3 id=\"animate\" style=\"position:relative;\"><a href=\"#animate\" aria-label=\"animate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;animate></h3>\n<p><code class=\"language-text\">&lt;animate></code> 元素讓你能針對單一屬性變化套用動畫補間效果。用法一樣是放在你想要套用效果的 svg shape 內：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>56.7573<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>92.8179<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animate</span>\n      <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>56.7573<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>64.7573<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>circle</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>與 <code class=\"language-text\">&lt;set></code> 相比，多了 <code class=\"language-text\">from</code> 屬性來指定要從哪個值開始做變化，<code class=\"language-text\">dur</code> 指定動畫的執行時間，<code class=\"language-text\">repeatCount</code> 指定要重複幾次，這邊我們設定 <code class=\"language-text\">indefinite</code> 讓他無限重播（若看不到效果請以分頁開新圖片）：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate.svg\" alt=\"animate element demo\">\n</p>\n<p>利用 <code class=\"language-text\">animate</code>，讓 Rick 的眼睛向右看。</p>\n<p>也可以用來改變顏色：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-color.svg\" alt=\"animate element color demo\">\n</p>\n<p>也因為可以用來改變顏色，所以本來有個 <code class=\"language-text\">&lt;animateColor></code> 元素就被取代掉了，現在<a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animatecolor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">已經 deprecated 了</a>。</p>\n<h3 id=\"animatetransform\" style=\"position:relative;\"><a href=\"#animatetransform\" aria-label=\"animatetransform permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;animateTransform></h3>\n<p><code class=\"language-text\">&lt;animateTransform></code> 可以用來控制 <code class=\"language-text\">transform</code> 屬性，用 <code class=\"language-text\">animate</code> 無法做到。跟 CSS 中的 transform 一樣，可以控制 <strong>translation</strong>、<strong>scaling</strong>、<strong>rotation</strong> 跟 <strong>skewing</strong>。</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-transform.svg\" alt=\"animateTransform element demo\">\n</p>\n<p>可以讓 Rick 頭轉起來，看起來頗ㄎㄧㄤ LOL\n（註：經實測，animateTransform 在手機上似乎不支援，請用桌面版瀏覽器查看此範例）</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotate<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>360 0 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>如上面所述，要控制 <code class=\"language-text\">transform</code> 屬性，所以 <code class=\"language-text\">attributeName=\"transform\"</code>，接著 <code class=\"language-text\">type</code> 參數就看你想要 transform 的類型是什麼，<code class=\"language-text\">rotate</code>、<code class=\"language-text\">scale</code> 都可以。其餘 <code class=\"language-text\">from</code>、<code class=\"language-text\">to</code>、<code class=\"language-text\">begin</code>、<code class=\"language-text\">dur</code>等參數都與之前的相同，用來指定動畫的起始終點值、時間長度與執行次數。</p>\n<h3 id=\"animatemotion\" style=\"position:relative;\"><a href=\"#animatemotion\" aria-label=\"animatemotion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;animateMotion></h3>\n<p>最後一個元素，<code class=\"language-text\">animateMotion</code>，讓 svg 沿著軌跡 <code class=\"language-text\">path</code> 移動（若看不到效果請以分頁開新圖片）：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-motion.svg\" alt=\"animateMotion element demo\">\n</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--軌跡--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M10,50 q60,50 100,0 q60,-50 100,0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Rick 飛船 svg--></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateMotion</span>\n    <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M10,50 q60,50 100,0 q60,-50 100,0<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>上述程式碼內的 <code class=\"language-text\">&lt;path></code> 只是為了讓大家看清楚路徑與實際動畫的軌跡無關，實際使用上只要給定 <code class=\"language-text\">animateMotion</code> 一條 <code class=\"language-text\">path</code> 屬性值，包含 <code class=\"language-text\">animateMotion</code> 元素的 svg 就會跟著該路徑移動。</p>\n<p>其他屬性值跟其他元素雷同，不過 <code class=\"language-text\">animateMotion</code> 還有個特別的屬性值 <code class=\"language-text\">rotate</code>，用來指定是否要隨著路徑移動的同時，選轉綁定的 svg 物件，可以設定為 <code class=\"language-text\">auto</code> 或 <code class=\"language-text\">auto-reverse</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateMotion</span>\n  <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M10,50 q60,50 100,0 q60,-50 100,0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rotate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-motion-rotate.svg\" alt=\"animateMotion element demo\">\n</p>\n<p>此外，除了給定 <code class=\"language-text\">path</code> 屬性值外，其實也能夠利用既有的 <code class=\"language-text\">&lt;path></code> 來當作 <code class=\"language-text\">animateMotion</code> 的路徑，但是得透過 <code class=\"language-text\">mpath</code> 這個 sub-element：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--軌跡--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>path1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M10,50 q60,50 100,0 q60,-50 100,0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Rick 飛船 svg--></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateMotion</span> <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mpath</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#path1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>animateMotion</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>要注意的是，若要使用 <code class=\"language-text\">xlink:href</code> 來指定連接的 svg 元素，在你的 <code class=\"language-text\">&lt;svg></code> tag 上得先記得宣告 <code class=\"language-text\">xmlns:xlink=\"http://www.w3.org/1999/xlink\"</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 500 300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xlink</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/1999/xlink<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>有了 <code class=\"language-text\">xlink:href</code>，我們也就不用像之前範例中所做的一樣，一定得把 <code class=\"language-text\">animate</code> 元素放在要綁定的 svg shape 內，可以透過 <code class=\"language-text\">id</code> 與 <code class=\"language-text\">xlink:href</code> 來連結，例如第一個 <code class=\"language-text\">&lt;set></code> 的範例可改為：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eyes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>56.7573<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>92.8179<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">stroke-width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>circle</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span> <span class=\"token attr-name\"><span class=\"token namespace\">xlink:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#eyes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>105.7318<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2s<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>至此我們介紹完了四種 SVG animation element，除了個別拿來使用外，這些元素是能夠組合在一起使用的，就只要個別把對應的 animate element 套用在想要的 svg shape 上即可，舉例來說，可以讓 Rick 旋轉的同時，髮色改變、眼睛轉動（可右鍵看 svg 原始碼，在裡面可以找到多個 animate element）：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-combine.svg\" alt=\"combine animate elements demo\">\n</p>\n<p>（註：經實測，animateTransform 在手機上似乎不支援，請用桌面版瀏覽器查看此範例）</p>\n<h2 id=\"svg-smil-animation-重點參數介紹\" style=\"position:relative;\"><a href=\"#svg-smil-animation-%E9%87%8D%E9%BB%9E%E5%8F%83%E6%95%B8%E4%BB%8B%E7%B4%B9\" aria-label=\"svg smil animation 重點參數介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SVG SMIL animation 重點參數介紹</h2>\n<p>在上面的 Demo 裡面，我們可以發現 SVG animate element 有很多參數可以使用，範例中只用到了一部分，但其實這些參數能設定的值都有不少變化，想要清楚知道每一個參數的用途與範例，推薦參考這篇文章 - <a href=\"https://css-tricks.com/guide-svg-animations-smil/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Guide to SVG Animations (SMIL)</a>，不介意簡體中文的話，可以看<a href=\"https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇</a>，都寫得非常好非常詳細。</p>\n<p>在這個章節我會重點介紹一些我覺得比較有趣及實用的參數。</p>\n<h3 id=\"from-to-by-values\" style=\"position:relative;\"><a href=\"#from-to-by-values\" aria-label=\"from to by values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>from, to, by, values</h3>\n<p><code class=\"language-text\">from</code> 跟 <code class=\"language-text\">to</code> 在前面的範例中都有看到，功能也如同字面般好懂，就是指定動畫變化的移動區間，從（<code class=\"language-text\">from</code>）某個值變化到（<code class=\"language-text\">to</code>）另個值；而 <code class=\"language-text\">by</code> 則是代表位移量，相對於明確告知要變動到哪個值，我們可以用 <code class=\"language-text\">by</code> 告訴 svg 要變動”多少的量“，例如前面 <code class=\"language-text\">animateTransform</code> 的例子，我們可以改為：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotate<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">by</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>360<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>看到這邊你應該會注意到，<code class=\"language-text\">by</code> 跟 <code class=\"language-text\">to</code> 功能上有點重複，所以彼此之間有優先權，如果同時有指定 <code class=\"language-text\">to</code> 與 <code class=\"language-text\">by</code>，則只會套用到 <code class=\"language-text\">to</code> 的值。</p>\n<p>再來看看 <code class=\"language-text\">values</code>，這個剛剛的範例都沒出現，它的功用是來補足 <code class=\"language-text\">from</code>、<code class=\"language-text\">to</code>、<code class=\"language-text\">by</code> 的不足。不足的點在於， <code class=\"language-text\">from</code>、<code class=\"language-text\">to</code>、<code class=\"language-text\">by</code> 只能指定兩個值之間的變化，從 a 變化到 b，而 <code class=\"language-text\">values</code> 可以給定多個值，用分號 <code class=\"language-text\">;</code> 隔開，就能有 a -> b -> c -> b -> a 這樣的變化，舉個例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">values</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20;120;20<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-values.svg\" alt=\"animate values attribute demo\">\n</p>\n<h3 id=\"begin-end\" style=\"position:relative;\"><a href=\"#begin-end\" aria-label=\"begin end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>begin, end</h3>\n<p><code class=\"language-text\">begin</code> 跟 <code class=\"language-text\">end</code> 分別用來控制何時開始執行動畫，何時停止動畫，在上面的例子中我們都只用到時間，像是 <code class=\"language-text\">begin=\"2s\"</code>，但其實這兩個參數能給的值有非常多的種類，而且能向 <code class=\"language-text\">values</code> 一樣賦予多個值，只要用 <code class=\"language-text\">;</code> 隔開即可：</p>\n<p><code class=\"language-text\">begin = &lt;offset-value> | &lt;syncbase-value> | &lt;event-value> | &lt;repeat-value> | &lt;accessKey-value> | &lt;wallclock-sync-value></code></p>\n<p>每種類型的詳細介紹，我推薦直接看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/begin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a>，或是對岸網友的<a href=\"https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">整理</a>，這邊我只說明幾個我覺得比較實用的。</p>\n<p>首先是 <code class=\"language-text\">&lt;syncbase-value></code>。</p>\n<p>從字面有點難懂，主要是用其他 animate 元素的 begin/end 值再做加減，舉個例子就比較好懂：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Rick head --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scale<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">values</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1;1.2;1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ship.end<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3s<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- spaceship --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ship<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">values</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20;120;20<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>這次範例中的 svg 內有兩個 animate 元素，給定針對太空船做動畫的元素一個 id 值 <code class=\"language-text\">ship</code>，然後在 Rick 的動畫元素上利用 <code class=\"language-text\">begin=\"ship.end\"</code>，就可以讓 Rick 頭的動畫等到太空船的動畫做完後再啟動，效果如下（這需要麻煩讀者用新分頁開啟圖片來觀看）：</p>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-begin-syncbase.svg\" alt=\"animate begin syncbase demo\">\n</p>\n<p>另一個我覺得實用的值是 <code class=\"language-text\">event-value</code>，看名字就知道，是可以依照 <code class=\"language-text\">event</code> 來啟動或終結動畫，用法與 <code class=\"language-text\">syncbase-value</code> 雷同，給定元素 id，然後根據該元素觸發的事件讓動畫 <code class=\"language-text\">begin</code> 或是 <code class=\"language-text\">end</code>。幾乎所有 DOM element 支援的 event 都能使用，<a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/begin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a> 有列出所有可用事件。</p>\n<p>一樣舉個例子，點擊 Rick 就能讓太空船移動（礙於 blog 格式，這範例得放在 codepen 上）：</p>\n<p class=\"codepen\" data-height=\"182\" data-theme-id=\"29194\" data-default-tab=\"result\" data-user=\"arvin0731\" data-slug-hash=\"BaWEJpm\" style=\"height: 182px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"SVG SMIL Demo - rick and spaceship\">\n  <span>See the Pen <a href=\"https://codepen.io/arvin0731/pen/BaWEJpm\">\n  SVG SMIL Demo - rick and spaceship</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n<p>程式碼如下，<code class=\"language-text\">rickhead.click</code>（[元素 id].[event]）：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rickhead<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!--// 略 --></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ship<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>translate<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">values</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20;120;20<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rickhead.click<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>最後是 <code class=\"language-text\">indefinite</code>，如果你的 <code class=\"language-text\">begin</code> 值為 <code class=\"language-text\">indefinite</code>，代表無限等待，這時就需要透過 <code class=\"language-text\">[animate 元素].beginElement()</code> 來觸發，或是用 <code class=\"language-text\">&lt;a></code> tag 的 <code class=\"language-text\">xlink:href=\"#[animate 元素 id]\"</code> 來啟動。</p>\n<p class=\"codepen\" data-height=\"189\" data-theme-id=\"29194\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-slug-hash=\"PopgERE\" style=\"height: 189px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"SVG SMIL Demo - rick and spaceship - event trigger\">\n  <span>See the Pen <a href=\"https://codepen.io/arvin0731/pen/PopgERE\">\n  SVG SMIL Demo - rick and spaceship - event trigger</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n<h3 id=\"calcmode-keytimes-keysplines\" style=\"position:relative;\"><a href=\"#calcmode-keytimes-keysplines\" aria-label=\"calcmode keytimes keysplines permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>calcMode, keyTimes, keySplines</h3>\n<p>這三個參數主要讓你能夠更細微的調整動畫的速度變化。</p>\n<p><code class=\"language-text\">calcMode</code> 有四種模式：<code class=\"language-text\">discrete</code>、<code class=\"language-text\">linear</code>、<code class=\"language-text\">paced</code>、<code class=\"language-text\">spline</code>。</p>\n<p><strong>discrete</strong> 顧名思義就是離散的，<code class=\"language-text\">from</code> 值跳到 <code class=\"language-text\">to</code> 值不做補間; <strong>linear</strong> 跟 <strong>paced</strong> 我覺得效果雷同，都是讓讓補間動畫的速度維持一致（linear）與平均（paced）; <code class=\"language-text\">spline</code> 則是使用貝式曲線，需要搭配 <code class=\"language-text\">keyTimes</code> 與 <code class=\"language-text\">keySplines</code> 來使用。</p>\n<p><code class=\"language-text\">keyTimes</code> 就是關鍵影格，跟前面提過的 <code class=\"language-text\">values</code> 一樣，可以接受多個以分號區隔的值，定義動畫的關鍵時間點，搭配不同的 <code class=\"language-text\">calcMode</code> 就能在不同的時間點有不同的速度效果。</p>\n<p><code class=\"language-text\">keySpline</code> 是當你 <code class=\"language-text\">calcMode</code> 設定為 <code class=\"language-text\">spline</code> 時，用來定義貝式曲線的四個控制點的。</p>\n<p>這邊直接引用對岸網友精緻的 Demo 頁面給大家參考，用看的會比較清楚好理解：<a href=\"http://www.zhangxinxu.com/study/201408/svg-animation-calcmode.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">calcMode、keyTimes、keySplines 屬性 DEMO</a>。該作者對於 <code class=\"language-text\">keySpline</code> 的值也有<a href=\"https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">畫圖說明</a>，很好懂，有興趣研究的話值得一看。</p>\n<h3 id=\"additive\" style=\"position:relative;\"><a href=\"#additive\" aria-label=\"additive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>additive</h3>\n<p>看到最後，不知道你會不會有個疑問：如果我想針對同的 SVG shape 的同個屬性做多個連續變化時該怎麼辦？</p>\n<p>例如：透過 <code class=\"language-text\">animateTransform</code> 先將圖案放大再位移。</p>\n<p>這時就要靠 <code class=\"language-text\">additive</code> 這個參數出馬了，<code class=\"language-text\">additive</code> 參數告知 SVG 是否要累加（<code class=\"language-text\">sum</code>）動畫效果，或是取代（<code class=\"language-text\">replace</code>），預設是 <code class=\"language-text\">replace</code>。</p>\n<p>例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scale<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">by</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.1<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">additive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sum<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>animateTransform</span> <span class=\"token attr-name\">attributeName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>transform<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotate<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>360 0 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">begin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0s<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5s<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">repeatCount</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">additive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sum<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p style=\"text-align:center;\">\n  <img src=\"/image/rick-animate-additive.svg\" alt=\"animate values attribute demo\">\n</p>\n<p>（註：經實測，animateTransform 在手機上似乎不支援，請用桌面版瀏覽器查看此範例）</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>今天花了不小的篇幅介紹了 SVG SMIL animation，感謝看到這邊的各位，製作 Demo 的過程對我來說很有趣，也學習了怎麼繪製 SVG，從網路上的其他資源也查到許多詳細的資料，收穫不少！希望對看到這篇文章的你們也能有所啟發，除了常用的 Web animation 與 CSS animation 外，有機會也試試用 SVG 直接作動畫吧！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">超级强大的SVG SMIL animation动画详解</a></li>\n<li><a href=\"https://css-tricks.com/guide-svg-animations-smil/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Guide to SVG Animations (SMIL)</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/SVG_animation_with_SMIL\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SVG animation with SMIL</a></li>\n<li><a href=\"http://tutorials.jenkov.com/svg/svg-animation.html#set\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SVG Animation</a></li>\n</ol>","id":"d92d1023-e99a-574a-8942-b9f6a51ceb0d","fields":{"slug":"svg-smil-animation-intro"},"frontmatter":{"date":"2021-06-18T08:56:40.000Z","title":"讓 SVG 自己動起來！ SVG SMIL Animation 介紹","tags":["web","svg","animation","smil"],"type":"tech","slug":"svg-smil-animation-intro"},"timeToRead":14},"next":{"excerpt":"May the force be with you.","html":"<p>May the force be with you.</p>\n<!-- more -->\n<p><img src=\"/image/baby-yoda.gif\" alt=\"Baby yoda\"></p>\n<p><a href=\"https://tenor.com/zh-TW/view/baby-yoda-grogu-gif-20086152\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gif credits</a></p>\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>一直以來都有需要在同台電腦上切換不同 git 帳號的需求，試過一些工具都不甚理想，最後繞了一圈發現還是透過簡單的 shell script 跟 git config 設定最簡單，然而即便步驟真的很少，似乎也到了事情不記下來很容易就會忘記的階段了...（不是年齡增長只是事情越來越多 LOL）</p>\n<p>今天這篇文章算是一個小筆記，讓自己之後換電腦時能記得該怎麼設定。P.S. 這只是我自己覺得方便的設定，有需要的讀者可以自行修改成自己喜歡的形狀。</p>\n<h2 id=\"設定-ssh-keys\" style=\"position:relative;\"><a href=\"#%E8%A8%AD%E5%AE%9A-ssh-keys\" aria-label=\"設定 ssh keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>設定 ssh keys</h2>\n<p>要能 access 你的 GitHub repo，最方便的做法就是產生 ssh keys 然後綁定到 GitHub 上，接著註冊到 ssh-agent 上。</p>\n<p>這部分建議直接參考 <a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub 官方文件</a>，上面除了有 GitHub 的最新資訊外，也會額外提供作業系統版本不同時，在指令上的一些差異（像是 macOS Sierra 、 Monterey 與之前版本都有些許不同）。</p>\n<p>當你為你的個別 git account 產生 ssh key 並設定到 GitHub 上後，基本上要透過以下指令來將 key 註冊至 ssh-agent 上：</p>\n<p><code class=\"language-text\">ssh-add ~/.ssh/my_git_a</code></p>\n<p>Note: 如果你的 key 有設定 passphrase，可以加入 <code class=\"language-text\">--apple-use-keychain</code> 之類的參數，讓 ssh-agent 從你的 keychain 中抓密碼。（前提是你要有存在 Keychain 中。）</p>\n<p>你也能設定 <code class=\"language-text\">~/.ssh/config</code> 讓系統自動載入你的 key，但由於接下來切換帳號的 script 中，我是直接用 <code class=\"language-text\">ssh-add</code> 來主動設定 ssh-agent 上綁定的 key，config 這部分我就沒有設定了。</p>\n<h2 id=\"撰寫簡單的-script\" style=\"position:relative;\"><a href=\"#%E6%92%B0%E5%AF%AB%E7%B0%A1%E5%96%AE%E7%9A%84-script\" aria-label=\"撰寫簡單的 script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>撰寫簡單的 script</h2>\n<p>接著就是主要的設置。</p>\n<p>在你的 <code class=\"language-text\">.zshrc</code> 或其他 shell script rc file 中，新增下列兩個 functions：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"UserName_for_gitA\"</span>\n  <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"Email_for_gitA\"</span>\n  ssh-add -D\n  ssh-add ~/.ssh/my_git_a\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"UserName_for_gitB\"</span>\n  <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"Email_for_giＢ\"</span>\n  ssh-add -D\n  ssh-add ~/.ssh/my_git_b\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Function 內基本上就做三件事：</p>\n<ol>\n<li>設定全域的 git config 變數，讓你切換成 git A 時，user name 與 user email 會是 git A 的。</li>\n<li><code class=\"language-text\">ssh-add -D</code> 會刪除所以目前 attached 到 ssh-agent 上的 key</li>\n<li>最後加入指定的 git account key</li>\n</ol>\n<p>這樣設置好後，你就能在 terminal 中直接以 <code class=\"language-text\">gitA</code> 與 <code class=\"language-text\">gitB</code> 的指令來切換兩個 git account。</p>\n<p>如果你怕不清楚自己現在是在哪個 git account 底下，也可以另外加上一個 Function：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitwho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">git</span> config user.name\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>或是修改你 terminal 的 prompt，像是：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PROMPT</span><span class=\"token operator\">=</span><span class=\"token string\">\"\n%F{green}[%~]%f &lt;<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">git</span> config user.name<span class=\"token variable\">`</span></span>>\n=> %# \"</span>\n<span class=\"token assign-left variable\">RPROMPT</span><span class=\"token operator\">=</span><span class=\"token string\">'%*'</span></code></pre></div>\n<br>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>這樣的設定是目前最符合我需求且最快速的方式，他當然有一些明顯的缺點，像是每次切換都會刪掉所有 ssh-agent 的 entries，然後再重新加入，且一次只能有一個 key attach 在 ssh-agent 中等等。這部分理論上可以用 <code class=\"language-text\">.ssh/config</code> 來處理，但這樣一來，每次 clone repo 的時候就得注意 host 是不是跟 config 設定的一樣，我覺得有點麻煩 😅</p>\n<p>找到最適合自己的做法才能真正改善效率，這篇文章除了作為給自己的筆記外，希望也能帶給看到的讀者一點幫助，如果有更好的設置方式也歡迎留言分享！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://www.freecodecamp.org/news/manage-multiple-github-accounts-the-ssh-way-2dadc30ccaca/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How to manage multiple GitHub accounts on a single machine with SSH keys</a></li>\n<li><a href=\"https://zenn.dev/taichifukumoto/articles/how-to-use-multiple-github-accounts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">複数のGitHubアカウントを使い分けたい時の設定方法とTips</a></li>\n</ol>","id":"2deb2464-2d6b-59e6-bdce-df069ae04b56","fields":{"slug":"how-to-setup-multiple-git-account-on-the-same-machine"},"frontmatter":{"date":"2023-05-04T13:37:30.000Z","title":"如何在一台電腦上輕易切換不同的 git account 與 ssh key","tags":["git","productivity"],"type":"tech","slug":"how-to-setup-multiple-git-account-on-the-same-machine"},"timeToRead":3},"type":"tech"}},"staticQueryHashes":["2123680655"]}