{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/d-3-v-4-calendar-yearendreview","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/DaBdf8ULeiA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Surfing day feat.秋僧</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/DaBdf8ULeiA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>大概是在 2016 年底的時候，我整個人的心理狀態很糟，一直覺得自己對生活的掌控力非常低落，庸庸碌碌的過著每一天，卻不曉得自己的目標在哪，對什麼都興致缺缺，似乎把生活遺失了。</p>\n<p>我試著想從過往日常生活中的所作所為來找出一些癥結點，結果發現記憶有限，越想越覺得自己好像什麼都沒完成，接著就進入無止盡的負面迴圈...</p>\n<p>為了打破這樣的心理狀態，我從 2017 年的一月開始記錄自己每天的生活，將一整天所做的事項記錄在 Google Calendar 中，有了這樣的紀錄後，我每週都會回顧一下自己這一整個星期所做的事情，花在工作、運動、娛樂、學習等等的時間如何，讓自己在負面情緒滿漲時，能看看自己其實還是達成了不少事，同時也能隨時警惕自己在時間管理與各種事項間的分配是否有需要調整的部分。</p>\n<p>好啦，說穿了就是用 Google Calendar 寫日記。</p>\n<p>而現在又接近年底了，在這近乎一年的紀錄中，我想應該可以來做個 Year End Review，利用 D3 來幫助我將記錄在 Google Calendar 上的資料視覺化出來！</p>\n<p>大致的想法是將不同分類的資料整理出來，然後看看 <strong><em>我在這一年當中，每一天花在每一個類別的事項的 Heat Map</em></strong> 會是長什麼樣子，並加上簡單的 Select box 方便切換。</p>\n<p>成果截圖如下：</p>\n<p><img src=\"/image/arvin-yerr-calendar.png\" alt=\"YERR\"></p>\n<p>有興趣的可以連結到 <a href=\"https://bl.ocks.org/ArvinH/56909246bd584743fa5ee7ad148ad1ac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bl.ocks 看 Demo 與完整的程式碼</a></p>\n<h1 id=\"資料視覺化的第一步當然是取得資料\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5%E7%95%B6%E7%84%B6%E6%98%AF%E5%8F%96%E5%BE%97%E8%B3%87%E6%96%99\" aria-label=\"資料視覺化的第一步當然是取得資料 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料視覺化的第一步，當然是取得資料</h1>\n<p>Google 存了多少資料想必大家都心知肚明，而他老大哥也是願意把我們的資料還給我們，只要連結到 <a href=\"https://takeout.google.com/settings/takeout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Takeout</a> 就可以將你在 Google 服務上的資料副本下載下來：</p>\n<p><img src=\"/image/google-takeout.png\" alt=\"Google Takeout\"></p>\n<p>既然我要視覺化我在 Google Calendar 上的資料，當然就是選取 Calendar 來下載：</p>\n<p><img src=\"/image/google_calendar_details.png\" alt=\"Google Calendar download\"></p>\n<p>或著，你也能直接從 Google Calendar 匯出你的日曆：</p>\n<p><img src=\"/image/google_calendar_export.png\" alt=\"Export from Google Calendar\"></p>\n<p>仔細看一下，這兩種方式下載到的資料其格式都是 <a href=\"https://zh.wikipedia.org/wiki/ICalendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">iCalendar</code></a>。</p>\n<p>是 <code class=\"language-text\">iCalendar</code> 又如何呢？通用的標準格式不是很好嗎？代表我之後若換成 Apple 的 iCal，我這次的專案也能套用上去耶！</p>\n<p>But!</p>\n<p>在我當初紀錄日曆時，我每一項 item 的資訊很少，就只是單純的填入 Summary，並且依照分類給予顏色。</p>\n<p>而在 <code class=\"language-text\">iCalendar</code> 的標準中，並沒有 Google Calendar 的顏色資訊，所以我只好忍痛放棄這條方便的道路...（這告訴我們做事還是不能太懶）</p>\n<p>iCalendar 的內容大概長這樣，以 <code class=\"language-text\">BEGIN:VEVENT</code> 開始，<code class=\"language-text\">END:VEVENT</code> 為止：</p>\n<div class=\"gatsby-highlight\" data-language=\"ics\"><pre class=\"language-ics\"><code class=\"language-ics\">BEGIN:VEVENT\nDTSTART;VALUE=DATE:20171209\nDTEND;VALUE=DATE:20171210\nDTSTAMP:20171210T075750Z\nUID:839skadkfcd03812j3f0c030s0s@google.com\nCREATED:20171210T024308Z\nDESCRIPTION:\nLAST-MODIFIED:20171210T024310Z\nLOCATION:\nSEQUENCE:0\nSTATUS:CONFIRMED\nSUMMARY:運動（主：背）\nTRANSP:TRANSPARENT\nBEGIN:VALARM\nACTION:DISPLAY\nDESCRIPTION:This is an event reminder\nTRIGGER:-F0AB0H30C0D\nEND:VALARM\nBEGIN:VALARM\nACTION:EMAIL\nDESCRIPTION:This is an event reminder\nSUMMARY:Alarm notification\nATTENDEE:mailto:arvin0731@gmail.com\nTRIGGER:-F0AB0H30C0D\nEND:VALARM\nEND:VEVENT</code></pre></div>\n<h2 id=\"既然是-google就會有-api\" style=\"position:relative;\"><a href=\"#%E6%97%A2%E7%84%B6%E6%98%AF-google%E5%B0%B1%E6%9C%83%E6%9C%89-api\" aria-label=\"既然是 google就會有 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>既然是 Google，就會有 API</h2>\n<p>沒辦法直接載到資料，那就從 API 取得吧！</p>\n<p>Google 最棒的一點就是有一堆 API，而為人詬病的剛好是這些 API 常常沒有完善的 Doc。</p>\n<p>幸運的是，Google Calendar API 的文件還蠻好懂的，因為給了一個<a href=\"https://developers.google.com/google-apps/calendar/quickstart/nodejs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">直接可以複製來用的範例 Sample</a>（笑</p>\n<p>直接照著步驟做就可以了，他有很多實作版本，我是用熟悉的 Node.js 來幫我爬取資料。</p>\n<p>唯一要注意的是步驟一中的 <a href=\"https://console.developers.google.com/start/api?id=calendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this wizard</a> 要好好照著說明執行，即便他步驟看起來有些匪夷所思，像是要你到某一頁後按下 <code class=\"language-text\">Cancel</code> button (eg. On the Add credentials to your project page, click the Cancel button.)</p>\n<p>當你設定好一切，取得 OAuth2 需要的 credentials 後，可以參照他下面的範例依據你想要的資料作修改，比較關鍵的程式是這幾行：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">var</span> calendar <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span><span class=\"token function\">calendar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> queryOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        auth<span class=\"token operator\">:</span> auth<span class=\"token punctuation\">,</span>\n        calendarId<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span><span class=\"token punctuation\">,</span>\n        timeMax<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        singleEvents<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        orderBy<span class=\"token operator\">:</span> <span class=\"token string\">'startTime'</span><span class=\"token punctuation\">,</span>\n        maxResults<span class=\"token operator\">:</span> <span class=\"token number\">2500</span> <span class=\"token comment\">// 不給 maxResults 的話，預設值就是 2500</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        queryOptions<span class=\"token punctuation\">.</span>pageToken <span class=\"token operator\">=</span> pageToken<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    calendar<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>queryOptions<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ... 從 response 中取得需要的資料</span>\n        <span class=\"token comment\">// var events = response.items;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>我們使用的是 v3 的 google calendar api，利用 <code class=\"language-text\">calendar.events.list</code> 可以取得某個 Calendar 的 events 列表，在 <code class=\"language-text\">queryOptions</code> 中，比較重要的有下面幾個:</p>\n<p><code class=\"language-text\">auth</code> 就是你在 <a href=\"https://console.developers.google.com/start/api?id=calendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this wizard</a> 中產生的 credentials，你在頁面上就能找到下載 json 的連結：</p>\n<p><img src=\"/image/googleapi-credentials.png\" alt=\"download credentials\"></p>\n<p><code class=\"language-text\">calendarId</code> 是你想抓取的 Calendar 名稱，primary 指的是你登入帳號的主要日曆。</p>\n<p><code class=\"language-text\">timeMax</code> (or <code class=\"language-text\">timeMin</code>) 可以用來規範你想抓取哪段時間內的 events。</p>\n<p>最後是 <code class=\"language-text\">pageToken</code>，由於 Google Calendar API 有限制，你一次最多只能抓取 2500 個 events，即便你有設定 <code class=\"language-text\">maxResults</code> 這個參數也一樣。因此你會需要透過每次 API request 回傳的 <code class=\"language-text\">nextPageToken</code> 來進行下一頁的 Query。（沒錯，response 回來的是 <code class=\"language-text\">nextPageToken</code>，但你下 Query 時帶的是 <code class=\"language-text\">pageToken</code>，請注意！）</p>\n<p>可以設定的參數還非常多，可以從 Google 提供的 <a href=\"https://developers.google.com/apis-explorer/#p/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API Explorer</a> 中選取 <code class=\"language-text\">Calendar API</code> 來測試看看哪樣的參數是你需要的！每個參數都有對應的說明，還算清楚。</p>\n<p>我在這部分的實作放在 <a href=\"https://gist.github.com/ArvinH/a46f9af2df4316651d2056e610ba68b1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gist</a> 上，有興趣可以參考，寫得很暴力簡陋，畢竟這不是這次的重點～</p>\n<p>主要是依照日曆中每筆 Event 的時間與顏色做分類與統計，依照不同顏色（也就是不同類別）分別存放到不同檔案。</p>\n<p>資料格式也很簡單：</p>\n<div class=\"gatsby-highlight\" data-language=\"csv\"><pre class=\"language-csv\"><code class=\"language-csv\"><span class=\"token value\">date</span><span class=\"token punctuation\">,</span><span class=\"token value\">colorIdNum</span>\n<span class=\"token value\">2017-10-10</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-11</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-12</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-13</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-14</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-15</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">...</span>\n<span class=\"token value\">..</span>\n<span class=\"token value\">.</span></code></pre></div>\n<h1 id=\"資料有了終於能開始畫圖了\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E6%9C%89%E4%BA%86%E7%B5%82%E6%96%BC%E8%83%BD%E9%96%8B%E5%A7%8B%E7%95%AB%E5%9C%96%E4%BA%86\" aria-label=\"資料有了終於能開始畫圖了 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料有了終於能開始畫圖了！</h1>\n<p>主要參考 <a href=\"https://bl.ocks.org/mbostock/4063318\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mike Bostock 大神的作品</a>，改成只繪製單一年度圖表，並加上切換資料後的動畫。</p>\n<p>接下來是手把手說明：</p>\n<p>我們總共需要三個 Function：<code class=\"language-text\">DrawCalendar</code>、<code class=\"language-text\">UpdateCalendar</code> 與 <code class=\"language-text\">changeDataSrc</code>，分別用來繪製圖表、更新圖表與更新資料。</p>\n<p>最主要的當然就是 <code class=\"language-text\">DrawCalendar</code>。繪製日曆又可分為三個步驟：</p>\n<h3 id=\"steps-i-設定日曆基本外觀大小顏色svg-container\" style=\"position:relative;\"><a href=\"#steps-i-%E8%A8%AD%E5%AE%9A%E6%97%A5%E6%9B%86%E5%9F%BA%E6%9C%AC%E5%A4%96%E8%A7%80%E5%A4%A7%E5%B0%8F%E9%A1%8F%E8%89%B2svg-container\" aria-label=\"steps i 設定日曆基本外觀大小顏色svg container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps I: 設定日曆基本外觀（大小、顏色、svg container）</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">DrawCalendar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataSrc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> width <span class=\"token operator\">=</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span>\n      height <span class=\"token operator\">=</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span>\n      cellSize <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> formatPercent <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">scaleQuantize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#006837\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#1a9850\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#66bd63\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#a6d96a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d9ef8b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ffffbf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#fee08b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#fdae61\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#f46d43\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d73027\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#a50026\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// ..</span>\n  <span class=\"token comment\">// .</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面這段很單純的就是設置好圖表的基本資訊，包含寬、高與日曆中每\"天\"的格子大小，利用 <code class=\"language-text\">d3.scaleQuantize()</code> 創建一個 color 函數，用來將之後的資料映射到對應的顏色。</p>\n<p>這邊有個 <code class=\"language-text\">d3.format(\"d\")</code> 的函數，其實在這邊用不到，但還是想介紹一下。\n<code class=\"language-text\">d3.format()</code> 是個方便你正規化資料數值的函式，例如你想將數值侷限在小數點後兩位，就可以用 <code class=\"language-text\">d3.format(\"2f\")</code>，或是想轉換成百分比，可以用 <code class=\"language-text\">d3.format(\".2%\")</code>，這樣會將你輸入的數值乘上 100 後，再加上百分比符號，並依照 % 前的數字來決定小數點後的位數。</p>\n<p>eg. d3.format(\".2%\")(0.234) === 20.34% <a href=\"http://www.oxxostudio.tw/articles/201501/svg-d3-12-formatting.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(可參考此網站說明)</a></p>\n<p>接著是繪製主要的 calendar chart svg container：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> svg <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#calendar-chart\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translate(\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">-</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">53</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">-</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translate(-6,\"</span> <span class=\"token operator\">+</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">3.5</span> <span class=\"token operator\">+</span> <span class=\"token string\">\") rotate(-90)\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-family\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sans-serif\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-size\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-anchor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://github.com/d3/d3-array#range\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">d3.range()</code></a> 會回傳根據你傳入的區間，回傳一段連續數值陣列。</p>\n<p>我們利用 <code class=\"language-text\">d3.range(2017, 2018)</code> 取得陣列資料，會回傳長度為一，包含 2017 這個數值的陣列 <code class=\"language-text\">[2017]</code>。</p>\n<p>你可能會想，為什麼我要這樣做？</p>\n<p>只需要一年的資料，就直接 append svg 就好呀，何必 binding 2017 這個值到 svg 的 <code class=\"language-text\">__data__</code> 裡面呢？</p>\n<p>賣個關子，待會看到 Steps II 你就會知道了！</p>\n<p>而剩下的部分就是利用 <code class=\"language-text\">transform</code> 來位移 svg，為整個圖表保留空間，並加上文字標記。</p>\n<h3 id=\"steps-ii-繪製日曆中的每一天也就是每個小格子啦\" style=\"position:relative;\"><a href=\"#steps-ii-%E7%B9%AA%E8%A3%BD%E6%97%A5%E6%9B%86%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%80%E5%A4%A9%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%AF%8F%E5%80%8B%E5%B0%8F%E6%A0%BC%E5%AD%90%E5%95%A6\" aria-label=\"steps ii 繪製日曆中的每一天也就是每個小格子啦 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps II: 繪製日曆中的每一天（也就是每個小格子啦～）</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rect <span class=\"token operator\">=</span> svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ccc\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rect\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeDays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rect\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> cellSize<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> cellSize<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span>timeWeek<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeYear</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cellSize<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cellSize<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">datum</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeMonths</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> pathMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>要繪製出一年中的 \"每一天\"，我們可以直接 for loop 跑 365 次，或是產生 365 筆資料，但更聰明的做法是利用 <a href=\"https://github.com/d3/d3-time#timeDays\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-time 提供的 timeDays 函數</a> 來幫我們產生出特定日期區間的日期資料！</p>\n<p><code class=\"language-text\">d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));</code></p>\n<p>其中 <code class=\"language-text\">new Date()</code> 的第一個參數 <code class=\"language-text\">d</code> 代表年，<code class=\"language-text\">0</code> 代表第一個月（月份從 0 開始），<code class=\"language-text\">1</code> 則是第一天，因此這邊會回傳 d 年到 d + 1 年間的每一天。</p>\n<p>好那問題來了，這個 <code class=\"language-text\">d</code> 是什麼呢？</p>\n<p>要回答這個問題，必須先了解一下 d3 中的 <code class=\"language-text\">selection.data()</code>。</p>\n<p>我以前都以為 <code class=\"language-text\">data()</code> 只能夠丟入資料陣列，但是在這次的實作過程中才發現，原來他可以接受函數！</p>\n<p>但他是怎麼運作的呢？我們偷看一下 <a href=\"https://github.com/d3/d3-selection/blob/master/src/selection/data.js#L94\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-selection 的原始碼</a></p>\n<p><img src=\"/image/d3-selection-src.png\" alt=\"d3-selection src\"></p>\n<p>真的蠻有趣的，他其實是先判斷你傳入的 <code class=\"language-text\">value</code> 是不是函數，若不是，會先利用 <code class=\"language-text\">constants()</code> 將你的值包裹過，讓他變成可執行的函數：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsconstants.js\"><pre class=\"language-jsconstants.js\"><code class=\"language-jsconstants.js\">export default function(x) {\n  return function() {\n    return x;\n  };\n}</code></pre></div>\n<p>他會將 <code class=\"language-text\">parent.__data__</code> 傳入該函數中執行，回傳的就會是該 <code class=\"language-text\">selector</code> 的 <code class=\"language-text\">__data__</code>。所以直接傳入 function 也是可行的！</p>\n<p>以我們的例子來說，<code class=\"language-text\">rect</code> 的 parent 就是 <code class=\"language-text\">svg</code>，而你們記得在 Steps I 時，我們 binding 陣列 <code class=\"language-text\">[2017]</code> 到 <code class=\"language-text\">svg</code> 的 <code class=\"language-text\">__data__</code> 中嗎？這邊就派上用場了！在 rect 的 <code class=\"language-text\">data()</code> 中的函數所接收到的 <code class=\"language-text\">d</code> 值就是 <code class=\"language-text\">2017</code>。</p>\n<p>而上述的 <code class=\"language-text\">d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));</code> 就會回傳 2017 到 2018 中間 365 筆的日期資料！我們也因此得到 365 個小方塊啦！</p>\n<p>接著，利用類似的概念，使用 <code class=\"language-text\">d3.timeMonths()</code> 產生 12 筆月份資料，接著實作 <code class=\"language-text\">pathMonth()</code> 來畫出 svg path：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspathmonth()\"><pre class=\"language-jspathmonth()\"><code class=\"language-jspathmonth()\">function pathMonth(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n    d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0),\n    d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return &quot;M&quot; + (w0 + 1) * cellSize + &quot;,&quot; + d0 * cellSize\n    + &quot;H&quot; + w0 * cellSize + &quot;V&quot; + 7 * cellSize\n    + &quot;H&quot; + w1 * cellSize + &quot;V&quot; + (d1 + 1) * cellSize\n    + &quot;H&quot; + (w1 + 1) * cellSize + &quot;V&quot; + 0\n    + &quot;H&quot; + (w0 + 1) * cellSize + &quot;Z&quot;;\n}</code></pre></div>\n<p>這段邏輯看似複雜，其實很直覺。</p>\n<p><a href=\"https://github.com/d3/d3-time#interval_count\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">d3.timeWeek.count(start, end)</code></a> 可以計算出 start 到 end 這兩個日期間有幾週。</p>\n<p><code class=\"language-text\">t0</code> 是目前傳入的時間，依照 d3.timeMonths() 的產出，會是一個月的第一天，<code class=\"language-text\">t1</code> 則是該月的月底。\n<code class=\"language-text\">d0</code> 與 <code class=\"language-text\">d1</code> 就是單純的 <code class=\"language-text\">t0</code>、<code class=\"language-text\">t1</code> 對應的 day，就是星期幾。\n<code class=\"language-text\">w0</code> 算出從 <code class=\"language-text\">t0</code> 該年的第一天到 <code class=\"language-text\">t0</code> 有幾週，依此類推 <code class=\"language-text\">w1</code> 就是相對於 <code class=\"language-text\">t1</code>。</p>\n<p>用這些數值就能夠 <code class=\"language-text\">M(移動)</code> 到月初的位置，並往下移動 7 天 <code class=\"language-text\">V 7*cellSize</code>，接著在水平位移(H) 到月底的位置，然後垂直位移到月底日期的星期位置<code class=\"language-text\">(d1 +1) * cellSize</code>，最後為到原點把整個月份框起來。</p>\n<p>svg path 的繪製方法可以[參考這篇](<a href=\"http://www.oxxostudio.tw/articles/201406/svg-04-path-1.html%E3%80%82\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.oxxostudio.tw/articles/201406/svg-04-path-1.html。</a></p>\n<p>到目前為止可以畫出如下的圖：</p>\n<p><img src=\"/image/months-outline.png\" alt=\"outline\"></p>\n<h3 id=\"steps-iii-該開始-binding-資料了\" style=\"position:relative;\"><a href=\"#steps-iii-%E8%A9%B2%E9%96%8B%E5%A7%8B-binding-%E8%B3%87%E6%96%99%E4%BA%86\" aria-label=\"steps iii 該開始 binding 資料了 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps III: 該開始 Binding 資料了</h3>\n<p>再來算是最後一步了，我們將資料綁定並填入剛剛產生的格子中！</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">d3<span class=\"token punctuation\">.</span><span class=\"token function\">csv</span><span class=\"token punctuation\">(</span>dataSrc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> csv</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">nest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 將 date 抽到外層當 key</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 透過 rollup 將 value 設為 colorId</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">rollup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>colorIdNum<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span>csv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  rect<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 找出有 match 到的日期，表示那天我有做事 XD</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">formatPercent</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這邊主要就兩個步驟，第一步先用 <a href=\"https://github.com/d3/d3-collection#nests\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3.nest</a> 來整理資料，我們需要把陣列中每筆資料的 \"date\" 抓出來當 Key，如此一來，在第二步中，我們可以直接利用 <code class=\"language-text\">d in data</code> 的語法在 <code class=\"language-text\">selection.filter()</code> 中進行過濾，選出 365 個格子中，哪些有跟我們真正的 csv 日期資料 match，有 match 到的格子，我們填入顏色！（使用最前面的 color 函數來做映射）</p>\n<p>填入和顏色後：</p>\n<p><img src=\"/image/color-calendar.png\" alt=\"填入資料顏色後的 calendar\"></p>\n<h3 id=\"steps-iv-加入動態切換資料的功能\" style=\"position:relative;\"><a href=\"#steps-iv-%E5%8A%A0%E5%85%A5%E5%8B%95%E6%85%8B%E5%88%87%E6%8F%9B%E8%B3%87%E6%96%99%E7%9A%84%E5%8A%9F%E8%83%BD\" aria-label=\"steps iv 加入動態切換資料的功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps IV: 加入動態切換資料的功能</h3>\n<p>最後我們實作一下綁定在 <code class=\"language-text\">&lt;select></code> 元素上的 <code class=\"language-text\">onchange</code> 函數來做資料切換，而在圖表方面，我們只需要選取出 <code class=\"language-text\">rect</code> 並重新 <code class=\"language-text\">filter</code> 資料即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 切換資料</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeDataSrc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dataSrcSelector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">UpdateCalendar</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">calendarData-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.csv</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 更新圖表，加上 `transition()` 與 `duration()` 讓過程滑順一些</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">UpdateCalendar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataSrc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// ..</span>\n  d3<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  d3<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"成果\" style=\"position:relative;\"><a href=\"#%E6%88%90%E6%9E%9C\" aria-label=\"成果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>成果</h2>\n<p><img src=\"/image/calendar-d3.gif\" alt=\"final demo\">\n<a href=\"https://bl.ocks.org/ArvinH/56909246bd584743fa5ee7ad148ad1ac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 與完整的程式碼</a></p>\n<p>嗯～看起來我工作頗認真，不過等等...怎麼好像週末顏色都比較深啊哈哈哈...哈哈..哈..嗚嗚嗚</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>當初開始在 Google Calendar 上紀錄日誌時，並沒有想到可以在年終的時候進行整年的 review，所以每天的紀錄都很隨性，並沒有很完整的進行分類，有些可惜，但還是能透過資料視覺化的結果，看出我在時間分配的掌控度有相當的進步空間，像是花在工作與培養額外興趣（娛樂）的時間有蠻大的落差。</p>\n<p>不管怎麼說，有了這次的經驗，相信明年的 Year End Review 會更好！\n如果你也覺得這樣做有趣，或許可以加入我的行列，也或許想想有什麼方式可以為你自己進行一次年終 Review，相信都會有所收穫！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"http://www.oxxostudio.tw/articles/201501/svg-d3-12-formatting.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3 formatting</a></li>\n<li><a href=\"https://github.com/d3/d3-time\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-time</a></li>\n<li><a href=\"https://github.com/d3/d3-array\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-array</a></li>\n<li><a href=\"https://github.com/d3/d3-collection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-collection</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN Date</a></li>\n<li><a href=\"https://bl.ocks.org/mbostock/4063318\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mbostock calendar view</a></li>\n<li><a href=\"https://developers.google.com/google-apps/calendar/quickstart/nodejs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Calendar API</a></li>\n</ol>","fields":{"slug":"d-3-v-4-calendar-yearendreview"},"frontmatter":{"title":"一起用 Google Calendar 與 D3.js 進行年終回顧吧！","date":"12-12-2017","tags":["google","google calendar api","d3","d3v4","data visualization"]},"timeToRead":15}},"pageContext":{"slug":"d-3-v-4-calendar-yearendreview","prev":{"excerpt":"『wubba lubba dub dubs』","html":"<blockquote>\n<p>『wubba lubba dub dubs』</p>\n</blockquote>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>我想每個人小時候應該都蠻喜歡畫畫的吧？在沒有遊戲機、沒有 iPhone 的年代，拿著畫筆跟一張紙就可以開心度過幾個小時，但不知道從什麼時候開始就忘掉了這份快樂。</p>\n<p>今天想邀請大家把『快樂』找回來！</p>\n<p>身為工程師，我們拿起畫筆可能畫不出一個漂亮的圓，但透過熟悉的 CSS 我們可以做到。</p>\n<p>『等等，平常上班調 CSS 就已經夠耗神了，你還要拿來畫圖？這除了炫技以外，對專業能力有什麼實質幫助嗎？你看連<a href=\"https://www.zhihu.com/question/27474099\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">知乎上也有人這樣想</a>。』</p>\n<p>那你滑 ig 對專業能力有什麼實質幫助嗎？</p>\n<p>威～話不是這樣講，休閒活動是很重要的，以工作上來說，需要圖片時，當然還是出 SVG 圖檔比較有效率，效果也較好，但是透過 CSS 畫圖有幾個我個人認為蠻重要的好處：</p>\n<ol>\n<li><strong>讓你對 CSS 的 Layout 佈局、style 屬性的操作更加熟悉</strong></li>\n<li>\n<p><strong>透過這種娛樂性質的練習，培養對 CSS 掌控性的自信，<a href=\"https://blog.lalacube.com/mei/Reveal_love_remember.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">找回對工作與技術的愛</a></strong></p>\n<ul>\n<li>工作總是會遇到需要支援舊版瀏覽器的狀況吧？很多新玩意兒你無法在工作中使用，那就透過這種機會好好把玩一下吧～</li>\n</ul>\n</li>\n<li>\n<p><strong>訓練拆解頁面模組的能力</strong></p>\n<ul>\n<li>在 codepen 上臨摹他人著作時，可以想想如果是你，會怎麼組織你的元素，然後再跟作者比對看看誰的作法更棒！</li>\n</ul>\n</li>\n<li>\n<p><strong>鍛鍊在有限資源下發展出無限創造力，就像李麥克一般。</strong></p>\n<ul>\n<li>這點是我覺得最有趣的，在 CSS 有限的能力下，你要想辦法找出方法來實作想要的效果，不知不覺中會鍛鍊你的思考與解決問題的能力！</li>\n<li>很多時候你會發現，看似複雜的東西，透過 CSS 的一些簡單屬性，其實非常容易。</li>\n</ul>\n</li>\n<li><strong>你可以透過 CSS 動畫輕易的繪製出動態圖片，這就不是你單純畫筆能做到的了！</strong></li>\n</ol>\n<p><strong>今天就來介紹幾個簡單的小技巧，讓你能用 CSS 畫出如下的圖片！（什麼？你不知道 Rick and Morty？先去看再回來。）</strong></p>\n<p><img src=\"/image/rick_pure_css.png\" alt=\"Rick\"></p>\n<p>看得出來是用 CSS 畫的嗎？</p>\n<p><a href=\"https://codepen.io/arvin0731/full/zPPaOK/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rick - pure css</a>\n原始碼在此，由於沒有處理 RWD，所以就不直接放過來啦～</p>\n<p>接下來我會先從繪圖的工具開始介紹起，接著提供一些顏色搭配與繪圖靈感的資源，最後進入一連串 CSS 繪圖的技巧介紹。</p>\n<h2 id=\"繪圖小工具\" style=\"position:relative;\"><a href=\"#%E7%B9%AA%E5%9C%96%E5%B0%8F%E5%B7%A5%E5%85%B7\" aria-label=\"繪圖小工具 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>繪圖小工具</h2>\n<h3 id=\"pre-processor\" style=\"position:relative;\"><a href=\"#pre-processor\" aria-label=\"pre processor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-processor</h3>\n<p>CSS 畫圖的兩個主要工具就是 HTML 與 CSS，你當然可以直接用一般的 HTML 與 CSS 來製作你的 Pure CSS image，但我比較推薦使用 <code class=\"language-text\">Pug</code> 與 <code class=\"language-text\">SCSS</code> 兩個 pre-processor 來幫助你。</p>\n<p><code class=\"language-text\">Pug</code> 其實就是以前 Nodejs 的 Template engine <code class=\"language-text\">Jade</code> 改名後的版本，他能讓你利用下面的方式來架構你的 HTML：</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token tag\">div<span class=\"token attr-class\">.sky</span></span>\n<span class=\"token tag\">div<span class=\"token attr-class\">.rick</span></span>\n    <span class=\"token tag\">div<span class=\"token attr-class\">.body</span></span>\n    <span class=\"token tag\">div<span class=\"token attr-class\">.head</span></span></code></pre></div>\n<p>等同於：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sky<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>head<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>看起來簡潔又省了許多重複的打字作業。</p>\n<p><code class=\"language-text\">SCSS</code> 相信就更不陌生了，透過 <code class=\"language-text\">SCSS</code>，你可以用更直覺的方式來撰寫 CSS 階層，並利用變數來讓你的 css 更有彈性：</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token variable\">$rick-body-color</span> = #DDD8D0<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">.rick </span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">.body </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$rick-body-color</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:before </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rick's body\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>等同於：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.rick .body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #DDD8D0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.rick .body::before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rick's body\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"繪圖平台\" style=\"position:relative;\"><a href=\"#%E7%B9%AA%E5%9C%96%E5%B9%B3%E5%8F%B0\" aria-label=\"繪圖平台 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>繪圖平台</h3>\n<p>上述兩套 pre-process 在 codepen、jsbin 等平台上都可以很方便的使用，我推薦大家到 Codepen 上面去練習並發布自己的作品，同時也看看上面的神人們（真的是超多神人...）是怎麼玩弄 CSS 的。</p>\n<p>Codepen 上有許多 css 的活動，像是 <code class=\"language-text\">#Codevember</code>、<code class=\"language-text\">#DailyCSS</code> 等等，鼓勵大家每天到 Codepen 上展現自己的創意與能力，我其實也蠻想參加的，但是 Daily 真的太困難哈哈，如果也有人跟我一樣的感受，不如我們自己來弄個 <code class=\"language-text\">#WeeklyCSS</code> 吧！</p>\n<h3 id=\"顏色選擇工具\" style=\"position:relative;\"><a href=\"#%E9%A1%8F%E8%89%B2%E9%81%B8%E6%93%87%E5%B7%A5%E5%85%B7\" aria-label=\"顏色選擇工具 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>顏色選擇工具</h3>\n<p>畢竟我們不是設計師，在顏色的敏銳度上可能欠缺鍛鍊，但沒關係啊，我們是為了休閒、為了把愛找回來。</p>\n<p>可以透過 <a href=\"https://coolors.co/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">coolors</a> 這個網站幫你產生一些對應的顏色組合，或是利用 <a href=\"http://www.colorzilla.com/chrome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Colorzilla</a> 來從別人頁面取得你看上眼的顏色。</p>\n<h2 id=\"靈感來源\" style=\"position:relative;\"><a href=\"#%E9%9D%88%E6%84%9F%E4%BE%86%E6%BA%90\" aria-label=\"靈感來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>靈感來源</h2>\n<p>唯一推薦 <a href=\"https://dribbble.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dribbble</a>，許多人都會從上面找尋靈感，然後轉成 pure css 的版本，甚至是加上動畫效果，讓圖片活起來。</p>\n<p>也可以去 <a href=\"https://www.behance.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">behance</a> 以及剛剛提到的 <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">codepen</a>，當然還有其他許多平台，但是我覺得光 Dribbble 上的圖就夠你玩了XD</p>\n<h2 id=\"css-繪圖技巧\" style=\"position:relative;\"><a href=\"#css-%E7%B9%AA%E5%9C%96%E6%8A%80%E5%B7%A7\" aria-label=\"css 繪圖技巧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 繪圖技巧</h2>\n<p>好的，終於要進入 CSS 繪圖的實戰技巧。\n只要掌握住這邊介紹的小撇步，你就能繪製出如範例一般的 Pure CSS image！</p>\n<h3 id=\"善用各種形狀疊加組合\" style=\"position:relative;\"><a href=\"#%E5%96%84%E7%94%A8%E5%90%84%E7%A8%AE%E5%BD%A2%E7%8B%80%E7%96%8A%E5%8A%A0%E7%B5%84%E5%90%88\" aria-label=\"善用各種形狀疊加組合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>善用各種形狀疊加組合</h3>\n<p>大家都知道 HTML 與 CSS 的基本形狀就是一個四四方方的 box，但是我們可以透過幾種方式「製造」出各種形狀：</p>\n<ul>\n<li>\n<p>最常見的三角形：\n如果你們曾經有需要製作 三角形的 div 的話，或許有看過 <a href=\"http://www.cssarrowplease.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css arrow please</a> 這個網站，\n若仔細研究一下，你會發現它的原理很簡單，就是利用寬高皆為 0 的 div 上的 border 寬度來做變化，舉例來說：\n我們若設置一個 div 的寬高，以及四邊的邊寬，會呈現如下情況：</p>\n<div style=\"height:20px;\nwidth:20px;\nborder-color:red blue yellow green;\nborder-style:solid;\nborder-width:20px;\"></div>\n```css\n    .rect {\n        height:20px;\n        width:20px;\n        border-color:red blue yellow green;\n        border-style:solid;\n        border-width:20px;\n    }\n```\n接著我們把 寬、高 都設為零，不就看到三角形了嗎：\n<div style=\"height: 0px;\nwidth: 0px;\nborder-color: red blue yellow green;\nborder-style: solid;\nborder-width: 20px;\"></div>\n```css\n    .rect {\n        height: 0px;\n        width: 0px;\n        border-color:red blue yellow green;\n        border-style: solid;\n        border-width: 20px;\n    }\n```\n所以只要留下一種顏色，就是我們要的結果了：\n<div style=\"height: 0px;\nwidth: 0px;\nborder-color: red transparent transparent transparent;\nborder-style: solid;\nborder-width: 20px;\"></div>\n```css\n    .rect {\n        height: 0px;\n        width: 0px;\n        border-color:red transparent transparent transparent;\n        border-style: solid;\n        border-width: 20px;\n    }\n```\n[詳細介紹可以看這邊，還有教你如何支援到 IE6！](http://caibaojian.com/css-border-triangle.html)\n</li>\n<li>\n<p>神奇的 border 之不是只有一種角度：\n除了用來製作三角形以外，很多人常常忽略 border 其實可以根據各種方位來調整，像是 <code class=\"language-text\">border-top-left-radius</code> 或是 <code class=\"language-text\">border-left-width</code>，舉例來說，Rick 身上襯衫的衣領，我們可以這樣做：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.shirt</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom-right-radius</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 3px solid #666<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div style=\"border-bottom-right-radius: 100%;\nborder-right: 3px solid #666;\nmargin: 10px;\nbackground-color: white;\nwidth: 10px;\nheight: 40px;\"></div>\n<p>透過 <code class=\"language-text\">border-bottom-right-radius</code> 就可以有一個小括弧的效果。</p>\n</li>\n<li>\n<p>堆疊組合：\n以前面 <code class=\"language-text\">Rick</code> 的範例來看，他的頭髮部分就可以有很多種實作方式，你可能會想使用剛剛介紹的三角形，加上 <code class=\"language-text\">transform: rotate()</code>，組合出其雜亂有型的頭髮，但我太懶了，直接用 div 來堆疊組合：</p>\n<p><img src=\"/image/rick-hairs.gif\" alt=\"Rick hairs\"></p>\n<p>堆疊組合有時候需要搭配 <code class=\"language-text\">overflow:hidden</code>，像是 Rick 的嘴巴，就是透過外層設定 overflow，並搭配適當角度的 border-radius，才能製作出這種弧度的效果：</p>\n<img src=\"/image/rick-mouth.png\" style=\"width: 400px;height:400px;\" />\n</li>\n<li>css clip-path:\n若是真的想要有多邊形，可以使用 clip-path。\nclip-path 是原本就存在於 SVG 中的一個屬性，讓我們能利用遮罩的方式來裁切出多邊形，在用 css 畫圖的時候，基本上就不要管瀏覽器支援度了吧，大膽用下去就對了！這邊提供幾個資源讓有興趣的人再去研究一下：\n<a href=\"https://bennettfeely.com/clippy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path generator</a>\n<a href=\"http://www.oxxostudio.tw/articles/201503/css-clip-path.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path 詳細介紹</a>\n<a href=\"https://caniuse.com/#search=clip-path\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Can I use clip-path</a></li>\n</ul>\n<h3 id=\"偽元素-before--after-是最佳幫手\" style=\"position:relative;\"><a href=\"#%E5%81%BD%E5%85%83%E7%B4%A0-before--after-%E6%98%AF%E6%9C%80%E4%BD%B3%E5%B9%AB%E6%89%8B\" aria-label=\"偽元素 before  after 是最佳幫手 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>偽元素 Before &#x26; after 是最佳幫手</h3>\n<p>偽元素在 CSS 繪圖當中佔據的角色真是太重要了，透過 <code class=\"language-text\">before</code> 與 <code class=\"language-text\">after</code> 的操作，你可以更有組織的來管理元素，以 Rick 的眼睛來說，我們可以先畫出一個圓形，在透過 <code class=\"language-text\">before</code> 和 <code class=\"language-text\">after</code> 兩個偽元素來產生 “眼皮” 與 “黑眼球”：</p>\n<p><img src=\"/image/rick-eyes.gif\" alt=\"Rick eyes\"></p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.right-eye, .left-eye </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 2px solid <span class=\"token variable\">$rick--border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:before </span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 眼皮</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:after </span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 眼球</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>透過 <strong>偽元素</strong>，我們可以把相關的元素綁定在一起，也少了一些 div 的宣告，對於 Layout 上的調整來說也更加方便，因此一定要善加利用這個特性！</p>\n<h3 id=\"box-shadow-與-background-image-給予的另種可能性\" style=\"position:relative;\"><a href=\"#box-shadow-%E8%88%87-background-image-%E7%B5%A6%E4%BA%88%E7%9A%84%E5%8F%A6%E7%A8%AE%E5%8F%AF%E8%83%BD%E6%80%A7\" aria-label=\"box shadow 與 background image 給予的另種可能性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>box-shadow 與 background-image 給予的另種可能性</h3>\n<p>有了上述的知識，基本上你要湊出一個 Rick 或是 Morty 都是沒問題的，不過還有個小技巧想介紹給大家，就是 <code class=\"language-text\">box-shadow</code> 與 <code class=\"language-text\">background-image</code>。</p>\n<p>首先是 <code class=\"language-text\">box-shadow</code>，是我覺得最酷的一個東西，利用 <code class=\"language-text\">box-shadow</code>，我們可以只用一個 div 就做出各種圖案，像是 <a href=\"https://codepen.io/sashatran/full/BpWLbN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Calendar Icon</a>： <img src=\"/image/calendar-icon.png\" style=\"width:60px; height:60px;\"/>\n或是棋盤：\n<a class=\"jsbin-embed\" href=\"http://jsbin.com/fibina/embed?html,css,output\">JS Bin on jsbin.com</a><script src=\"http://static.jsbin.com/js/embed.min.js?4.1.0\"></script></p>\n<p>運用 <code class=\"language-text\">box-shadow</code> 與 <code class=\"language-text\">background-image</code> 的原理都是利用到可以設定多個值的特性，以上面的棋盤為例子，4 x 4 的棋盤有 16 個方塊，扣除掉本身 div 佔據的一個，你需要設定 15 個 <code class=\"language-text\">box-shadow</code> 的值： <code class=\"language-text\">10px 0 0 #f00,</code> 代表在 X offset 10px, Y offset 0px 的位置有一個 #f00 的方塊（blur 與 spread 為 0），依此類推去組出棋盤。</p>\n<p>懂得原理以後，慢慢就可以製作出更複雜的效果，像是 Rick 範例中的名字，每一個字母就是一個 div 去透過 <code class=\"language-text\">box-shadow</code> 組成的：</p>\n<p><img src=\"/image/name-box-shadow.png\" alt=\"single div using box-shadow\"></p>\n<p><code class=\"language-text\">background-image</code> 在我這次的範例中沒有使用到，但基本原理差不多，可以看這邊的範例：</p>\n<p data-height=\"300\" data-theme-id=\"29194\" data-slug-hash=\"XKBwoZ\" data-default-tab=\"css,result\" data-user=\"yumeeeei\" data-embed-version=\"2\" data-pen-title=\"Pure CSS  Hotdog   🌭\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/yumeeeei/pen/XKBwoZ/\">Pure CSS  Hotdog   🌭</a> by yumeeeei (<a href=\"https://codepen.io/yumeeeei\">@yumeeeei</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h3 id=\"總結\" style=\"position:relative;\"><a href=\"#%E7%B8%BD%E7%B5%90\" aria-label=\"總結 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>總結</h3>\n<p>用 CSS 畫圖實際上是個蠻辛苦的事情，但就如我先前所說，可以訓練到很多思考能力以及創意發想，更重要的是，當你用一些很特別的技巧來達成你想要的效果時，成就感是非常大的啊～～</p>\n<p>我也還在努力中，有興趣的話就跟我一起來 #WeeklyCSS 吧！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"https://blog.lalacube.com/mei/Reveal_love_remember.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">愛，可曾記得 - Paul Li</a></li>\n<li><a href=\"https://blog.prototypr.io/how-i-started-drawing-css-images-3fd878675c89\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How I started drawing CSS Images</a></li>\n<li><a href=\"https://dribbble.com/shots/3275208-Pure-CSS-Hotdog\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pure-CSS-Hotdog</a></li>\n<li><a href=\"https://bennettfeely.com/clippy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path generator</a></li>\n<li><a href=\"http://www.oxxostudio.tw/articles/201503/css-clip-path.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path 詳細介紹</a></li>\n<li><a href=\"https://caniuse.com/#search=clip-path\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Can I use clip-path</a></li>\n<li><a href=\"https://coding-artist.teachable.com/p/how-to-make-pure-css-images\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Class: how-to-make-pure-css-images</a></li>\n</ol>","id":"b76ce5a6-2d4d-56c0-be39-24659910c25e","fields":{"slug":"drawing-css-image"},"frontmatter":{"date":"2017-11-17T19:55:02.000Z","title":"用 CSS 畫畫的小技巧","tags":["css","drawing tips"],"type":"tech","slug":"drawing-css-image"},"timeToRead":10},"next":{"excerpt":"『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』","html":"<blockquote>\n<p>『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』</p>\n</blockquote>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>還記得約莫是 2012 年我還在唸研究所的時候，有位清大教授（原諒我忘了是哪位...）來系上演講關於類神經網路的應用，當時的我聽得霧煞煞，覺得是離我很遙遠的一門學問，而如今 Machine Learning、Deep Learning 滿天飛，說你沒聽過 KNN 就像說你沒背過 99 乘法表一樣驚人。</p>\n<p>對於一個成天在網頁打滾的前端工程師，可能真的沒太多機會碰觸到相關實作或研究。\n但小心了！AI 的觸角也慢慢伸到前端的領域 - [Screenshot to code in Keras]((<a href=\"https://github.com/emilwallner/Screenshot-to-code-in-Keras\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emilwallner/Screenshot-to-code-in-Keras</a>)，從圖片就能轉成 HTML，以後該怎麼辦啊...</p>\n<p>你可能會想，身處於變化快速的前端領域，我們最擅長的不就是快速學習應對嗎？現在已經有很多 js 版本的機器學習函式庫啦，像是 Keras.js、Deeplearn.js 等等，讓你可以在 browser 上透過 WebGL 的幫助來使用 GPU 做運算。</p>\n<p>但是這些 Library 的宗旨比較是拓展機器學習的應用層面，對於沒接觸過 Deeplearning 的前端工程師來說，要做出 <a href=\"https://teachablemachine.withgoogle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">teachablemachine</a> 這樣的東西，其實沒這麼簡單。</p>\n<p>而今天要介紹的這款 library 就是想提供一個 Higher level 的 js library，降低採用 Machine learning 實作產品的門檻。</p>\n<p>先來看個 Demo：</p>\n<p><img src=\"/image/deeplearnjs-demo.gif\" alt=\"p5ML-Deeplearnjs-demo\"></p>\n<p>Demo 裡是一個簡單的 Chrome extension，透過 WebCam 擷取圖片來分析，利用 <a href=\"https://github.com/PAIR-code/deeplearnjs/tree/master/models/knn_image_classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNN image classifier model</a>，來判斷出不同動作，並對應到網頁上的互動，像是 scroll dow, scroll up 或是修改 DOM 元件（ Demo 中的開關燈效果 ）。主要參考自 <a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a>。</p>\n<p>沒有，我的另一隻手絕對沒有在下面控制滑鼠。</p>\n<p>這一切的實現都是依靠 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 與 <a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a> 的 knn image classifier。</p>\n<h1 id=\"p5ml\" style=\"position:relative;\"><a href=\"#p5ml\" aria-label=\"p5ml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>p5ML</h1>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 還持續在開發中，主要是提供一系列的 API wrapper，讓你能忽略掉一些直接使用 deeplearn.js 需要知道的細節，像是 <code class=\"language-text\">NDArrayMath</code>, <code class=\"language-text\">Scalar</code>, <code class=\"language-text\">Array3D</code> 等 deeplearn 提供的物件。</p>\n<p>使用方式很簡單，直接在 html 中載入：</p>\n<p> <code class=\"language-text\">&lt;script src=\"p5ML.min.js\">&lt;/script></code></p>\n<p> 或是 <code class=\"language-text\">npm install p5ML --save</code> 下載皆可。</p>\n<p><code class=\"language-text\">p5ML.min.js</code> 會 expose 一個 <code class=\"language-text\">p5ml</code> 的全域變數，裡面提供以下幾種目前實作的 Modal 演算法：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#lstm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM</a></p>\n<ul>\n<li>沒研究過 LSTM 的讀者可以看看這篇介紹，<a href=\"http://x-algo.cn/index.php/2017/03/21/lstm-understanding/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM直觀理解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#imagenet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageNet</a> - 目前只支援 SqueezeNet Modal</p>\n<ul>\n<li><a href=\"http://blog.csdn.net/xbinworld/article/details/50897870\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SqueezeNet 模型詳解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#knn-image-classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNNImage</a></p>\n<ul>\n<li>其中採用了 <a href=\"https://github.com/PAIR-code/deeplearnjs/blob/master/models/knn_image_classifier/knn_image_classifier.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deeplearn.js 的 knn models</a>，寫得很簡潔，又是 Typescript，對於理解這種演算法很有幫助。</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#neural-network\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NeuralNetwork</a></li>\n</ul>\n<p>除了 Neura Network 外，上述其餘每個 Modal 在 p5ML 的 github 上都有對應的 Demo，以及簡短的使用方式。</p>\n<h1 id=\"實作範例\" style=\"position:relative;\"><a href=\"#%E5%AF%A6%E4%BD%9C%E7%AF%84%E4%BE%8B\" aria-label=\"實作範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>實作範例</h1>\n<p>以剛剛開頭看到的例子來說，我們使用到的是 <strong>KNNImgae</strong> 這個 API：</p>\n<p><code class=\"language-text\">let knn = new p5ml.KNNImageClassifier(callback);</code></p>\n<p>建立出 KNNImageClassifier 的物件 knn 後，我們可以透過 <code class=\"language-text\">knn.addImage(video, index);</code> 來加入 example（video 變數)，並告知其 class 類別（index 變數）。\n當加入的 example 足夠多以後，就能透過 <code class=\"language-text\">knn.predict(input, callback)</code> 來預測 input 是屬於哪種類別：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">knn<span class=\"token punctuation\">.</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>classIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 屬於類別 1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用起來就是這麼簡單。</p>\n<h2 id=\"整合-extension---popupjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---popupjs\" aria-label=\"整合 extension   popupjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - popup.js</h2>\n<p>要整合到 Chrome extension 中的話，需要使用到的是 <code class=\"language-text\">popup.js</code>, <code class=\"language-text\">popup.html</code>, <code class=\"language-text\">content.js</code> 以及 <code class=\"language-text\">option.html</code>。</p>\n<p>疑？為什麼需要 <code class=\"language-text\">option.html</code>？這次的範例應該還用不著需要使用者設定什麼參數吧？</p>\n<p>原因是為了取得使用者的<strong>攝影機權限</strong>。</p>\n<p>一般 Web 上是呼叫 <code class=\"language-text\">navigator.mediaDevices.getUserMedia(options, callback)</code>來取得使用者 WebCam 權限：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> audio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> video<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webcam not ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但要讓 Chrome extension 也拿到權限的話，你的這段程式碼，必須放置在由 extension 本身開啟的 html 內才可以，<code class=\"language-text\">popup.html</code> 不算。\n因此，利用設置頁面 <code class=\"language-text\">option.html</code> 是最為適合的，只要在你的 <code class=\"language-text\">manifest.json</code> 中設定：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonmanifest.json\"><pre class=\"language-jsonmanifest.json\"><code class=\"language-jsonmanifest.json\">&quot;options_ui&quot;: {\n    &quot;page&quot;: &quot;options.html&quot;,\n    &quot;chrome_style&quot;: true,\n    &quot;open_in_tab&quot;: true\n}</code></pre></div>\n<p>之後就能透過開啟 Extension 的設定頁面，來徵求使用者的攝影權限。</p>\n<img src=\"/image/extension-option.png\" style=\"width: 300px;height:200px\">\n<p>取得權限後，在我們的 <code class=\"language-text\">popup.html</code> 中要繪製一些頁面元件，以供之後我們在前端進行 Image 的分類：</p>\n<div class=\"gatsby-highlight\" data-language=\"popup.html\"><pre class=\"language-popup.html\"><code class=\"language-popup.html\">&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;video crossorigin=&quot;anonymous&quot; width=&quot;227&quot; height=&quot;227&quot; id=&quot;video&quot;&gt;&lt;/video&gt;\n  &lt;button id=&quot;still&quot;&gt;Do nothing&lt;/button&gt;\n  &lt;button id=&quot;up&quot;&gt;Up&lt;/button&gt;\n  &lt;button id=&quot;down&quot;&gt;Down&lt;/button&gt;\n  &lt;button id=&quot;turnoff&quot;&gt;Turn Off Light&lt;/button&gt;\n  &lt;script src=&quot;scripts/p5ml.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;scripts/popup.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>popup.js 中則是放入最主要的 knn 相關程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspopup.js\"><pre class=\"language-jspopup.js\"><code class=\"language-jspopup.js\">let knn = new p5ml.KNNImageClassifier(modelLoaded);\nlet turnoffButton = document.getElementById(&#39;turnoff&#39;);\n// turnoffButton\nturnoffButton.addEventListener(&#39;click&#39;, function () {\n    knn.addImage(video, 4);\n    times++;\n})\nsetInterval(function() {\n    if (times &gt; 10) {\n        knn.predict(video, function(data) {\n            if (data.classIndex == 1) {\n                console.log(&#39;response&#39;, &#39;still&#39;);\n            } else if (data.classIndex == 2) {\n                // ...\n            } else if (data.classIndex == 3) {\n                // ...\n            } else if (data.classIndex == 4) {\n                chrome.runtime.sendMessage({ direction: &quot;turn off&quot; }, function (response) {\n                console.log(&#39;response&#39;, &#39;turn off&#39;);\n                });\n            }\n        });\n    }\n}, 1500);</code></pre></div>\n<p>Line 1 我們初始化 <code class=\"language-text\">p5ml.KNNImageClassifier</code> 物件 <code class=\"language-text\">knn</code>，接著在 <code class=\"language-text\">turnoffButton</code> 按下時加入範例 <code class=\"language-text\">knn.addImage(video, 4)</code>，並設定該範例類別為 4。</p>\n<p>接著在 Line 8 開始，利用 <code class=\"language-text\">setInterval()</code> 不斷的進行 <code class=\"language-text\">knn.predict()</code>，這樣就能盡量即時分辨 WebCam 傳來的資料。</p>\n<p>其他部分，像是如何讓 WebCam 的影像顯示在 <code class=\"language-text\">&lt;video></code> tag 中的程式碼也是在 <code class=\"language-text\">popup.js</code> 中實作。</p>\n<p>完整 popup.js 程式碼可以看 <a href=\"https://gist.github.com/ArvinH/f10ea345904d09f51aebb3f1e34e95e5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這裏</a> 或是<a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension/blob/master/scripts/popup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">原作者的</a></p>\n<p>實作到這裡以後，基本上你就可以開啟 Extension 然後進行一些影片的分類，像是這樣：</p>\n<p><img src=\"/image/deeplearn-demo-2.gif\" alt=\"教育你的 extension\"></p>\n<p>可以從上面的片段發現，你需要點擊對應分類的按鈕，並且做出你想要的動作來教導你的 extension，讓他認得你的手勢！\n當你給予的 example 越多，就愈有機會判斷得更好。</p>\n<h2 id=\"整合-extension---contentjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---contentjs\" aria-label=\"整合 extension   contentjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - content.js</h2>\n<p>這邊假定大家都知道 Extension 的實作方式（如果不知道可以從<a href=\"https://developer.chrome.com/extensions/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>學習）。</p>\n<p>在 Extension 中，可以透過 <code class=\"language-text\">chrome.runtime.sendMessage()</code> 與 <code class=\"language-text\">chrome.runtime.onMessage.addListener()</code> 來針對 Popup page 與 當前頁面的 content script 進行溝通，我們就是利用這點來將辨識完的手勢，轉換成頁面上的互動操作：</p>\n<div class=\"gatsby-highlight\" data-language=\"jscontent.js\"><pre class=\"language-jscontent.js\"><code class=\"language-jscontent.js\">chrome.runtime.onMessage.addListener(gotMessage)\nfunction gotMessage(message, sender, sendResponse){\n  let direction = 0;\n  if(message.direction == &#39;up&#39;){\n    direction = -500;\n  } else if(message.direction == &#39;down&#39;){\n    direction = +500;\n  } else if (message.direction == &#39;turn off&#39;) {\n    const mask = document.getElementById(&#39;body-maskDiv&#39;);\n    if (mask) {\n      removeMask();\n    } else {\n      addMask();\n    }\n  }\n  window.scrollBy({ \n    top: direction,\n    left: 0, \n    behavior: &#39;smooth&#39; \n  });\n}</code></pre></div>\n<p>到這邊為止基本上就完成了範例的所有功能，對完整程式碼（或是遮罩實作方式 XD）有興趣的人可以從<a href=\"https://gist.github.com/ArvinH/96fa770dcd007c02a69f31676020cbe6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>取得。</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>這次算是初步嘗試在前端上應用 ML 相關的功能，介紹大家有像是 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a> 這樣有趣的 library 可以使用，希望可以有多一點的前端高手來發揮創意，並分享作品出來，不然真的很難找到相關的經驗分享。\n不過當然，這只是個非常粗淺的應用，更是用非常 High level 的 API 來實作，還是需要真正去了解 ML 相關的演算法，才是比較正確的學習方向，接下來我也會繼續學習，p5-deeplearn-js 會是一個不錯的起點，加上 deeplearn.js 的 KNN 演算法程式碼都算蠻簡潔的，以 Typescript 實作，閱讀起來比起純 JS 好理解一些（多了 Type 很有幫助啊！），推薦給各位！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a></li>\n<li><a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a></li>\n<li><a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a></li>\n</ol>","id":"027bada1-0bee-5863-a87d-42bbd8690b73","fields":{"slug":"p-5-ml-deeplearnjs"},"frontmatter":{"date":"2018-01-13T16:30:21.000Z","title":"前端也能玩 Deepleaning - 以 p5-deeplearn-js 為例","tags":["deeplearning","deeplearnjs","p5ML","chrome extension"],"type":"tech","slug":"p5ML-deeplearnjs"},"timeToRead":8},"type":"tech"}},"staticQueryHashes":["2123680655"]}