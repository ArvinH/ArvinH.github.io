{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/p-5-ml-deeplearnjs","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』</p>\n</blockquote>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>還記得約莫是 2012 年我還在唸研究所的時候，有位清大教授（原諒我忘了是哪位...）來系上演講關於類神經網路的應用，當時的我聽得霧煞煞，覺得是離我很遙遠的一門學問，而如今 Machine Learning、Deep Learning 滿天飛，說你沒聽過 KNN 就像說你沒背過 99 乘法表一樣驚人。</p>\n<p>對於一個成天在網頁打滾的前端工程師，可能真的沒太多機會碰觸到相關實作或研究。\n但小心了！AI 的觸角也慢慢伸到前端的領域 - [Screenshot to code in Keras]((<a href=\"https://github.com/emilwallner/Screenshot-to-code-in-Keras\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emilwallner/Screenshot-to-code-in-Keras</a>)，從圖片就能轉成 HTML，以後該怎麼辦啊...</p>\n<p>你可能會想，身處於變化快速的前端領域，我們最擅長的不就是快速學習應對嗎？現在已經有很多 js 版本的機器學習函式庫啦，像是 Keras.js、Deeplearn.js 等等，讓你可以在 browser 上透過 WebGL 的幫助來使用 GPU 做運算。</p>\n<p>但是這些 Library 的宗旨比較是拓展機器學習的應用層面，對於沒接觸過 Deeplearning 的前端工程師來說，要做出 <a href=\"https://teachablemachine.withgoogle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">teachablemachine</a> 這樣的東西，其實沒這麼簡單。</p>\n<p>而今天要介紹的這款 library 就是想提供一個 Higher level 的 js library，降低採用 Machine learning 實作產品的門檻。</p>\n<p>先來看個 Demo：</p>\n<p><img src=\"/image/deeplearnjs-demo.gif\" alt=\"p5ML-Deeplearnjs-demo\"></p>\n<p>Demo 裡是一個簡單的 Chrome extension，透過 WebCam 擷取圖片來分析，利用 <a href=\"https://github.com/PAIR-code/deeplearnjs/tree/master/models/knn_image_classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNN image classifier model</a>，來判斷出不同動作，並對應到網頁上的互動，像是 scroll dow, scroll up 或是修改 DOM 元件（ Demo 中的開關燈效果 ）。主要參考自 <a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a>。</p>\n<p>沒有，我的另一隻手絕對沒有在下面控制滑鼠。</p>\n<p>這一切的實現都是依靠 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 與 <a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a> 的 knn image classifier。</p>\n<h1 id=\"p5ml\" style=\"position:relative;\"><a href=\"#p5ml\" aria-label=\"p5ml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>p5ML</h1>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 還持續在開發中，主要是提供一系列的 API wrapper，讓你能忽略掉一些直接使用 deeplearn.js 需要知道的細節，像是 <code class=\"language-text\">NDArrayMath</code>, <code class=\"language-text\">Scalar</code>, <code class=\"language-text\">Array3D</code> 等 deeplearn 提供的物件。</p>\n<p>使用方式很簡單，直接在 html 中載入：</p>\n<p> <code class=\"language-text\">&lt;script src=\"p5ML.min.js\">&lt;/script></code></p>\n<p> 或是 <code class=\"language-text\">npm install p5ML --save</code> 下載皆可。</p>\n<p><code class=\"language-text\">p5ML.min.js</code> 會 expose 一個 <code class=\"language-text\">p5ml</code> 的全域變數，裡面提供以下幾種目前實作的 Modal 演算法：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#lstm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM</a></p>\n<ul>\n<li>沒研究過 LSTM 的讀者可以看看這篇介紹，<a href=\"http://x-algo.cn/index.php/2017/03/21/lstm-understanding/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM直觀理解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#imagenet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageNet</a> - 目前只支援 SqueezeNet Modal</p>\n<ul>\n<li><a href=\"http://blog.csdn.net/xbinworld/article/details/50897870\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SqueezeNet 模型詳解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#knn-image-classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNNImage</a></p>\n<ul>\n<li>其中採用了 <a href=\"https://github.com/PAIR-code/deeplearnjs/blob/master/models/knn_image_classifier/knn_image_classifier.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deeplearn.js 的 knn models</a>，寫得很簡潔，又是 Typescript，對於理解這種演算法很有幫助。</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#neural-network\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NeuralNetwork</a></li>\n</ul>\n<p>除了 Neura Network 外，上述其餘每個 Modal 在 p5ML 的 github 上都有對應的 Demo，以及簡短的使用方式。</p>\n<h1 id=\"實作範例\" style=\"position:relative;\"><a href=\"#%E5%AF%A6%E4%BD%9C%E7%AF%84%E4%BE%8B\" aria-label=\"實作範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>實作範例</h1>\n<p>以剛剛開頭看到的例子來說，我們使用到的是 <strong>KNNImgae</strong> 這個 API：</p>\n<p><code class=\"language-text\">let knn = new p5ml.KNNImageClassifier(callback);</code></p>\n<p>建立出 KNNImageClassifier 的物件 knn 後，我們可以透過 <code class=\"language-text\">knn.addImage(video, index);</code> 來加入 example（video 變數)，並告知其 class 類別（index 變數）。\n當加入的 example 足夠多以後，就能透過 <code class=\"language-text\">knn.predict(input, callback)</code> 來預測 input 是屬於哪種類別：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">knn<span class=\"token punctuation\">.</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>classIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 屬於類別 1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用起來就是這麼簡單。</p>\n<h2 id=\"整合-extension---popupjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---popupjs\" aria-label=\"整合 extension   popupjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - popup.js</h2>\n<p>要整合到 Chrome extension 中的話，需要使用到的是 <code class=\"language-text\">popup.js</code>, <code class=\"language-text\">popup.html</code>, <code class=\"language-text\">content.js</code> 以及 <code class=\"language-text\">option.html</code>。</p>\n<p>疑？為什麼需要 <code class=\"language-text\">option.html</code>？這次的範例應該還用不著需要使用者設定什麼參數吧？</p>\n<p>原因是為了取得使用者的<strong>攝影機權限</strong>。</p>\n<p>一般 Web 上是呼叫 <code class=\"language-text\">navigator.mediaDevices.getUserMedia(options, callback)</code>來取得使用者 WebCam 權限：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> audio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> video<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webcam not ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但要讓 Chrome extension 也拿到權限的話，你的這段程式碼，必須放置在由 extension 本身開啟的 html 內才可以，<code class=\"language-text\">popup.html</code> 不算。\n因此，利用設置頁面 <code class=\"language-text\">option.html</code> 是最為適合的，只要在你的 <code class=\"language-text\">manifest.json</code> 中設定：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonmanifest.json\"><pre class=\"language-jsonmanifest.json\"><code class=\"language-jsonmanifest.json\">&quot;options_ui&quot;: {\n    &quot;page&quot;: &quot;options.html&quot;,\n    &quot;chrome_style&quot;: true,\n    &quot;open_in_tab&quot;: true\n}</code></pre></div>\n<p>之後就能透過開啟 Extension 的設定頁面，來徵求使用者的攝影權限。</p>\n<img src=\"/image/extension-option.png\" style=\"width: 300px;height:200px\">\n<p>取得權限後，在我們的 <code class=\"language-text\">popup.html</code> 中要繪製一些頁面元件，以供之後我們在前端進行 Image 的分類：</p>\n<div class=\"gatsby-highlight\" data-language=\"popup.html\"><pre class=\"language-popup.html\"><code class=\"language-popup.html\">&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;video crossorigin=&quot;anonymous&quot; width=&quot;227&quot; height=&quot;227&quot; id=&quot;video&quot;&gt;&lt;/video&gt;\n  &lt;button id=&quot;still&quot;&gt;Do nothing&lt;/button&gt;\n  &lt;button id=&quot;up&quot;&gt;Up&lt;/button&gt;\n  &lt;button id=&quot;down&quot;&gt;Down&lt;/button&gt;\n  &lt;button id=&quot;turnoff&quot;&gt;Turn Off Light&lt;/button&gt;\n  &lt;script src=&quot;scripts/p5ml.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;scripts/popup.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>popup.js 中則是放入最主要的 knn 相關程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspopup.js\"><pre class=\"language-jspopup.js\"><code class=\"language-jspopup.js\">let knn = new p5ml.KNNImageClassifier(modelLoaded);\nlet turnoffButton = document.getElementById(&#39;turnoff&#39;);\n// turnoffButton\nturnoffButton.addEventListener(&#39;click&#39;, function () {\n    knn.addImage(video, 4);\n    times++;\n})\nsetInterval(function() {\n    if (times &gt; 10) {\n        knn.predict(video, function(data) {\n            if (data.classIndex == 1) {\n                console.log(&#39;response&#39;, &#39;still&#39;);\n            } else if (data.classIndex == 2) {\n                // ...\n            } else if (data.classIndex == 3) {\n                // ...\n            } else if (data.classIndex == 4) {\n                chrome.runtime.sendMessage({ direction: &quot;turn off&quot; }, function (response) {\n                console.log(&#39;response&#39;, &#39;turn off&#39;);\n                });\n            }\n        });\n    }\n}, 1500);</code></pre></div>\n<p>Line 1 我們初始化 <code class=\"language-text\">p5ml.KNNImageClassifier</code> 物件 <code class=\"language-text\">knn</code>，接著在 <code class=\"language-text\">turnoffButton</code> 按下時加入範例 <code class=\"language-text\">knn.addImage(video, 4)</code>，並設定該範例類別為 4。</p>\n<p>接著在 Line 8 開始，利用 <code class=\"language-text\">setInterval()</code> 不斷的進行 <code class=\"language-text\">knn.predict()</code>，這樣就能盡量即時分辨 WebCam 傳來的資料。</p>\n<p>其他部分，像是如何讓 WebCam 的影像顯示在 <code class=\"language-text\">&lt;video></code> tag 中的程式碼也是在 <code class=\"language-text\">popup.js</code> 中實作。</p>\n<p>完整 popup.js 程式碼可以看 <a href=\"https://gist.github.com/ArvinH/f10ea345904d09f51aebb3f1e34e95e5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這裏</a> 或是<a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension/blob/master/scripts/popup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">原作者的</a></p>\n<p>實作到這裡以後，基本上你就可以開啟 Extension 然後進行一些影片的分類，像是這樣：</p>\n<p><img src=\"/image/deeplearn-demo-2.gif\" alt=\"教育你的 extension\"></p>\n<p>可以從上面的片段發現，你需要點擊對應分類的按鈕，並且做出你想要的動作來教導你的 extension，讓他認得你的手勢！\n當你給予的 example 越多，就愈有機會判斷得更好。</p>\n<h2 id=\"整合-extension---contentjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---contentjs\" aria-label=\"整合 extension   contentjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - content.js</h2>\n<p>這邊假定大家都知道 Extension 的實作方式（如果不知道可以從<a href=\"https://developer.chrome.com/extensions/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>學習）。</p>\n<p>在 Extension 中，可以透過 <code class=\"language-text\">chrome.runtime.sendMessage()</code> 與 <code class=\"language-text\">chrome.runtime.onMessage.addListener()</code> 來針對 Popup page 與 當前頁面的 content script 進行溝通，我們就是利用這點來將辨識完的手勢，轉換成頁面上的互動操作：</p>\n<div class=\"gatsby-highlight\" data-language=\"jscontent.js\"><pre class=\"language-jscontent.js\"><code class=\"language-jscontent.js\">chrome.runtime.onMessage.addListener(gotMessage)\nfunction gotMessage(message, sender, sendResponse){\n  let direction = 0;\n  if(message.direction == &#39;up&#39;){\n    direction = -500;\n  } else if(message.direction == &#39;down&#39;){\n    direction = +500;\n  } else if (message.direction == &#39;turn off&#39;) {\n    const mask = document.getElementById(&#39;body-maskDiv&#39;);\n    if (mask) {\n      removeMask();\n    } else {\n      addMask();\n    }\n  }\n  window.scrollBy({ \n    top: direction,\n    left: 0, \n    behavior: &#39;smooth&#39; \n  });\n}</code></pre></div>\n<p>到這邊為止基本上就完成了範例的所有功能，對完整程式碼（或是遮罩實作方式 XD）有興趣的人可以從<a href=\"https://gist.github.com/ArvinH/96fa770dcd007c02a69f31676020cbe6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>取得。</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>這次算是初步嘗試在前端上應用 ML 相關的功能，介紹大家有像是 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a> 這樣有趣的 library 可以使用，希望可以有多一點的前端高手來發揮創意，並分享作品出來，不然真的很難找到相關的經驗分享。\n不過當然，這只是個非常粗淺的應用，更是用非常 High level 的 API 來實作，還是需要真正去了解 ML 相關的演算法，才是比較正確的學習方向，接下來我也會繼續學習，p5-deeplearn-js 會是一個不錯的起點，加上 deeplearn.js 的 KNN 演算法程式碼都算蠻簡潔的，以 Typescript 實作，閱讀起來比起純 JS 好理解一些（多了 Type 很有幫助啊！），推薦給各位！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a></li>\n<li><a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a></li>\n<li><a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a></li>\n</ol>","fields":{"slug":"p-5-ml-deeplearnjs"},"frontmatter":{"title":"前端也能玩 Deepleaning - 以 p5-deeplearn-js 為例","date":"01-13-2018","tags":["deeplearning","deeplearnjs","p5ML","chrome extension"]},"timeToRead":8}},"pageContext":{"slug":"p-5-ml-deeplearnjs","prev":{"excerpt":"好歌分享：Surfing day feat.秋僧","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/DaBdf8ULeiA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Surfing day feat.秋僧</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/DaBdf8ULeiA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>大概是在 2016 年底的時候，我整個人的心理狀態很糟，一直覺得自己對生活的掌控力非常低落，庸庸碌碌的過著每一天，卻不曉得自己的目標在哪，對什麼都興致缺缺，似乎把生活遺失了。</p>\n<p>我試著想從過往日常生活中的所作所為來找出一些癥結點，結果發現記憶有限，越想越覺得自己好像什麼都沒完成，接著就進入無止盡的負面迴圈...</p>\n<p>為了打破這樣的心理狀態，我從 2017 年的一月開始記錄自己每天的生活，將一整天所做的事項記錄在 Google Calendar 中，有了這樣的紀錄後，我每週都會回顧一下自己這一整個星期所做的事情，花在工作、運動、娛樂、學習等等的時間如何，讓自己在負面情緒滿漲時，能看看自己其實還是達成了不少事，同時也能隨時警惕自己在時間管理與各種事項間的分配是否有需要調整的部分。</p>\n<p>好啦，說穿了就是用 Google Calendar 寫日記。</p>\n<p>而現在又接近年底了，在這近乎一年的紀錄中，我想應該可以來做個 Year End Review，利用 D3 來幫助我將記錄在 Google Calendar 上的資料視覺化出來！</p>\n<p>大致的想法是將不同分類的資料整理出來，然後看看 <strong><em>我在這一年當中，每一天花在每一個類別的事項的 Heat Map</em></strong> 會是長什麼樣子，並加上簡單的 Select box 方便切換。</p>\n<p>成果截圖如下：</p>\n<p><img src=\"/image/arvin-yerr-calendar.png\" alt=\"YERR\"></p>\n<p>有興趣的可以連結到 <a href=\"https://bl.ocks.org/ArvinH/56909246bd584743fa5ee7ad148ad1ac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bl.ocks 看 Demo 與完整的程式碼</a></p>\n<h1 id=\"資料視覺化的第一步當然是取得資料\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E8%A6%96%E8%A6%BA%E5%8C%96%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5%E7%95%B6%E7%84%B6%E6%98%AF%E5%8F%96%E5%BE%97%E8%B3%87%E6%96%99\" aria-label=\"資料視覺化的第一步當然是取得資料 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料視覺化的第一步，當然是取得資料</h1>\n<p>Google 存了多少資料想必大家都心知肚明，而他老大哥也是願意把我們的資料還給我們，只要連結到 <a href=\"https://takeout.google.com/settings/takeout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Takeout</a> 就可以將你在 Google 服務上的資料副本下載下來：</p>\n<p><img src=\"/image/google-takeout.png\" alt=\"Google Takeout\"></p>\n<p>既然我要視覺化我在 Google Calendar 上的資料，當然就是選取 Calendar 來下載：</p>\n<p><img src=\"/image/google_calendar_details.png\" alt=\"Google Calendar download\"></p>\n<p>或著，你也能直接從 Google Calendar 匯出你的日曆：</p>\n<p><img src=\"/image/google_calendar_export.png\" alt=\"Export from Google Calendar\"></p>\n<p>仔細看一下，這兩種方式下載到的資料其格式都是 <a href=\"https://zh.wikipedia.org/wiki/ICalendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">iCalendar</code></a>。</p>\n<p>是 <code class=\"language-text\">iCalendar</code> 又如何呢？通用的標準格式不是很好嗎？代表我之後若換成 Apple 的 iCal，我這次的專案也能套用上去耶！</p>\n<p>But!</p>\n<p>在我當初紀錄日曆時，我每一項 item 的資訊很少，就只是單純的填入 Summary，並且依照分類給予顏色。</p>\n<p>而在 <code class=\"language-text\">iCalendar</code> 的標準中，並沒有 Google Calendar 的顏色資訊，所以我只好忍痛放棄這條方便的道路...（這告訴我們做事還是不能太懶）</p>\n<p>iCalendar 的內容大概長這樣，以 <code class=\"language-text\">BEGIN:VEVENT</code> 開始，<code class=\"language-text\">END:VEVENT</code> 為止：</p>\n<div class=\"gatsby-highlight\" data-language=\"ics\"><pre class=\"language-ics\"><code class=\"language-ics\">BEGIN:VEVENT\nDTSTART;VALUE=DATE:20171209\nDTEND;VALUE=DATE:20171210\nDTSTAMP:20171210T075750Z\nUID:839skadkfcd03812j3f0c030s0s@google.com\nCREATED:20171210T024308Z\nDESCRIPTION:\nLAST-MODIFIED:20171210T024310Z\nLOCATION:\nSEQUENCE:0\nSTATUS:CONFIRMED\nSUMMARY:運動（主：背）\nTRANSP:TRANSPARENT\nBEGIN:VALARM\nACTION:DISPLAY\nDESCRIPTION:This is an event reminder\nTRIGGER:-F0AB0H30C0D\nEND:VALARM\nBEGIN:VALARM\nACTION:EMAIL\nDESCRIPTION:This is an event reminder\nSUMMARY:Alarm notification\nATTENDEE:mailto:arvin0731@gmail.com\nTRIGGER:-F0AB0H30C0D\nEND:VALARM\nEND:VEVENT</code></pre></div>\n<h2 id=\"既然是-google就會有-api\" style=\"position:relative;\"><a href=\"#%E6%97%A2%E7%84%B6%E6%98%AF-google%E5%B0%B1%E6%9C%83%E6%9C%89-api\" aria-label=\"既然是 google就會有 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>既然是 Google，就會有 API</h2>\n<p>沒辦法直接載到資料，那就從 API 取得吧！</p>\n<p>Google 最棒的一點就是有一堆 API，而為人詬病的剛好是這些 API 常常沒有完善的 Doc。</p>\n<p>幸運的是，Google Calendar API 的文件還蠻好懂的，因為給了一個<a href=\"https://developers.google.com/google-apps/calendar/quickstart/nodejs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">直接可以複製來用的範例 Sample</a>（笑</p>\n<p>直接照著步驟做就可以了，他有很多實作版本，我是用熟悉的 Node.js 來幫我爬取資料。</p>\n<p>唯一要注意的是步驟一中的 <a href=\"https://console.developers.google.com/start/api?id=calendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this wizard</a> 要好好照著說明執行，即便他步驟看起來有些匪夷所思，像是要你到某一頁後按下 <code class=\"language-text\">Cancel</code> button (eg. On the Add credentials to your project page, click the Cancel button.)</p>\n<p>當你設定好一切，取得 OAuth2 需要的 credentials 後，可以參照他下面的範例依據你想要的資料作修改，比較關鍵的程式是這幾行：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">var</span> calendar <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span><span class=\"token function\">calendar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> queryOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        auth<span class=\"token operator\">:</span> auth<span class=\"token punctuation\">,</span>\n        calendarId<span class=\"token operator\">:</span> <span class=\"token string\">'primary'</span><span class=\"token punctuation\">,</span>\n        timeMax<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        singleEvents<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        orderBy<span class=\"token operator\">:</span> <span class=\"token string\">'startTime'</span><span class=\"token punctuation\">,</span>\n        maxResults<span class=\"token operator\">:</span> <span class=\"token number\">2500</span> <span class=\"token comment\">// 不給 maxResults 的話，預設值就是 2500</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        queryOptions<span class=\"token punctuation\">.</span>pageToken <span class=\"token operator\">=</span> pageToken<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    calendar<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>queryOptions<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ... 從 response 中取得需要的資料</span>\n        <span class=\"token comment\">// var events = response.items;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>我們使用的是 v3 的 google calendar api，利用 <code class=\"language-text\">calendar.events.list</code> 可以取得某個 Calendar 的 events 列表，在 <code class=\"language-text\">queryOptions</code> 中，比較重要的有下面幾個:</p>\n<p><code class=\"language-text\">auth</code> 就是你在 <a href=\"https://console.developers.google.com/start/api?id=calendar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this wizard</a> 中產生的 credentials，你在頁面上就能找到下載 json 的連結：</p>\n<p><img src=\"/image/googleapi-credentials.png\" alt=\"download credentials\"></p>\n<p><code class=\"language-text\">calendarId</code> 是你想抓取的 Calendar 名稱，primary 指的是你登入帳號的主要日曆。</p>\n<p><code class=\"language-text\">timeMax</code> (or <code class=\"language-text\">timeMin</code>) 可以用來規範你想抓取哪段時間內的 events。</p>\n<p>最後是 <code class=\"language-text\">pageToken</code>，由於 Google Calendar API 有限制，你一次最多只能抓取 2500 個 events，即便你有設定 <code class=\"language-text\">maxResults</code> 這個參數也一樣。因此你會需要透過每次 API request 回傳的 <code class=\"language-text\">nextPageToken</code> 來進行下一頁的 Query。（沒錯，response 回來的是 <code class=\"language-text\">nextPageToken</code>，但你下 Query 時帶的是 <code class=\"language-text\">pageToken</code>，請注意！）</p>\n<p>可以設定的參數還非常多，可以從 Google 提供的 <a href=\"https://developers.google.com/apis-explorer/#p/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API Explorer</a> 中選取 <code class=\"language-text\">Calendar API</code> 來測試看看哪樣的參數是你需要的！每個參數都有對應的說明，還算清楚。</p>\n<p>我在這部分的實作放在 <a href=\"https://gist.github.com/ArvinH/a46f9af2df4316651d2056e610ba68b1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gist</a> 上，有興趣可以參考，寫得很暴力簡陋，畢竟這不是這次的重點～</p>\n<p>主要是依照日曆中每筆 Event 的時間與顏色做分類與統計，依照不同顏色（也就是不同類別）分別存放到不同檔案。</p>\n<p>資料格式也很簡單：</p>\n<div class=\"gatsby-highlight\" data-language=\"csv\"><pre class=\"language-csv\"><code class=\"language-csv\"><span class=\"token value\">date</span><span class=\"token punctuation\">,</span><span class=\"token value\">colorIdNum</span>\n<span class=\"token value\">2017-10-10</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-11</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-12</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-13</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-14</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">2017-10-15</span><span class=\"token punctuation\">,</span><span class=\"token value\">1</span>\n<span class=\"token value\">...</span>\n<span class=\"token value\">..</span>\n<span class=\"token value\">.</span></code></pre></div>\n<h1 id=\"資料有了終於能開始畫圖了\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E6%9C%89%E4%BA%86%E7%B5%82%E6%96%BC%E8%83%BD%E9%96%8B%E5%A7%8B%E7%95%AB%E5%9C%96%E4%BA%86\" aria-label=\"資料有了終於能開始畫圖了 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料有了終於能開始畫圖了！</h1>\n<p>主要參考 <a href=\"https://bl.ocks.org/mbostock/4063318\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mike Bostock 大神的作品</a>，改成只繪製單一年度圖表，並加上切換資料後的動畫。</p>\n<p>接下來是手把手說明：</p>\n<p>我們總共需要三個 Function：<code class=\"language-text\">DrawCalendar</code>、<code class=\"language-text\">UpdateCalendar</code> 與 <code class=\"language-text\">changeDataSrc</code>，分別用來繪製圖表、更新圖表與更新資料。</p>\n<p>最主要的當然就是 <code class=\"language-text\">DrawCalendar</code>。繪製日曆又可分為三個步驟：</p>\n<h3 id=\"steps-i-設定日曆基本外觀大小顏色svg-container\" style=\"position:relative;\"><a href=\"#steps-i-%E8%A8%AD%E5%AE%9A%E6%97%A5%E6%9B%86%E5%9F%BA%E6%9C%AC%E5%A4%96%E8%A7%80%E5%A4%A7%E5%B0%8F%E9%A1%8F%E8%89%B2svg-container\" aria-label=\"steps i 設定日曆基本外觀大小顏色svg container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps I: 設定日曆基本外觀（大小、顏色、svg container）</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">DrawCalendar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataSrc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> width <span class=\"token operator\">=</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span>\n      height <span class=\"token operator\">=</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span>\n      cellSize <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> formatPercent <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">scaleQuantize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">domain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"#006837\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#1a9850\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#66bd63\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#a6d96a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d9ef8b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ffffbf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#fee08b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#fdae61\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#f46d43\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d73027\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#a50026\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// ..</span>\n  <span class=\"token comment\">// .</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面這段很單純的就是設置好圖表的基本資訊，包含寬、高與日曆中每\"天\"的格子大小，利用 <code class=\"language-text\">d3.scaleQuantize()</code> 創建一個 color 函數，用來將之後的資料映射到對應的顏色。</p>\n<p>這邊有個 <code class=\"language-text\">d3.format(\"d\")</code> 的函數，其實在這邊用不到，但還是想介紹一下。\n<code class=\"language-text\">d3.format()</code> 是個方便你正規化資料數值的函式，例如你想將數值侷限在小數點後兩位，就可以用 <code class=\"language-text\">d3.format(\"2f\")</code>，或是想轉換成百分比，可以用 <code class=\"language-text\">d3.format(\".2%\")</code>，這樣會將你輸入的數值乘上 100 後，再加上百分比符號，並依照 % 前的數字來決定小數點後的位數。</p>\n<p>eg. d3.format(\".2%\")(0.234) === 20.34% <a href=\"http://www.oxxostudio.tw/articles/201501/svg-d3-12-formatting.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(可參考此網站說明)</a></p>\n<p>接著是繪製主要的 calendar chart svg container：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> svg <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#calendar-chart\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translate(\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">-</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">53</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">-</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transform\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"translate(-6,\"</span> <span class=\"token operator\">+</span> cellSize <span class=\"token operator\">*</span> <span class=\"token number\">3.5</span> <span class=\"token operator\">+</span> <span class=\"token string\">\") rotate(-90)\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-family\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sans-serif\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font-size\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-anchor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://github.com/d3/d3-array#range\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">d3.range()</code></a> 會回傳根據你傳入的區間，回傳一段連續數值陣列。</p>\n<p>我們利用 <code class=\"language-text\">d3.range(2017, 2018)</code> 取得陣列資料，會回傳長度為一，包含 2017 這個數值的陣列 <code class=\"language-text\">[2017]</code>。</p>\n<p>你可能會想，為什麼我要這樣做？</p>\n<p>只需要一年的資料，就直接 append svg 就好呀，何必 binding 2017 這個值到 svg 的 <code class=\"language-text\">__data__</code> 裡面呢？</p>\n<p>賣個關子，待會看到 Steps II 你就會知道了！</p>\n<p>而剩下的部分就是利用 <code class=\"language-text\">transform</code> 來位移 svg，為整個圖表保留空間，並加上文字標記。</p>\n<h3 id=\"steps-ii-繪製日曆中的每一天也就是每個小格子啦\" style=\"position:relative;\"><a href=\"#steps-ii-%E7%B9%AA%E8%A3%BD%E6%97%A5%E6%9B%86%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%80%E5%A4%A9%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%AF%8F%E5%80%8B%E5%B0%8F%E6%A0%BC%E5%AD%90%E5%95%A6\" aria-label=\"steps ii 繪製日曆中的每一天也就是每個小格子啦 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps II: 繪製日曆中的每一天（也就是每個小格子啦～）</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rect <span class=\"token operator\">=</span> svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#ccc\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rect\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeDays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rect\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> cellSize<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> cellSize<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span>timeWeek<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeYear</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cellSize<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cellSize<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">datum</span><span class=\"token punctuation\">(</span>d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">timeMonths</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> pathMonth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>要繪製出一年中的 \"每一天\"，我們可以直接 for loop 跑 365 次，或是產生 365 筆資料，但更聰明的做法是利用 <a href=\"https://github.com/d3/d3-time#timeDays\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-time 提供的 timeDays 函數</a> 來幫我們產生出特定日期區間的日期資料！</p>\n<p><code class=\"language-text\">d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));</code></p>\n<p>其中 <code class=\"language-text\">new Date()</code> 的第一個參數 <code class=\"language-text\">d</code> 代表年，<code class=\"language-text\">0</code> 代表第一個月（月份從 0 開始），<code class=\"language-text\">1</code> 則是第一天，因此這邊會回傳 d 年到 d + 1 年間的每一天。</p>\n<p>好那問題來了，這個 <code class=\"language-text\">d</code> 是什麼呢？</p>\n<p>要回答這個問題，必須先了解一下 d3 中的 <code class=\"language-text\">selection.data()</code>。</p>\n<p>我以前都以為 <code class=\"language-text\">data()</code> 只能夠丟入資料陣列，但是在這次的實作過程中才發現，原來他可以接受函數！</p>\n<p>但他是怎麼運作的呢？我們偷看一下 <a href=\"https://github.com/d3/d3-selection/blob/master/src/selection/data.js#L94\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-selection 的原始碼</a></p>\n<p><img src=\"/image/d3-selection-src.png\" alt=\"d3-selection src\"></p>\n<p>真的蠻有趣的，他其實是先判斷你傳入的 <code class=\"language-text\">value</code> 是不是函數，若不是，會先利用 <code class=\"language-text\">constants()</code> 將你的值包裹過，讓他變成可執行的函數：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsconstants.js\"><pre class=\"language-jsconstants.js\"><code class=\"language-jsconstants.js\">export default function(x) {\n  return function() {\n    return x;\n  };\n}</code></pre></div>\n<p>他會將 <code class=\"language-text\">parent.__data__</code> 傳入該函數中執行，回傳的就會是該 <code class=\"language-text\">selector</code> 的 <code class=\"language-text\">__data__</code>。所以直接傳入 function 也是可行的！</p>\n<p>以我們的例子來說，<code class=\"language-text\">rect</code> 的 parent 就是 <code class=\"language-text\">svg</code>，而你們記得在 Steps I 時，我們 binding 陣列 <code class=\"language-text\">[2017]</code> 到 <code class=\"language-text\">svg</code> 的 <code class=\"language-text\">__data__</code> 中嗎？這邊就派上用場了！在 rect 的 <code class=\"language-text\">data()</code> 中的函數所接收到的 <code class=\"language-text\">d</code> 值就是 <code class=\"language-text\">2017</code>。</p>\n<p>而上述的 <code class=\"language-text\">d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1));</code> 就會回傳 2017 到 2018 中間 365 筆的日期資料！我們也因此得到 365 個小方塊啦！</p>\n<p>接著，利用類似的概念，使用 <code class=\"language-text\">d3.timeMonths()</code> 產生 12 筆月份資料，接著實作 <code class=\"language-text\">pathMonth()</code> 來畫出 svg path：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspathmonth()\"><pre class=\"language-jspathmonth()\"><code class=\"language-jspathmonth()\">function pathMonth(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n    d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0),\n    d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return &quot;M&quot; + (w0 + 1) * cellSize + &quot;,&quot; + d0 * cellSize\n    + &quot;H&quot; + w0 * cellSize + &quot;V&quot; + 7 * cellSize\n    + &quot;H&quot; + w1 * cellSize + &quot;V&quot; + (d1 + 1) * cellSize\n    + &quot;H&quot; + (w1 + 1) * cellSize + &quot;V&quot; + 0\n    + &quot;H&quot; + (w0 + 1) * cellSize + &quot;Z&quot;;\n}</code></pre></div>\n<p>這段邏輯看似複雜，其實很直覺。</p>\n<p><a href=\"https://github.com/d3/d3-time#interval_count\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">d3.timeWeek.count(start, end)</code></a> 可以計算出 start 到 end 這兩個日期間有幾週。</p>\n<p><code class=\"language-text\">t0</code> 是目前傳入的時間，依照 d3.timeMonths() 的產出，會是一個月的第一天，<code class=\"language-text\">t1</code> 則是該月的月底。\n<code class=\"language-text\">d0</code> 與 <code class=\"language-text\">d1</code> 就是單純的 <code class=\"language-text\">t0</code>、<code class=\"language-text\">t1</code> 對應的 day，就是星期幾。\n<code class=\"language-text\">w0</code> 算出從 <code class=\"language-text\">t0</code> 該年的第一天到 <code class=\"language-text\">t0</code> 有幾週，依此類推 <code class=\"language-text\">w1</code> 就是相對於 <code class=\"language-text\">t1</code>。</p>\n<p>用這些數值就能夠 <code class=\"language-text\">M(移動)</code> 到月初的位置，並往下移動 7 天 <code class=\"language-text\">V 7*cellSize</code>，接著在水平位移(H) 到月底的位置，然後垂直位移到月底日期的星期位置<code class=\"language-text\">(d1 +1) * cellSize</code>，最後為到原點把整個月份框起來。</p>\n<p>svg path 的繪製方法可以[參考這篇](<a href=\"http://www.oxxostudio.tw/articles/201406/svg-04-path-1.html%E3%80%82\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.oxxostudio.tw/articles/201406/svg-04-path-1.html。</a></p>\n<p>到目前為止可以畫出如下的圖：</p>\n<p><img src=\"/image/months-outline.png\" alt=\"outline\"></p>\n<h3 id=\"steps-iii-該開始-binding-資料了\" style=\"position:relative;\"><a href=\"#steps-iii-%E8%A9%B2%E9%96%8B%E5%A7%8B-binding-%E8%B3%87%E6%96%99%E4%BA%86\" aria-label=\"steps iii 該開始 binding 資料了 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps III: 該開始 Binding 資料了</h3>\n<p>再來算是最後一步了，我們將資料綁定並填入剛剛產生的格子中！</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">d3<span class=\"token punctuation\">.</span><span class=\"token function\">csv</span><span class=\"token punctuation\">(</span>dataSrc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> csv</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">nest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 將 date 抽到外層當 key</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 透過 rollup 將 value 設為 colorId</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">rollup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">+</span>d<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>colorIdNum<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">object</span><span class=\"token punctuation\">(</span>csv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  rect<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 找出有 match 到的日期，表示那天我有做事 XD</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> d <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">formatPercent</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這邊主要就兩個步驟，第一步先用 <a href=\"https://github.com/d3/d3-collection#nests\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3.nest</a> 來整理資料，我們需要把陣列中每筆資料的 \"date\" 抓出來當 Key，如此一來，在第二步中，我們可以直接利用 <code class=\"language-text\">d in data</code> 的語法在 <code class=\"language-text\">selection.filter()</code> 中進行過濾，選出 365 個格子中，哪些有跟我們真正的 csv 日期資料 match，有 match 到的格子，我們填入顏色！（使用最前面的 color 函數來做映射）</p>\n<p>填入和顏色後：</p>\n<p><img src=\"/image/color-calendar.png\" alt=\"填入資料顏色後的 calendar\"></p>\n<h3 id=\"steps-iv-加入動態切換資料的功能\" style=\"position:relative;\"><a href=\"#steps-iv-%E5%8A%A0%E5%85%A5%E5%8B%95%E6%85%8B%E5%88%87%E6%8F%9B%E8%B3%87%E6%96%99%E7%9A%84%E5%8A%9F%E8%83%BD\" aria-label=\"steps iv 加入動態切換資料的功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Steps IV: 加入動態切換資料的功能</h3>\n<p>最後我們實作一下綁定在 <code class=\"language-text\">&lt;select></code> 元素上的 <code class=\"language-text\">onchange</code> 函數來做資料切換，而在圖表方面，我們只需要選取出 <code class=\"language-text\">rect</code> 並重新 <code class=\"language-text\">filter</code> 資料即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 切換資料</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeDataSrc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dataSrcSelector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">UpdateCalendar</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">calendarData-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.csv</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 更新圖表，加上 `transition()` 與 `duration()` 讓過程滑順一些</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">UpdateCalendar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataSrc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// ..</span>\n  d3<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  d3<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"成果\" style=\"position:relative;\"><a href=\"#%E6%88%90%E6%9E%9C\" aria-label=\"成果 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>成果</h2>\n<p><img src=\"/image/calendar-d3.gif\" alt=\"final demo\">\n<a href=\"https://bl.ocks.org/ArvinH/56909246bd584743fa5ee7ad148ad1ac\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 與完整的程式碼</a></p>\n<p>嗯～看起來我工作頗認真，不過等等...怎麼好像週末顏色都比較深啊哈哈哈...哈哈..哈..嗚嗚嗚</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>當初開始在 Google Calendar 上紀錄日誌時，並沒有想到可以在年終的時候進行整年的 review，所以每天的紀錄都很隨性，並沒有很完整的進行分類，有些可惜，但還是能透過資料視覺化的結果，看出我在時間分配的掌控度有相當的進步空間，像是花在工作與培養額外興趣（娛樂）的時間有蠻大的落差。</p>\n<p>不管怎麼說，有了這次的經驗，相信明年的 Year End Review 會更好！\n如果你也覺得這樣做有趣，或許可以加入我的行列，也或許想想有什麼方式可以為你自己進行一次年終 Review，相信都會有所收穫！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"http://www.oxxostudio.tw/articles/201501/svg-d3-12-formatting.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3 formatting</a></li>\n<li><a href=\"https://github.com/d3/d3-time\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-time</a></li>\n<li><a href=\"https://github.com/d3/d3-array\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-array</a></li>\n<li><a href=\"https://github.com/d3/d3-collection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-collection</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN Date</a></li>\n<li><a href=\"https://bl.ocks.org/mbostock/4063318\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mbostock calendar view</a></li>\n<li><a href=\"https://developers.google.com/google-apps/calendar/quickstart/nodejs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Calendar API</a></li>\n</ol>","id":"6b27745a-f793-5c6c-8bf7-d8d3ba7bb33b","fields":{"slug":"d-3-v-4-calendar-yearendreview"},"frontmatter":{"date":"2017-12-12T21:10:27.000Z","title":"一起用 Google Calendar 與 D3.js 進行年終回顧吧！","tags":["google","google calendar api","d3","d3v4","data visualization"],"type":"tech","slug":"d3v4-calendar-yearendreview"},"timeToRead":15},"next":{"excerpt":"好歌分享：Oh Girl","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/IjSHmuEY9OQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Oh Girl</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/IjSHmuEY9OQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>身為工程師，想辦法提高自己的工作效率是一件很重要的事情，<del>畢竟這樣才有多餘的時間打電動</del>，除了平時加強各種知識與累積經驗外，撰寫工具的能力也值得培養。剛好在前不久，公司舉辦了一次內部的 hackday，我就利用這個時間針對公司內部的 framework 寫了一個簡單的 chrome devtools 的 extension，增加開發上的便利性。而在開發的過程中，發現關於 Chrome devtools extension 的文章並不是很多，中文的更少。總之，雖然<a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方文件</a>該有的都有，但跟 vscode extension 的文件比起來就是差了很多，光是排版就讓人不太想閱讀...\n因此希望藉此篇文章介紹開發 chrome devtools extension 的方法與一些注意事項。（註：可能需要先有點 Chrome extension 的相關知識會比較好懂） </p>\n<p>先給大家看其中一個範例（共有兩個），主要是能自動將 DOM 物件的 element inline style 轉化為 <a href=\"https://acss.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atomic CSS</a> 的 class 名稱（<a href=\"https://blog.techbridge.cc/2017/04/29/css-methodology-atomiccss/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">不知道 Atomic CSS 的可以看這篇</a>），如此一來，在 Inspector 中調整完 style 後，就能直接將轉換好的 Atomic CSS 複製貼上到 code 當中，省去一次自己轉換的時間（有時還會忘記 class name...）</p>\n<p><img src=\"/image/devtools-acss-demo.gif\" alt=\"Sidebar Demo\"></p>\n<h1 id=\"chrome-devtools-extension-基本介紹\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9\" aria-label=\"chrome devtools extension 基本介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension 基本介紹</h1>\n<p>有開發過 Chrome extension 的人應該都知道，我們會有所謂的 <code class=\"language-text\">Content Script</code> 與 <code class=\"language-text\">Background page</code> 兩種不同的 context 存在於我們的 extension 中，而 <code class=\"language-text\">Devtools page</code> 也是一個獨立的 context，從下面這張官方圖可以很清楚的看到其之間的差異：</p>\n<p><img src=\"/image/devtools-extension-overview.png\" alt=\"官方圖片\"></p>\n<ul>\n<li>Content Script: 可以存取實際頁面的 DOM 物件與事件。</li>\n<li>Background page: 可以調用多數 extension API，像是 <code class=\"language-text\">chrome.runtime.*</code> 與 <code class=\"language-text\">chrome.tabs.onUpdated</code>，並負責 extension 與 Content script、Devtools page 之間的溝通。</li>\n<li>Devtools page: 可以調用 <code class=\"language-text\">chrome.extensions.*</code> 與 <code class=\"language-text\">chrome.devtools.*</code> Devtools API，其他的就都無法存取。可以透過 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval</code> 能與目前開啟 inspector 的頁面互動。</li>\n</ul>\n<p>與一般 Extension 不同的地方就在於多了 Devtools API 需要了解，而主要的 Devtools API 其實也只有三種：</p>\n<h3 id=\"1-chromedevtoolsinspectedwindow\" style=\"position:relative;\"><a href=\"#1-chromedevtoolsinspectedwindow\" aria-label=\"1 chromedevtoolsinspectedwindow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. chrome.devtools.inspectedWindow</h3>\n<p>透過 <code class=\"language-text\">inspectedWindow.eval</code> 可以在當前開啟 inspector 的頁面 context 執行 javascript：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// result 為 window.$0.style.cssText</span>\n    <span class=\"token comment\">// 在當前頁面的 context 下支執行結果 </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-chromedevtoolsnetwork\" style=\"position:relative;\"><a href=\"#2-chromedevtoolsnetwork\" aria-label=\"2 chromedevtoolsnetwork permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. chrome.devtools.network</h3>\n<p>network api 可以取得你在 <code class=\"language-text\">Network panel</code> 看到的資訊。\n<img src=\"/image/devtools-networkpanel.png\" alt=\"network panel\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 取得當前開啟 inspector 的頁面所發出的 request 中，bodySize > 40*1024 的 url</span>\nchrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>network<span class=\"token punctuation\">.</span>onRequestFinished<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>bodySize <span class=\"token operator\">></span> <span class=\"token number\">40</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">'console.log(\"Large request: \" + unescape(\"'</span> <span class=\"token operator\">+</span>\n              <span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-chromedevtoolspanels\" style=\"position:relative;\"><a href=\"#3-chromedevtoolspanels\" aria-label=\"3 chromedevtoolspanels permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. chrome.devtools.panels</h3>\n<p>panels api 應該是最重要的一塊了，因為我們必須透過它來創建 Panel 或 Sidebar。</p>\n<p><img src=\"/image/devtools-panel&#x26;sidebar.png\" alt=\"panel-sidebar\"></p>\n<p>Chrome devtools 的 extension UI 基本上就是分為上面這兩種類型，與上方 <code class=\"language-text\">Elements</code>、<code class=\"language-text\">Network</code> 和 <code class=\"language-text\">Sources</code> 同 Level 的稱為 Panel，而在每個 Panel 底下還可以另外創建 Sidebar，像是 Elements panel 右邊的 <code class=\"language-text\">style sidebar</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Panel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// code invoked on panel creation</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>看完這些 API 應該也是一頭霧水，也不清楚到底要在哪裡呼叫，別急，接下來會針對這兩種 UI 個別實作一個範例來說明。</p>\n<h1 id=\"chrome-devtools-extension---sidebar-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---sidebar-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   sidebar 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Sidebar 實作</h1>\n<p>開頭的範例中，就是採取 Sidebar 的 UI，屬於 <code class=\"language-text\">ElementPanel</code> 底下的 sidebar。</p>\n<p>接著先看一下我們的檔案結構：</p>\n<img src=\"/image/devtools-foldr-structure.png\" style=\"width:50%;height:50%\">\n<p>很簡單，重點只有三個檔案，ruleMap.js 是跟 Atomic CSS 相關的 mapping 檔案，這邊不需要理會：</p>\n<h3 id=\"1-manifestjson\" style=\"position:relative;\"><a href=\"#1-manifestjson\" aria-label=\"1 manifestjson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. manifest.json</h3>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Atomic CSS Devtool\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtool extension for making Acss users happier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devtools_page\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtools.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"manifest_version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>  跟一般 extension 一樣，要在 manifest.json 中做相對應設定，既然是開發 Devtools extension，自然就要註冊 <code class=\"language-text\">devtools_page</code>，指定為 devtools.html，這份 html 就是用來載入相關 js 的入口頁面。</p>\n<h3 id=\"2-devtoolshtml\" style=\"position:relative;\"><a href=\"#2-devtoolshtml\" aria-label=\"2 devtoolshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. devtools.html</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ruleMap.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>devtools.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>  內容非常簡單，載入整個 devtools extension 需要的 javascript 檔案。如果你在 devtools.js 中有其他需要使用的 lib，也請記得在這個地方進行載入，像是 lodash 等等。\n但若你要載入非本地端的 javascript（透過 cdn 之類），會遇到 CSP(content security policy) 的錯誤，在 <a href=\"#notice\">注意事項</a> 中我會再說明解法。</p>\n<h3 id=\"3-devtoolsjs\" style=\"position:relative;\"><a href=\"#3-devtoolsjs\" aria-label=\"3 devtoolsjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. devtools.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"acss class\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// The function below is executed in the context of the inspected page.</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">page_generateAtomicClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selectedElementCssText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// generate Atomic CSS</span>\n          <span class=\"token comment\">// 略...</span>\n          <span class=\"token keyword\">return</span> styleMap<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acssClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> selectedElementCssText <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">const</span> acssClass <span class=\"token operator\">=</span> <span class=\"token function\">page_generateAtomicClass</span><span class=\"token punctuation\">(</span>selectedElementCssText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>\n          elements<span class=\"token punctuation\">.</span>onSelectionChanged<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>getAcssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>devtool.js 就比較複雜了，所有主要功能都發生在這裡。</p>\n<p>首先，我們利用 <code class=\"language-text\">chrome.devtools.panels.elements.createSidebarPane(sidebarTitle, callbackFunc)</code> 來創建 Sidebar，在 callback 中我們會拿到一個 <code class=\"language-text\">sidebar</code> 物件，此物件是我們與右邊這個 sidebar 區塊互動的媒介，有四種 method 可以使用：</p>\n<ul>\n<li>\n<p>sidebar.setObject()\n我們範例中就是使用 <code class=\"language-text\">setObject()</code> 來將運算完的資料（轉換後的 atomic css classname）傳到 sidebar 顯示，他會將傳入的 Object 展開：</p>\n<p><img src=\"/image/devtools-setobj.png\" alt=\"setObject\"></p>\n</li>\n<li>\n<p>sidebar.setPage() 與 sidebar.setHeight()\n若是覺得光是顯示 JS 的 Object 太單調，你也可以利用 <code class=\"language-text\">setPage()</code> 搭配 <code class=\"language-text\">setHeight()</code> 來在 sidebar 中塞入一個 html。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Atomic Css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sidebar.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"8ex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sidebar.html 中，可以自由繪製畫面，但要注意的是，你是在 sidebar 的 context 中，不能取得當前頁面的 DOM 物件資料，需要的話得透過 background.js 以 <code class=\"language-text\">postMessage</code> 來傳遞，我們最後還會提到。</p>\n</li>\n<li>\n<p>sidebar.setExpression()\n除了 <code class=\"language-text\">setObject</code> 以外，我們也能夠過 <code class=\"language-text\">setExpression</code> 直接 <code class=\"language-text\">eval()</code> js code 到當前的 inspected page。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> page_generateAtomicClass<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用方法有點特殊，因為是 eval 的方式，你需要把函式 toString() 後再傳入，此外，在傳入的 <code class=\"language-text\">page_generateAtomicClass()</code> 中，你可以取得當前 inspected 頁面的資訊！\n例如：$0 (Chrome devtools 中特殊的變數，等同於 Element panel 中你目前選取的元素 DOM)。\n官方文件中 setExpression 還能傳入一個 callback，但是我怎麼傳都會有 Error 就是了...</p>\n</li>\n</ul>\n<p>接著，我用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval(\"window.$0.style.cssText\", callback);</code> 的方式去取得 selected element 的 css 資訊，接著在 callback 中將其傳給 <code class=\"language-text\">page_generateAtomicClass()</code> 做運算，最後用 <code class=\"language-text\">sidebar.setObject()</code> 將結果輸出。</p>\n<p>等等，你不是說 <code class=\"language-text\">sidebar.setExpression</code> 就能直接取得 <code class=\"language-text\">$0</code> 了嗎？何必多此一舉？</p>\n<p>原因很簡單，因為在 <code class=\"language-text\">setExpression</code> 傳入的 function 中，你取不到 devtools.js 中的 context，所有你在 devtools.html 中 include 的 js 都無法取得，像是我需要用來轉換 Atomic css 的 <code class=\"language-text\">ruleMap.js</code> 就無法拿到，只好採此作法。在實作時需要特別注意 context 的問題！</p>\n<p>最後，我們註冊一個 <code class=\"language-text\">onSelectionChanged</code> 監聽事件 <code class=\"language-text\">chrome.devtools.panels.elements.onSelectionChanged.addListener(getAcssClass);</code>，只要選擇別的 elements 時就重新執行。</p>\n<p>到這邊為止，你就能夠做出如同一開始範例所展現功能的 Devtools extension 了！</p>\n<h1 id=\"chrome-devtools-extension---panel-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---panel-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   panel 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Panel 實作</h1>\n<p>這個範例是實作 Panel UI 的 extension，這邊我將功能降之最低，單純抓出目前頁面的 Page title，目的在展示如何將不同 context 的資訊呈現在 Devtools 的 Panel 中。</p>\n<p><img src=\"/image/devtools-panel-demo.gif\" alt=\"Panel Demo\"></p>\n<p>一樣先來看檔案結構：</p>\n<img src=\"/image/devtools-panel-structure.png\" style=\"width:50%;height:50%\">\n<p>可以看到基本上跟前一個範例差不多，只是多了 <code class=\"language-text\">Panel.html</code> 與 <code class=\"language-text\">background.js</code> 兩個檔案。</p>\n<p>另外的差別在於 <code class=\"language-text\">devtools.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isException <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Panel Demo\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// code invoked on panel creation</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>有別於前一個範例我們都將程式邏輯寫在 <code class=\"language-text\">devtools.js</code> 中，這次我們只在這邊進行創建 panel 的程式，可以從上面程式碼中看到，我們創建了一個 Title 叫做 \"Panel Demo\" 的 panel，並告訴 chrome devtool 是要用 <code class=\"language-text\">Panel.html</code> 這份檔案。</p>\n<p>在 <code class=\"language-text\">Panel.html</code> 中，我們載入主要程式邏輯 <code class=\"language-text\">getPageTitle.js</code>，你也可以看到，這邊就是繪製 Panel 的地方，因此可以載入 bootstrap 等 css style 來輔助。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container mt-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getPageTitle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>接著來看主要程式邏輯，<code class=\"language-text\">getPageTitle.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 與 background.js 建立 channel 連結</span>\n  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Devtools.js Communication\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> inspectedWindowId <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span>tabId<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Listen to messages from the background page</span>\n  port<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>action <span class=\"token operator\">===</span> <span class=\"token string\">\"reloadExtension\"</span> <span class=\"token operator\">&amp;&amp;</span> message<span class=\"token punctuation\">.</span>updatedTabId <span class=\"token operator\">===</span> inspectedWindowId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span>appNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> titleWrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n              titleWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              appNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">HTMLNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          HTMLNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// init</span>\n  <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我們利用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval()</code> 來執行 <code class=\"language-text\">document.title</code>，取得 page title 資訊，並利用 <code class=\"language-text\">document.createElement</code> 等原生 Web API 來將資訊呈現在頁面上。</p>\n<p>接著這邊我們用到了 <code class=\"language-text\">port.onMessage.addListener()</code>，原因是我們想要 monitor 頁面的變化，像是 page reload 或是 page update。而這些資訊都只能透過 <code class=\"language-text\">content script</code> 或是 <code class=\"language-text\">Background.js</code> 才能取得，因此我們必須建立一個 messaging 的 channel，讓 <code class=\"language-text\">background.js</code> 告訴我們頁面是否更新了，若更新就重新繪製 <code class=\"language-text\">Panel.html</code> 的內容。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsbackground.js\"><pre class=\"language-jsbackground.js\"><code class=\"language-jsbackground.js\">chrome.runtime.onConnect.addListener(function (port) {\n    chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n        if (changeInfo.status === &#39;complete&#39;) {\n            reloadExtension(port, tabId);\n        }\n    });\n    function reloadExtension(port, tabId) {\n        const message = { action: &quot;reloadExtension&quot;, updatedTabId: tabId };\n        port.postMessage(message);\n    }\n});\n// `background.js` 透過 `chrome.runtime.onConnect.addListener`\n// 在與 devtools page 的 script 連接到後，監聽 `chrome.tabs.onUpdated` 事件，\n// 當 update status 為 complete 後，`postMessage()` 給 `Panel.html` 中的 `getPageTitle.js`。</code></pre></div>\n<p>此外，由於 <code class=\"language-text\">Background.js</code> 存在於整個 Browser 中，因此在 <code class=\"language-text\">getPageTitle.js</code> 中，需要透過 <code class=\"language-text\">const inspectedWindowId = chrome.devtools.inspectedWindow.tabId;</code> 取得當前 inspected page 的 tab id 來過濾其他 tab 的 event change。</p>\n<p>就這樣我們就完成了一個可以取得頁面 Title 的 Devtools extension！雖然功能超廢但要是希望讓大家有個概念，知道要怎麼開始。\n基本上所有程式碼都在這邊了，但如果還是想直接載範例 code 來看的話可以移駕至 github，但只是 demo 用就是了...<a href=\"https://github.com/ArvinH/acss_devtool\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 1</a> <a href=\"https://github.com/ArvinH/chrome-devtools-extension-panelDemo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 2</a>\n<span id=\"notice\"></span></p>\n<h1 id=\"注意事項\" style=\"position:relative;\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\" aria-label=\"注意事項 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事項</h1>\n<p>在 hackday 開發內部工具時其實踩到不少雷，而在上述的範例中比較難去說明，因此在文章的最後額外與大家分享：</p>\n<ol>\n<li>\n<p>載入外部檔案的方式\n雖然在 <code class=\"language-text\">devtools.html</code> 或 <code class=\"language-text\">Panel.html</code> 中可以載入除了 <code class=\"language-text\">devtools.js</code> 外的檔案，但若是載入的檔案中存有 <code class=\"language-text\">eval()</code> 或著是透過 web 下載的 js，都會出現 CSP(content ecurity policy) 錯誤，而解法是在 <code class=\"language-text\">manifest.json</code> 中加上一行：\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval'; object-src 'self'\"\n這樣就能解決 js 中存有 <code class=\"language-text\">eval()</code> 或是 <code class=\"language-text\">setTimeout()</code> 所造成的 CSP error </p>\n<p>而若要載外部資源，則還要另外將其 domain 也加進去，當作 white list\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval' <a href=\"https://maps.googleapis.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://maps.googleapis.com/</a>; object-src 'self'\"</p>\n</li>\n<li>chrome.devtools.inspectedWindow.eval 長度限制\n在製作內部工具時，其實是需要從 inspected page 的 context 中取出大量資料到 Panel.html 中進行處理，而透過 <code class=\"language-text\">inspectedWindow.eval</code> 的方式並沒有辦法傳送太大量的 JSON object，因此我是先將其 <code class=\"language-text\">JSON.stringify()</code> 後才往後傳的。 eg. <code class=\"language-text\">chrome.devtools.inspectedWindow.eval( \"JSON.stringify(context.getStore())\"</code>。</li>\n</ol>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>今天透過兩種範例介紹了如何用最主要的 Devtools API 來搭建 Devtools extension，但當然還有許多 API 或是 Event 沒有介紹到，像 panels 就有 <code class=\"language-text\">onShown</code>, <code class=\"language-text\">onHide</code> 等監聽 devtools 是否有開啟的事件可以用，不過很難從一次的範例中全部介紹到，有需要的話還是得去查看官方文件。至少希望能讓大家對於製作增加自己工作效率的工具有一個初步的開始方向，有任何問題也歡迎提出指教！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google offical doc</a></li>\n<li><a href=\"https://div.io/topic/1669\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome Extension CSP 開發小記</a></li>\n<li><a href=\"http://www.360doc.com/content/17/1212/14/26662048_712402137.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome 插件(擴展)全攻略</a></li>\n</ol>","id":"4828b7b5-f26b-5561-8545-bf6db284bc7c","fields":{"slug":"chrome-devtool-extension"},"frontmatter":{"date":"2018-02-10T11:04:27.000Z","title":"Chrome devtools extension 實作介紹","tags":["Chrome","devtools","extension"],"type":"tech","slug":"chrome-devtool-extension"},"timeToRead":11},"type":"tech"}},"staticQueryHashes":["2123680655"]}