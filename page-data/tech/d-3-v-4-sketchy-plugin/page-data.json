{"componentChunkName":"component---src-templates-post-tsx","path":"/tech/d-3-v-4-sketchy-plugin","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>『怎樣都行』\n『只要別讓任何人打敗你』\n--- Daigo Umehara</p>\n</blockquote>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>前陣子 Mozilla 如火如荼地推出他們的量子專案，而其中在介紹 Quantum CSS 架構的時候，用了許多 [可愛的草圖]((<a href=\"https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/</a>) 來解說，讓我突然想到如果能夠將這種手繪風格套用到資料圖表上面，應該會蠻有趣的，也才因此有了這篇文章。</p>\n<p>一般來說，我們不管是用 D3.js 或是 Highcharts 等工具來製作圖表，都是朝向專業、有質感、表達清晰的方向去實作，利用各種顏色搭配與互動操作來讓圖表更漂亮更吸引人。</p>\n<p><img src=\"/image/highchart_demo.png\" alt=\"source: highchart offical site\">\n（來源：highchart offical site）</p>\n<p>但看久了以後總會有點疲乏，加上現代人專注力越來越短暫，利用一些漫畫、草圖的方式來呈現要說明的東西，反而夠容易抓住大家的注意力，像是上述文章的作者 Lin Clark 在 medium 上就有一系列的 <a href=\"https://code-cartoons.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cartoon Intro</a> 的文章。</p>\n<p>但身為前端工程師，手上的工具只有 Javascript、CSS 與 HTML，要怎麼樣 \"手繪\" 圖表呢？</p>\n<p>其實很簡單，利用 D3.js 我們就能做得到！</p>\n<h2 id=\"d3-sketchy\" style=\"position:relative;\"><a href=\"#d3-sketchy\" aria-label=\"d3 sketchy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>d3 sketchy</h2>\n<blockquote>\n<p>“開玩笑的吧？我知道 D3 可以在 Canvas 上繪圖，但 Canvas 用起來還是沒有操作 svg 來得方便，而 svg 畫的長條圖就是四四方方的啊！\"</p>\n</blockquote>\n<p>沒錯我一開始也是這麼想的，但就在某次偶然機會下，拜讀到 <a href=\"https://www.manning.com/books/d3js-in-action-second-edition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">D3 in Action</a> 這本書的作者在 <a href=\"https://github.com/emeeks/d3-sketchy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github 上的 code</a> 後讓我改觀了。</p>\n<p>這篇文章的範例就是修改自他三年前的 code，當時還是 v3 的版本，似乎也沒有將它推上 npm。</p>\n<p>所以順便利用這篇文章記錄並分享一下如何製作出 Sketchy 效果的長條圖，並且包裝成 d3 plugin 來使用！</p>\n<p>先給大家看一下比較圖：</p>\n<p><img src=\"/image/normal_barchart.png\" alt=\"一般的長條圖\"></p>\n<p><img src=\"/image/sketchy_barchart.png\" alt=\"套用 sketchy 效果的長條圖\"></p>\n<p>是不是瞬間活潑很多呢？</p>\n<p>雖然你可能會說這樣喪失了圖表的精準度，但很多時候我們只需要用來強調比較性的結果，這種情況就很適合了。</p>\n<h2 id=\"那到底是如何做到的呢\" style=\"position:relative;\"><a href=\"#%E9%82%A3%E5%88%B0%E5%BA%95%E6%98%AF%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E7%9A%84%E5%91%A2\" aria-label=\"那到底是如何做到的呢 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>那到底是如何做到的呢？</h2>\n<p>稍微仔細觀察上面的兩張圖，你可能會發現，擁有 Sketchy 效果的長條圖，好像少了間距，多了黑色的手繪編框。</p>\n<p>發現到這點以後，答案就呼之欲出了！</p>\n<p>其實所謂 Sketchy 的效果，就只是在原本的長條圖上加入了不規則的黑色邊框線條！</p>\n<p>而這些黑色的邊框其實是利用 <code class=\"language-text\">svg</code> 的 <code class=\"language-text\">path</code> 來繪製的，我們把它拆開來看就很清楚：</p>\n<p data-height=\"419\" data-theme-id=\"29194\" data-slug-hash=\"XeQbPP\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"sketchy-split\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/XeQbPP/\">sketchy-split</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>黑色的手繪風格邊框其實是利用至少九條 <code class=\"language-text\">L</code> 線段繪製出來的，等於是將原本的長方圖用線段包起來，實作上我們只要在原本長條圖的 x, y 位置與寬高上加上一些隨機變動的 offset，就可以做出這樣的效果！原理其實就這麼簡單！</p>\n<p><img src=\"/image/path-d-order.png\" alt=\"pathd\"></p>\n<h2 id=\"知道原理以後來看點-code-吧\" style=\"position:relative;\"><a href=\"#%E7%9F%A5%E9%81%93%E5%8E%9F%E7%90%86%E4%BB%A5%E5%BE%8C%E4%BE%86%E7%9C%8B%E9%BB%9E-code-%E5%90%A7\" aria-label=\"知道原理以後來看點 code 吧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>知道原理以後來看點 code 吧！</h2>\n<p>既然他的實作原理很簡單，我們理當可以將它變成一個 d3 的 plugin，像是其他 d3 v4 的模組一樣，讓其他使用者都能夠透過 npm 或是 script 的方式載入使用。</p>\n<p>而要做成 d3-plugin 的話，在 code 的架構上我們就要稍微注意一下。</p>\n<p>基本上我們希望能沿用一般使用 d3 lib 的語法習慣：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsdemo\"><pre class=\"language-jsdemo\"><code class=\"language-jsdemo\">d3.select(&#39;#svgParent&#39;).selectAll(&quot;g&quot;).data(data)\n    .enter()\n    .append(&quot;g&quot;)\n    .attr(&quot;class&quot;, &quot;bar&quot;);\n\nd3.select(&quot;#svgParent&quot;)\n    .selectAll(&quot;g.bar&quot;)\n    .each(function (d, i) {\n        var x = i * 100 + 20;\n        var y = 500 - hscale(d) / 2;\n        var rw = 100;\n        var rh = hscale(d) / 2;\n        // 1. 我們想將此 plugin 放到 d3 的 global object 內\n        // d3.sketchy 就是我們的 plugin\n        var sketchyBar = d3.sketchy.rect();\n\n        // 2. 我們要能 chaining 函數\n        sketchyBar\n            .height(rh)\n            .width(rw)\n            .x(x)\n            .y(y)\n            .fill(color)\n            .stroke(&quot;black&quot;)\n            .strokeWidth(10)\n            .jostle(5)\n        // 3. 最後我們利用 d3-selection 來幫我們選取 d3 DOM 傳入\n        d3.select(this).call(sketchyBar);\n    })</code></pre></div>\n<p>要達到這種效果，對 Javascript 熟悉的你應該都不困難，我們只要 <code class=\"language-text\">export</code> 一個物件，在其內設定一個會回傳函式的 function，製作出 closure，再實作相對應的 <code class=\"language-text\">setter</code>，並且每一個 <code class=\"language-text\">setter</code> 都回傳 <code class=\"language-text\">this</code> 即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascriptd3-sketchy\"><pre class=\"language-javascriptd3-sketchy\"><code class=\"language-javascriptd3-sketchy\">import { select as d3Select, selectAll as d3SelectAll } from &quot;d3-selection&quot;;\nimport { scaleLinear as d3ScaleLinear } from &quot;d3-scale&quot;;\nimport { line as d3Line, curveLinear as d3CurveLinear } from &quot;d3-shape&quot;;\nlet d3sketchy = {};\n\nd3sketchy.rect = function(selection) {\n\n  let rh = 50, rw = 10, w = 2, c = [0, 0],\n    fillColor = &quot;red&quot;, strokeColor = &quot;black&quot;, jostle = 0;\n\n  function d3_sketchyRect(selection) {\n      // 繪製 sketchy 長條圖的主要函式\n  }\n\n  // 實作各個屬性的 setter\n  d3_sketchyRect.height = function(data) {\n    if (!arguments.length) return rh;\n    rh = data;\n    return this;\n  }\n\n  d3_sketchyRect.width = function(data) {\n    // ... 作法與 height 相同\n  }\n\n  d3_sketchyRect.x = function(data) { /* ... */ }\n\n  d3_sketchyRect.y = function(data) { /* ... */ }\n\n  d3_sketchyRect.fill = function(data) { /* ... */ }\n\n  d3_sketchyRect.jostle = function(data) { /* ... */ }\n\n  // ... 可以再繼續設置你要的函數\n\n  return d3_sketchyRect;\n}\nexport default d3sketchy;</code></pre></div>\n<p>而 export 出去的物件函式執行後所回傳的 function 就是用來接收 d3-selection 傳遞給我們的 d3 DOM，並且繪製 sketchy bar 的函式，相關的 code 大家可以從下面的 codepen 看到，或是到我的 <a href=\"https://github.com/ArvinH/d3-sketchy/blob/master/src/sketchy.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a> 上去看也可以：</p>\n<p data-height=\"360\" data-theme-id=\"29194\" data-slug-hash=\"QqPbEK\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"d3-sketchy demo I\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/QqPbEK/\">d3-sketchy demo I</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>繪製 sketchy bar 的函式主要做三件事：</p>\n<ol>\n<li>繪製一般的長條圖</li>\n<li>Random 產生一些動態 offset （在 <code class=\"language-text\">d3_sketchyRect</code> 這個函式中可以看到有一段看似複雜的計算，其實就只是對稱的畫出內外框，像是在原理介紹那邊的圖一樣）</li>\n<li>用 Svg path 來繪製手繪邊框</li>\n</ol>\n<h2 id=\"最後來打包-plugin-吧\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%BE%8C%E4%BE%86%E6%89%93%E5%8C%85-plugin-%E5%90%A7\" aria-label=\"最後來打包 plugin 吧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最後來打包 Plugin 吧！</h2>\n<p>其實要打包一個 lib 有很多方法，但是 D3 的作者在 D3 v4 尚未推出前就有寫了一篇文章介紹要<a href=\"https://bost.ocks.org/mike/d3-plugin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">怎麼樣製作一個 d3 plugin</a>，為了要能盡量共用所有的 d3 plugin，最好大家都是遵照同樣的準則來處理會比較好。</p>\n<p>不過其實也沒什麼準則 XD...主要比較特別的就是 D3 的 plugin 大多是用 rollup 來打包，我猜想是因為當時 webpack 1.x 還沒有加入 tree-shaking 的功能，而針對 plugin 這種小型模組來說，也用不到 webpack 的許多功能，rollup 反而比較適合用來打包 plugin 模組。</p>\n<p>｀</p>\n<p>檔案結構大概就是這樣：</p>\n<p><img src=\"/image/file_structure.png\" alt=\"檔案結構\"></p>\n<p>在你的 <code class=\"language-text\">index.js</code> 中加入：</p>\n<p><code class=\"language-text\">export {default as sketchy} from \"./src/sketchy\";</code></p>\n<p>當作 module 的入口，也方便 require。</p>\n<p>接著在你的 package.json 中加入 script：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonpackage.json\"><pre class=\"language-jsonpackage.json\"><code class=\"language-jsonpackage.json\">&quot;scripts&quot;: {\n    &quot;pretest&quot;: &quot;rm -rf build &amp;&amp; mkdir build &amp;&amp; rollup -c rollup.config.js&quot;,\n    &quot;test&quot;: &quot;tape &#39;test/**/*-test.js&#39;&quot;,\n    &quot;prepublish&quot;: &quot;npm run test &amp;&amp; uglifyjs build/d3-sketchy.js -c -m -o build/d3-sketchy.min.js&quot;,\n    &quot;postpublish&quot;: &quot;zip -j build/d3-sketchy.zip -- LICENSE README.md build/d3-sketchy.js build/d3-sketchy.min.js&quot;\n}</code></pre></div>\n<p>可以看到這邊在 publish 前都會用 uglify.js 來產生 min.js 檔案，如此一來你的 user 就可以選擇要不要下載 minify 過的套件。</p>\n<p>最後就是撰寫你的 <code class=\"language-text\">rollup.config.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsrollup.config.js\"><pre class=\"language-jsrollup.config.js\"><code class=\"language-jsrollup.config.js\">import resolve from &#39;rollup-plugin-node-resolve&#39;;\nimport babel from &#39;rollup-plugin-babel&#39;;\n\nexport default {\n    entry: &#39;index.js&#39;,\n    dest: &#39;build/d3-sketchy.js&#39;,\n    format: &#39;umd&#39;, // umd 的格式能透過 CommonJS 或是 AMD 載入\n    moduleName: &#39;d3&#39;, // 設定為 d3 可以將你的 plugin 放入 global.d3 底下\n    sourceMap: true,\n    plugins: [\n        resolve(),\n        babel({\n            exclude: &#39;node_modules/**&#39;\n        })\n    ]\n};</code></pre></div>\n<p>這邊要注意兩件事情。</p>\n<ol>\n<li>rollup 不會幫你打包你從 node<em>modules 裡面 import 進來的檔案，所以如果你有用到其他的 d3 plugin，變成在你的 plugin 說明內要告知使用者，記得載入相依的 plugin。或是你也可以向我這邊一樣，透過 <code class=\"language-text\">rollup-plugin-node-resolve</code> 這個 rollup plugin 來幫我們把 `node</em>modules` 底下的 lib 也打包</li>\n<li>rollup 不會幫你編譯 babel，如果你真的想用 babel，就像我一樣加入 <code class=\"language-text\">rollup-plugin-babel</code> 即可。</li>\n<li>format 記得設為 umd，這樣才能夠在 CommonJS 或 AMD 環境下都能使用。</li>\n<li>最雷的一點在這邊！目前用 rollup 打包 d3 plugin 的話，你需要將 roullup 的版本鎖在 0.41，否則你會發現你編譯出來的 <code class=\"language-text\">build/d3-xxx.js</code> 內的最前面幾行長得像這樣：</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">global<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">typeof</span> define <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'exports'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> factory<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>d3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">exports</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>有看出什麼問題嗎？</p>\n<p><code class=\"language-text\">factory((global.d3 = {}))</code></p>\n<p>他會將 global.d3 塞入一個空物件，而非先使用原先的 global.d3：<code class=\"language-text\">factory((global.d3 = global.d3 || {}))</code></p>\n<p>如此一來，你如果在載入 plugin 之前先載入其他 d3 plugin，就會發生問題了...</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://d3js.org/d3.v4.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../build/d3-sketchy.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 裡面的 d3 object 會蓋掉上面 d3.v4.js 產生的---></span></code></pre></div>\n<p>可能有其他解法，但看了 d3 的一些 plugin 也是先將版本卡在 0.41。</p>\n<p>當你做完上述工作後，在你的 repo 底下執行 <code class=\"language-text\">npm install</code>，就會產生 <code class=\"language-text\">build</code> folder，裡面含有：</p>\n<ol>\n<li>d3-sketchy.js</li>\n<li>d3-sketchy.min.js</li>\n<li>d3-sketchy.js.map (如果你 rollup.config.js 有設定 sourceMap: true 就會有此檔案)</li>\n</ol>\n<p>如此一來別人就能使用你的 plugin 了：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../build/d3-sketchy.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> sketchyBar <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>sketchy<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token comment\">//..</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>有些時候看似很複雜的東西，其實原理卻非常簡單，只是需要發揮點創意。剛好透過這篇也學習了一下 rollup 的相關設定，雖然我私人猜測 rollup 應該還是會慢慢被 webpack 壓過去，即便 rollup 作者寫了<a href=\"https://medium.com/webpack/webpack-and-rollup-the-same-but-different-a41ad427058c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇文章</a>。\n這篇算是一個小小的筆記，不是太完整，若有任何疑問或建議歡迎留言討論！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/emeeks/d3-sketchy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-sketchy</a></li>\n<li><a href=\"https://bost.ocks.org/mike/d3-plugin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-plugin</a></li>\n<li><a href=\"https://github.com/rollup/rollup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rollup</a></li>\n</ol>","fields":{"slug":"d-3-v-4-sketchy-plugin"},"frontmatter":{"title":"D3v4 工作坊 - 製作 D3 plugin 來繪製草圖風格長條圖","date":"10-21-2017","tags":["d3","plugin","rollup","data visualization"]},"timeToRead":9}},"pageContext":{"slug":"d-3-v-4-sketchy-plugin","prev":{"excerpt":"好歌分享：教練 傑利 - 下雨的午後","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/JDqrw7b5knk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">教練 傑利 - 下雨的午後</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/JDqrw7b5knk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>Q2 的時候稍微玩了一下 WebVR，主要是瞭解了 Mozilla 主導推出的 A-Frame，驚訝於其簡單方便的 API 設計外，也一直在想還能做什麼有趣的應用，直到最近在構思 D3 的一些範例時，\n才突然又再想起 WebVR：既然 A-Frame 提供了一系列的 VR DOM object，而 D3.js 又能操作 DOM，那理論上一起使用是沒有問題的。</p>\n<p>果不其然，稍稍在網路搜尋一下就看到 WSJ 的這篇 <a href=\"http://graphics.wsj.com/3d-nasdaq/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Is the Nasdaq in Another Bubble?</a></p>\n<p>超酷的呀，視覺化股票歷史資料，做成雲霄飛車般的閱讀體驗，雖然我個人覺得資料視覺化應該要以宏觀角度來讓他人清楚了解整個脈絡，VR 的「個人」視角，限制了這部分的特性，但若以 Story telling 的角度來看，VR 加上數據視覺化反倒為使用者帶來更豐富生動的閱讀經驗，不僅僅是瞭解內容，過程有趣才能在碎片資訊爆炸的時代抓住人們的眼球！</p>\n<p>在這個想法下就決定來嘗試看看用 A-Frame 與 D3 來製作資料視覺化，雖然還沒辦法做出太絢麗的互動體驗，但出發總要有個開始，就先試試最簡單的 Bar Chart 吧！</p>\n<p>最後會長這樣：</p>\n<p><img src=\"/image/webvr-datavis.png\" alt=\"Demo\"></p>\n<h2 id=\"前置作業\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD\" aria-label=\"前置作業 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前置作業</h2>\n<p>有摸過 A-Frame 的讀者應該很清楚要建立出一個 VR 場景有多簡單：\n沒摸過的也歡迎回去看這篇 <a href=\"https://blog.arvinh.info/2017/04/01/web-vr-101/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebVR 101</a></p>\n<p data-height=\"414\" data-theme-id=\"29194\" data-slug-hash=\"RLGmvp\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"WebVR-D3-I\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/RLGmvp/\">WebVR-D3-I</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"加入-d3\" style=\"position:relative;\"><a href=\"#%E5%8A%A0%E5%85%A5-d3\" aria-label=\"加入 d3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加入 D3</h2>\n<p>回想一下，一般在使用 D3 的時候，就是選取出你要操作的 svg 元件，接著將進入 <code class=\"language-text\">enter()</code> 狀態的資料 append 上去，然後調整 Style 與 attributes。</p>\n<p>那在 A-Frame 當中我們也可以如法泡製：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 就像是以前選取 svg 一樣，只是在 VR 中我們要選取 a-scene</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-scene'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 處理資料與 DOM 元素的方式與平時操作 d3 相同，一樣的 enter/update/exit 狀態</span>\n<span class=\"token keyword\">const</span> bars <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-box.bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 真正 append 資料並設定屬性</span>\nbars<span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">classed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span>  i <span class=\"token operator\">*</span> <span class=\"token number\">0.8</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token function\">hscale</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> z <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> y <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> z   \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'depth'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// hscale 就只是個 d3 的 scaleLinear 映射函數</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">hscale</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'opacity'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>首先我們 select 出 <code class=\"language-text\">a-scene</code>，接著在其下面預先將資料 binding 到擁有 <code class=\"language-text\">bar</code> 這個 classname 的 <code class=\"language-text\">a-box</code> entity 內（此時還是虛擬的 DOM 物件），最後再呼叫 <code class=\"language-text\">enter()</code> 來真正的將資料 append 到 DOM 上面。</p>\n<p>這邊有兩個小地方需要注意：</p>\n<ol>\n<li>除了寬（width）與高（height）外，還有深度（depth）需要設定，畢竟現在是在 3D 的世界中。</li>\n<li>數值的設定：在 WebVR API 中，回傳的距離資料以 Meter 為單位，因此在 A-frame 中的距離單位也是 Meter，並非一般頁面的 pixel，因此我們的 x, y, z 值記得不能設定太大。</li>\n</ol>\n<p>結果如下：</p>\n<p data-height=\"301\" data-theme-id=\"29194\" data-slug-hash=\"aLmgNd\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"WebVR-D3-II\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/aLmgNd/\">WebVR-D3-II</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>簡單幾行 code 就能夠在 VR 的世界內呈現資料圖表囉！</p>\n<h2 id=\"互動元素\" style=\"position:relative;\"><a href=\"#%E4%BA%92%E5%8B%95%E5%85%83%E7%B4%A0\" aria-label=\"互動元素 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>互動元素</h2>\n<p>平面的 D3 能夠互動，VR 版當然也要。</p>\n<p>在 VR 裡面的 Cursor 基本上是跟著你的攝影機（camera），你可以直接用 A-Frame 提供的 entity，就可以有基本的 gaze-based cursor（凝視型），顧名思義，也就是以你的視線為中心的 cursor，並且可以觸發 mouseenter, mouseleave 等事件:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>camera<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>cursor<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>cursor<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>camera<span class=\"token operator\">></span></code></pre></div>\n<p>或是自己 create 一個 cursor entity：<a href=\"https://aframe.io/docs/0.7.0/components/cursor.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">source</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>entity position<span class=\"token operator\">=</span><span class=\"token string\">\"0 1 0\"</span> rotation<span class=\"token operator\">=</span><span class=\"token string\">\"0 0 0\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>entity camera look<span class=\"token operator\">-</span>controls wasd<span class=\"token operator\">-</span>controls<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a<span class=\"token operator\">-</span>entity cursor<span class=\"token operator\">=</span><span class=\"token string\">\"fuse: true; fuseTimeout: 500\"</span>\n                position<span class=\"token operator\">=</span><span class=\"token string\">\"0 0 -2\"</span>\n                geometry<span class=\"token operator\">=</span><span class=\"token string\">\"primitive: ring; radiusInner: 0.02; radiusOuter: 0.027\"</span>\n                material<span class=\"token operator\">=</span><span class=\"token string\">\"color: black; shader: flat\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>entity<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>entity<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">-</span>entity<span class=\"token operator\">></span></code></pre></div>\n<p>要注意的是，由於我們需要設定 cursor 與 camera 的位置，所以將這兩個 entity 都包在另一個 entity 下，並由最上層的 entity 來設定初始 position 會較為方便。</p>\n<p>而在 cursor 這個 entity 上我們設定了幾個屬性：</p>\n<ul>\n<li>cursor：設定為 fuse: true，即代表 gaze-based cursor，會跟著你視線移動，並且當你「盯著」某個點一段時間（fuseTimeout）後，會觸發 <code class=\"language-text\">Click</code> event。</li>\n<li>material：可以設定其顏色材質。</li>\n<li>geometry：設定其物理形狀。</li>\n</ul>\n<p>當然如果你是用 Vive, daydream 的 controller，也已有其相對應的 entity 可以使用，可以參考這份文件 (laser-controls)[https://aframe.io/docs/0.7.0/components/laser-controls.html]</p>\n<p>設定好 cursor 後，接著就是在我們的 bar 上面設置 event listener 了。</p>\n<p>在剛剛的 attr 後面再接著利用 <code class=\"language-text\">on</code> 來設定 listener：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">bars<span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">classed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span>  i <span class=\"token operator\">*</span> <span class=\"token number\">0.8</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token function\">hscale</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> z <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> y <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> z<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'depth'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">hscale</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'opacity'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseenter\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d<span class=\"token punctuation\">,</span>i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'opacity'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a-text\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'align'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">0 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token function\">hscale</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 0</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scale'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1 1 1'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dataText<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>d<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseleave\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">d<span class=\"token punctuation\">,</span>i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'opacity'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        d3<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a-text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>上面做的事情很簡單，在 <code class=\"language-text\">mouseenter</code> 時，我們 append 上一個 <code class=\"language-text\">&lt;a-text></code>，並設定顏色位置等等，然後套用一個 <code class=\"language-text\">transition</code> 動畫來改變 bar 的顏色，<code class=\"language-text\">mouseleave</code> 時把 style 還原。</p>\n<p>如此一來你就有了一個可以互動的 VR bar chart 了！</p>\n<p data-height=\"341\" data-theme-id=\"29194\" data-slug-hash=\"eGdwxz\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"WebVR-D3-II\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/eGdwxz/\">WebVR-D3-II</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"component-化\" style=\"position:relative;\"><a href=\"#component-%E5%8C%96\" aria-label=\"component 化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component 化</h2>\n<p>我做到這邊的時候突然有個想法，既然 A-frame 可以讓我們自己客製化 Entity 內要放的 component，那我們能不能將剛剛的 code 全部塞進 component 內呢？</p>\n<p>還記得在 <a href=\"https://blog.arvinh.info/2017/04/01/web-vr-101/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebVR 101</a> 中有記錄到我們可以透過 AFRAME 這個全域變數來註冊 component，並放入 <code class=\"language-text\">&lt;a-entity></code> 中：\n<a href=\"https://aframe.io/docs/0.7.0/core/component.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">reference</a></p>\n<div class=\"gatsby-highlight\" data-language=\"jsbarchart.js\"><pre class=\"language-jsbarchart.js\"><code class=\"language-jsbarchart.js\">AFRAME.registerComponent(&#39;barchart&#39;, {\n    schema: {\n        json: {\n            default: {\n                    key: [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;],\n                    value: [19, 80, 30, 15, 55]\n                }\n            }\n    },\n    init: function () {\n        this.generate();\n    },\n\n    generate: function () {\n        const json = this.data.json;\n        const el = this.el;\n        // default alpha for bars\n        const alpha = 0.6;\n        const data = json.value;\n        const dataText = json.key;\n        // Select the current enity object just like an svg\n        const currentEntity = d3.select(el);\n\n        // we use d3&#39;s enter/update/exit pattern to draw and bind our dom elements\n        const bars = currentEntity.selectAll(&#39;a-box.bar&#39;).data(data);\n        /*\n        ... \n        這邊放入上面所撰寫的 D3 相關的程式碼\n        */\n    }\n    });</code></pre></div>\n<ul>\n<li>schema: 這邊是用來設定此 entity 的 properties，像是能透過設置 json 屬性來傳入資料 <code class=\"language-text\">&lt;a-entity barchart=\"json: data.json\">&lt;/a-entity></code>。同時你也可以在這邊設定 default 的屬性值。</li>\n<li>init: Component 在初始階段會呼叫此函數一次，用來初始變數或是 component 的狀態，以我們這邊的例子就是用來呼叫 d3 繪製圖表。\n（Component 還有許多 lifecycle：update, remove, tick, play, pause, updateSchema，可以參考<a href=\"https://aframe.io/docs/0.7.0/core/component.html#overview-of-methods\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方文件</a>）</li>\n<li>generate: 這邊就是我們用來處理 D3 圖表的函式。</li>\n</ul>\n<p>在這邊比較需要了解的是 schema property 與 Component 本身的 HTML Element 的存取方式：\n我們在 schema 中定義的屬性都會存在於 <code class=\"language-text\">this.data</code> 中，因此我們可以透過 <code class=\"language-text\">this.data.json</code> 來取得 json 屬性的資料；而 <code class=\"language-text\">this.el</code> 則是回傳 Component 本身的 HTML Element，我們要用來給 D3 進行 DOM object 操作的。</p>\n<p>當你註冊好 component 後，在我們的 HTML 中就只需要放置 <code class=\"language-text\">&lt;a-entity barchart>&lt;/a-entity></code> 就可以產生圖表了！</p>\n<p><span style=\"color:red;\">（唯一要注意的是，你的 component 一定要在 <code class=\"language-text\">&lt;a-sene></code> render 之前就處理好，最好是放在 <code class=\"language-text\">&lt;head></code> 的位置。</span></p>\n<p>你之後只要將剛剛創建的 component export 出去，就可以讓任何人透過 <code class=\"language-text\">&lt;a-entity barchart>&lt;/a-entity></code> 的方式來使用。\n而且透過 property 的設定，我們可以傳入不同資料，甚至是顏色設定等等的屬性，來進行客製化的圖表！</p>\n<p>像是可以產生一個 104 年台灣年齡人口數統計長條圖：</p>\n<p>只要在 html 中加入\n<code class=\"language-text\">&lt;a-entity barchart=\"json: https://cdn.rawgit.com/ArvinH/f47671a9ff33b6719b043945d36054ac/raw/09a6ea23ee40d4a83205eef6d4fd4e5efa072c2b/104life.json\">&lt;/a-entity></code></p>\n<p>稍微修改一下 component 內的 <code class=\"language-text\">init</code> 函數，因為從 entity 傳來的 property 預設會是 string 的 type：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>json <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parsedJson</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            self<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>parsedJson <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// fallback to default</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parsing failed'</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>順便加入一些 color 的處理，成果如下：</p>\n<p data-height=\"346\" data-theme-id=\"29194\" data-slug-hash=\"oGYvbK\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"WebVR-D3-IV\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/oGYvbK/\">WebVR-D3-IV</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>雖然只是簡單的實作一個 Barchart，但透過這次的小嘗試，大概了解該怎麼樣用 D3 與 A-Frame 寫出一個 WebVR Data visulization Component 後，就可以有許多東西可以玩了！或許可以結合現有的 3D modal，並將開放資料用不同的模型呈現，製作出一個 3D VR 版的城市圖表，應該會很有趣！加上他包裹成 Component 的方式非常方便，在社群的努力下，實作上勢必會更加輕鬆（github 上已經有許多人釋出的 component 可以使用）。</p>\n<p>預計下一篇會再來做個有趣並複雜一點的 VR 資訊圖表！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://aframe.io/docs/0.7.0/introduction/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A-Frame doc</a></li>\n<li><a href=\"https://github.com/ngokevin/kframe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">kframe</a></li>\n<li><a href=\"https://bl.ocks.org/enjalot/8be32e6f1f32920ba841\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aframe + d3 test</a></li>\n<li><a href=\"https://blog.arvinh.info/2017/04/01/web-vr-101/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebVR 101</a></li>\n<li><a href=\"http://graphics.wsj.com/3d-nasdaq/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Is the Nasdaq in Another Bubble?</a></li>\n</ol>","id":"05328de9-f471-50f1-8dfe-0ed4a6086f26","fields":{"slug":"webvr-d-3"},"frontmatter":{"date":"2017-09-23T10:53:07.000Z","title":"D3v4 工作坊 - WebVR 與資料視覺化","tags":["web vr","d3","d3v4","data visualization"],"type":"tech","slug":"webvr-d3"},"timeToRead":9},"next":{"excerpt":"『wubba lubba dub dubs』","html":"<blockquote>\n<p>『wubba lubba dub dubs』</p>\n</blockquote>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>我想每個人小時候應該都蠻喜歡畫畫的吧？在沒有遊戲機、沒有 iPhone 的年代，拿著畫筆跟一張紙就可以開心度過幾個小時，但不知道從什麼時候開始就忘掉了這份快樂。</p>\n<p>今天想邀請大家把『快樂』找回來！</p>\n<p>身為工程師，我們拿起畫筆可能畫不出一個漂亮的圓，但透過熟悉的 CSS 我們可以做到。</p>\n<p>『等等，平常上班調 CSS 就已經夠耗神了，你還要拿來畫圖？這除了炫技以外，對專業能力有什麼實質幫助嗎？你看連<a href=\"https://www.zhihu.com/question/27474099\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">知乎上也有人這樣想</a>。』</p>\n<p>那你滑 ig 對專業能力有什麼實質幫助嗎？</p>\n<p>威～話不是這樣講，休閒活動是很重要的，以工作上來說，需要圖片時，當然還是出 SVG 圖檔比較有效率，效果也較好，但是透過 CSS 畫圖有幾個我個人認為蠻重要的好處：</p>\n<ol>\n<li><strong>讓你對 CSS 的 Layout 佈局、style 屬性的操作更加熟悉</strong></li>\n<li>\n<p><strong>透過這種娛樂性質的練習，培養對 CSS 掌控性的自信，<a href=\"https://blog.lalacube.com/mei/Reveal_love_remember.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">找回對工作與技術的愛</a></strong></p>\n<ul>\n<li>工作總是會遇到需要支援舊版瀏覽器的狀況吧？很多新玩意兒你無法在工作中使用，那就透過這種機會好好把玩一下吧～</li>\n</ul>\n</li>\n<li>\n<p><strong>訓練拆解頁面模組的能力</strong></p>\n<ul>\n<li>在 codepen 上臨摹他人著作時，可以想想如果是你，會怎麼組織你的元素，然後再跟作者比對看看誰的作法更棒！</li>\n</ul>\n</li>\n<li>\n<p><strong>鍛鍊在有限資源下發展出無限創造力，就像李麥克一般。</strong></p>\n<ul>\n<li>這點是我覺得最有趣的，在 CSS 有限的能力下，你要想辦法找出方法來實作想要的效果，不知不覺中會鍛鍊你的思考與解決問題的能力！</li>\n<li>很多時候你會發現，看似複雜的東西，透過 CSS 的一些簡單屬性，其實非常容易。</li>\n</ul>\n</li>\n<li><strong>你可以透過 CSS 動畫輕易的繪製出動態圖片，這就不是你單純畫筆能做到的了！</strong></li>\n</ol>\n<p><strong>今天就來介紹幾個簡單的小技巧，讓你能用 CSS 畫出如下的圖片！（什麼？你不知道 Rick and Morty？先去看再回來。）</strong></p>\n<p><img src=\"/image/rick_pure_css.png\" alt=\"Rick\"></p>\n<p>看得出來是用 CSS 畫的嗎？</p>\n<p><a href=\"https://codepen.io/arvin0731/full/zPPaOK/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rick - pure css</a>\n原始碼在此，由於沒有處理 RWD，所以就不直接放過來啦～</p>\n<p>接下來我會先從繪圖的工具開始介紹起，接著提供一些顏色搭配與繪圖靈感的資源，最後進入一連串 CSS 繪圖的技巧介紹。</p>\n<h2 id=\"繪圖小工具\" style=\"position:relative;\"><a href=\"#%E7%B9%AA%E5%9C%96%E5%B0%8F%E5%B7%A5%E5%85%B7\" aria-label=\"繪圖小工具 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>繪圖小工具</h2>\n<h3 id=\"pre-processor\" style=\"position:relative;\"><a href=\"#pre-processor\" aria-label=\"pre processor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-processor</h3>\n<p>CSS 畫圖的兩個主要工具就是 HTML 與 CSS，你當然可以直接用一般的 HTML 與 CSS 來製作你的 Pure CSS image，但我比較推薦使用 <code class=\"language-text\">Pug</code> 與 <code class=\"language-text\">SCSS</code> 兩個 pre-processor 來幫助你。</p>\n<p><code class=\"language-text\">Pug</code> 其實就是以前 Nodejs 的 Template engine <code class=\"language-text\">Jade</code> 改名後的版本，他能讓你利用下面的方式來架構你的 HTML：</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token tag\">div<span class=\"token attr-class\">.sky</span></span>\n<span class=\"token tag\">div<span class=\"token attr-class\">.rick</span></span>\n    <span class=\"token tag\">div<span class=\"token attr-class\">.body</span></span>\n    <span class=\"token tag\">div<span class=\"token attr-class\">.head</span></span></code></pre></div>\n<p>等同於：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sky<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>head<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>看起來簡潔又省了許多重複的打字作業。</p>\n<p><code class=\"language-text\">SCSS</code> 相信就更不陌生了，透過 <code class=\"language-text\">SCSS</code>，你可以用更直覺的方式來撰寫 CSS 階層，並利用變數來讓你的 css 更有彈性：</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token variable\">$rick-body-color</span> = #DDD8D0<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">.rick </span><span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">.body </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$rick-body-color</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:before </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rick's body\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>等同於：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.rick .body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #DDD8D0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.rick .body::before</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rick's body\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"繪圖平台\" style=\"position:relative;\"><a href=\"#%E7%B9%AA%E5%9C%96%E5%B9%B3%E5%8F%B0\" aria-label=\"繪圖平台 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>繪圖平台</h3>\n<p>上述兩套 pre-process 在 codepen、jsbin 等平台上都可以很方便的使用，我推薦大家到 Codepen 上面去練習並發布自己的作品，同時也看看上面的神人們（真的是超多神人...）是怎麼玩弄 CSS 的。</p>\n<p>Codepen 上有許多 css 的活動，像是 <code class=\"language-text\">#Codevember</code>、<code class=\"language-text\">#DailyCSS</code> 等等，鼓勵大家每天到 Codepen 上展現自己的創意與能力，我其實也蠻想參加的，但是 Daily 真的太困難哈哈，如果也有人跟我一樣的感受，不如我們自己來弄個 <code class=\"language-text\">#WeeklyCSS</code> 吧！</p>\n<h3 id=\"顏色選擇工具\" style=\"position:relative;\"><a href=\"#%E9%A1%8F%E8%89%B2%E9%81%B8%E6%93%87%E5%B7%A5%E5%85%B7\" aria-label=\"顏色選擇工具 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>顏色選擇工具</h3>\n<p>畢竟我們不是設計師，在顏色的敏銳度上可能欠缺鍛鍊，但沒關係啊，我們是為了休閒、為了把愛找回來。</p>\n<p>可以透過 <a href=\"https://coolors.co/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">coolors</a> 這個網站幫你產生一些對應的顏色組合，或是利用 <a href=\"http://www.colorzilla.com/chrome/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Colorzilla</a> 來從別人頁面取得你看上眼的顏色。</p>\n<h2 id=\"靈感來源\" style=\"position:relative;\"><a href=\"#%E9%9D%88%E6%84%9F%E4%BE%86%E6%BA%90\" aria-label=\"靈感來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>靈感來源</h2>\n<p>唯一推薦 <a href=\"https://dribbble.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dribbble</a>，許多人都會從上面找尋靈感，然後轉成 pure css 的版本，甚至是加上動畫效果，讓圖片活起來。</p>\n<p>也可以去 <a href=\"https://www.behance.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">behance</a> 以及剛剛提到的 <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">codepen</a>，當然還有其他許多平台，但是我覺得光 Dribbble 上的圖就夠你玩了XD</p>\n<h2 id=\"css-繪圖技巧\" style=\"position:relative;\"><a href=\"#css-%E7%B9%AA%E5%9C%96%E6%8A%80%E5%B7%A7\" aria-label=\"css 繪圖技巧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 繪圖技巧</h2>\n<p>好的，終於要進入 CSS 繪圖的實戰技巧。\n只要掌握住這邊介紹的小撇步，你就能繪製出如範例一般的 Pure CSS image！</p>\n<h3 id=\"善用各種形狀疊加組合\" style=\"position:relative;\"><a href=\"#%E5%96%84%E7%94%A8%E5%90%84%E7%A8%AE%E5%BD%A2%E7%8B%80%E7%96%8A%E5%8A%A0%E7%B5%84%E5%90%88\" aria-label=\"善用各種形狀疊加組合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>善用各種形狀疊加組合</h3>\n<p>大家都知道 HTML 與 CSS 的基本形狀就是一個四四方方的 box，但是我們可以透過幾種方式「製造」出各種形狀：</p>\n<ul>\n<li>\n<p>最常見的三角形：\n如果你們曾經有需要製作 三角形的 div 的話，或許有看過 <a href=\"http://www.cssarrowplease.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css arrow please</a> 這個網站，\n若仔細研究一下，你會發現它的原理很簡單，就是利用寬高皆為 0 的 div 上的 border 寬度來做變化，舉例來說：\n我們若設置一個 div 的寬高，以及四邊的邊寬，會呈現如下情況：</p>\n<div style=\"height:20px;\nwidth:20px;\nborder-color:red blue yellow green;\nborder-style:solid;\nborder-width:20px;\"></div>\n```css\n    .rect {\n        height:20px;\n        width:20px;\n        border-color:red blue yellow green;\n        border-style:solid;\n        border-width:20px;\n    }\n```\n接著我們把 寬、高 都設為零，不就看到三角形了嗎：\n<div style=\"height: 0px;\nwidth: 0px;\nborder-color: red blue yellow green;\nborder-style: solid;\nborder-width: 20px;\"></div>\n```css\n    .rect {\n        height: 0px;\n        width: 0px;\n        border-color:red blue yellow green;\n        border-style: solid;\n        border-width: 20px;\n    }\n```\n所以只要留下一種顏色，就是我們要的結果了：\n<div style=\"height: 0px;\nwidth: 0px;\nborder-color: red transparent transparent transparent;\nborder-style: solid;\nborder-width: 20px;\"></div>\n```css\n    .rect {\n        height: 0px;\n        width: 0px;\n        border-color:red transparent transparent transparent;\n        border-style: solid;\n        border-width: 20px;\n    }\n```\n[詳細介紹可以看這邊，還有教你如何支援到 IE6！](http://caibaojian.com/css-border-triangle.html)\n</li>\n<li>\n<p>神奇的 border 之不是只有一種角度：\n除了用來製作三角形以外，很多人常常忽略 border 其實可以根據各種方位來調整，像是 <code class=\"language-text\">border-top-left-radius</code> 或是 <code class=\"language-text\">border-left-width</code>，舉例來說，Rick 身上襯衫的衣領，我們可以這樣做：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.shirt</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-bottom-right-radius</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 3px solid #666<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div style=\"border-bottom-right-radius: 100%;\nborder-right: 3px solid #666;\nmargin: 10px;\nbackground-color: white;\nwidth: 10px;\nheight: 40px;\"></div>\n<p>透過 <code class=\"language-text\">border-bottom-right-radius</code> 就可以有一個小括弧的效果。</p>\n</li>\n<li>\n<p>堆疊組合：\n以前面 <code class=\"language-text\">Rick</code> 的範例來看，他的頭髮部分就可以有很多種實作方式，你可能會想使用剛剛介紹的三角形，加上 <code class=\"language-text\">transform: rotate()</code>，組合出其雜亂有型的頭髮，但我太懶了，直接用 div 來堆疊組合：</p>\n<p><img src=\"/image/rick-hairs.gif\" alt=\"Rick hairs\"></p>\n<p>堆疊組合有時候需要搭配 <code class=\"language-text\">overflow:hidden</code>，像是 Rick 的嘴巴，就是透過外層設定 overflow，並搭配適當角度的 border-radius，才能製作出這種弧度的效果：</p>\n<img src=\"/image/rick-mouth.png\" style=\"width: 400px;height:400px;\" />\n</li>\n<li>css clip-path:\n若是真的想要有多邊形，可以使用 clip-path。\nclip-path 是原本就存在於 SVG 中的一個屬性，讓我們能利用遮罩的方式來裁切出多邊形，在用 css 畫圖的時候，基本上就不要管瀏覽器支援度了吧，大膽用下去就對了！這邊提供幾個資源讓有興趣的人再去研究一下：\n<a href=\"https://bennettfeely.com/clippy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path generator</a>\n<a href=\"http://www.oxxostudio.tw/articles/201503/css-clip-path.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path 詳細介紹</a>\n<a href=\"https://caniuse.com/#search=clip-path\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Can I use clip-path</a></li>\n</ul>\n<h3 id=\"偽元素-before--after-是最佳幫手\" style=\"position:relative;\"><a href=\"#%E5%81%BD%E5%85%83%E7%B4%A0-before--after-%E6%98%AF%E6%9C%80%E4%BD%B3%E5%B9%AB%E6%89%8B\" aria-label=\"偽元素 before  after 是最佳幫手 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>偽元素 Before &#x26; after 是最佳幫手</h3>\n<p>偽元素在 CSS 繪圖當中佔據的角色真是太重要了，透過 <code class=\"language-text\">before</code> 與 <code class=\"language-text\">after</code> 的操作，你可以更有組織的來管理元素，以 Rick 的眼睛來說，我們可以先畫出一個圓形，在透過 <code class=\"language-text\">before</code> 和 <code class=\"language-text\">after</code> 兩個偽元素來產生 “眼皮” 與 “黑眼球”：</p>\n<p><img src=\"/image/rick-eyes.gif\" alt=\"Rick eyes\"></p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.right-eye, .left-eye </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 2px solid <span class=\"token variable\">$rick--border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:before </span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 眼皮</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:after </span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 眼球</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>透過 <strong>偽元素</strong>，我們可以把相關的元素綁定在一起，也少了一些 div 的宣告，對於 Layout 上的調整來說也更加方便，因此一定要善加利用這個特性！</p>\n<h3 id=\"box-shadow-與-background-image-給予的另種可能性\" style=\"position:relative;\"><a href=\"#box-shadow-%E8%88%87-background-image-%E7%B5%A6%E4%BA%88%E7%9A%84%E5%8F%A6%E7%A8%AE%E5%8F%AF%E8%83%BD%E6%80%A7\" aria-label=\"box shadow 與 background image 給予的另種可能性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>box-shadow 與 background-image 給予的另種可能性</h3>\n<p>有了上述的知識，基本上你要湊出一個 Rick 或是 Morty 都是沒問題的，不過還有個小技巧想介紹給大家，就是 <code class=\"language-text\">box-shadow</code> 與 <code class=\"language-text\">background-image</code>。</p>\n<p>首先是 <code class=\"language-text\">box-shadow</code>，是我覺得最酷的一個東西，利用 <code class=\"language-text\">box-shadow</code>，我們可以只用一個 div 就做出各種圖案，像是 <a href=\"https://codepen.io/sashatran/full/BpWLbN\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Calendar Icon</a>： <img src=\"/image/calendar-icon.png\" style=\"width:60px; height:60px;\"/>\n或是棋盤：\n<a class=\"jsbin-embed\" href=\"http://jsbin.com/fibina/embed?html,css,output\">JS Bin on jsbin.com</a><script src=\"http://static.jsbin.com/js/embed.min.js?4.1.0\"></script></p>\n<p>運用 <code class=\"language-text\">box-shadow</code> 與 <code class=\"language-text\">background-image</code> 的原理都是利用到可以設定多個值的特性，以上面的棋盤為例子，4 x 4 的棋盤有 16 個方塊，扣除掉本身 div 佔據的一個，你需要設定 15 個 <code class=\"language-text\">box-shadow</code> 的值： <code class=\"language-text\">10px 0 0 #f00,</code> 代表在 X offset 10px, Y offset 0px 的位置有一個 #f00 的方塊（blur 與 spread 為 0），依此類推去組出棋盤。</p>\n<p>懂得原理以後，慢慢就可以製作出更複雜的效果，像是 Rick 範例中的名字，每一個字母就是一個 div 去透過 <code class=\"language-text\">box-shadow</code> 組成的：</p>\n<p><img src=\"/image/name-box-shadow.png\" alt=\"single div using box-shadow\"></p>\n<p><code class=\"language-text\">background-image</code> 在我這次的範例中沒有使用到，但基本原理差不多，可以看這邊的範例：</p>\n<p data-height=\"300\" data-theme-id=\"29194\" data-slug-hash=\"XKBwoZ\" data-default-tab=\"css,result\" data-user=\"yumeeeei\" data-embed-version=\"2\" data-pen-title=\"Pure CSS  Hotdog   🌭\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/yumeeeei/pen/XKBwoZ/\">Pure CSS  Hotdog   🌭</a> by yumeeeei (<a href=\"https://codepen.io/yumeeeei\">@yumeeeei</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h3 id=\"總結\" style=\"position:relative;\"><a href=\"#%E7%B8%BD%E7%B5%90\" aria-label=\"總結 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>總結</h3>\n<p>用 CSS 畫圖實際上是個蠻辛苦的事情，但就如我先前所說，可以訓練到很多思考能力以及創意發想，更重要的是，當你用一些很特別的技巧來達成你想要的效果時，成就感是非常大的啊～～</p>\n<p>我也還在努力中，有興趣的話就跟我一起來 #WeeklyCSS 吧！</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"https://blog.lalacube.com/mei/Reveal_love_remember.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">愛，可曾記得 - Paul Li</a></li>\n<li><a href=\"https://blog.prototypr.io/how-i-started-drawing-css-images-3fd878675c89\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How I started drawing CSS Images</a></li>\n<li><a href=\"https://dribbble.com/shots/3275208-Pure-CSS-Hotdog\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pure-CSS-Hotdog</a></li>\n<li><a href=\"https://bennettfeely.com/clippy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path generator</a></li>\n<li><a href=\"http://www.oxxostudio.tw/articles/201503/css-clip-path.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Clip path 詳細介紹</a></li>\n<li><a href=\"https://caniuse.com/#search=clip-path\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Can I use clip-path</a></li>\n<li><a href=\"https://coding-artist.teachable.com/p/how-to-make-pure-css-images\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Class: how-to-make-pure-css-images</a></li>\n</ol>","id":"b76ce5a6-2d4d-56c0-be39-24659910c25e","fields":{"slug":"drawing-css-image"},"frontmatter":{"date":"2017-11-17T19:55:02.000Z","title":"用 CSS 畫畫的小技巧","tags":["css","drawing tips"],"type":"tech","slug":"drawing-css-image"},"timeToRead":10},"type":"tech"}},"staticQueryHashes":["2123680655"]}