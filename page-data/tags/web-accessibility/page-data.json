{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/web-accessibility","result":{"pageContext":{"posts":[{"excerpt":"『You're really lucky you know. You didn't have to wait your whole life to do something special』","html":"<blockquote>\n<p>『You're really lucky you know. You didn't have to wait your whole life to do something special』</p>\n</blockquote>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>你是否曾因為網路上被歧視、被霸凌的新聞或影片而憤憤不平？你是否曾因為各種身殘心不殘的勵志故事而感到激勵？\n如果你有過上述經驗，那當你在製作網站時，是否曾經考量過 Web Accessibility（a11y） 呢？</p>\n<p>老實說，我真的很少在實作時認真的驗證自己的網站的可訪性，花在考量是否能支援 IE 9 的時間還比較多一些。（想當年在政府機關服務時，看到局處長很自豪官網拿到無障礙網站評等第一時，還覺得莫名其妙，想說網站這麼醜，到底哪裡無障礙 XD）</p>\n<p>在實作的時候，PM 會拿數據告訴你，有多少用戶是使用舊版的瀏覽器，所以我們需要支援到何種程度，但應該很少 PM 會拿出數據告訴你，有多少 screen reader 來存取我們的網站·。</p>\n<p>然而，光台灣，2018 年的身心障礙人口有一百多萬人，其中視覺障礙的有將近六萬（<a href=\"https://dep.mohw.gov.tw/DOS/lp-2976-113.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">衛生福利處的資料</a>），美國比例更高，有將近 25% 的身心障礙人口（<a href=\"https://youtu.be/dvtfNpt75aA?t=26101\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">資料來源</a>）。</p>\n<p>依照你產品的用戶比例，這些數據大概無法說服你的 PM，讓他們給你更多時間思考如何增強網站的可訪性，但仔細想想，如果你在乎那些身心健全卻不願意升級自己瀏覽器的人，而不在乎這些走出障礙，連接到網路吸取知識的殘障人士，你是不是無意中在他們的人生道路中增加了更多阻礙，不自覺地成為歧視他人的一方呢。</p>\n<p>今天想透過這篇文章，整理一些資源與簡短的實作要點，喚醒大家對 Web Accessibility 重要性的認知，也是提醒自己在未來實作上必定要多加注意。</p>\n<h1 id=\"使用-screen-reader-的感覺是什麼\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-screen-reader-%E7%9A%84%E6%84%9F%E8%A6%BA%E6%98%AF%E4%BB%80%E9%BA%BC\" aria-label=\"使用 screen reader 的感覺是什麼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 screen reader 的感覺是什麼</h1>\n<p>相信會看到這篇文章的人，多少對於 Web Accessiblity 都有了解，知道是為了輔助障礙人士閱讀網頁內容，平常實作時至少在 <code class=\"language-text\">&lt;img></code> 元素上會加上 <code class=\"language-text\">alt</code> 等文字來描述圖片。但你有真的使用過 screen reader 嗎？你知道使用這些輔助工具上網的人，看到的世界跟你有多大的不同嗎？</p>\n<p>我原本也不知道，直到我試用了 Mac 內建的 VoiceOver，用它來閱讀平常看的網站，像是 wikipedia：</p>\n<iframe style=\"max-width: 560px\" width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/IHm6me_VfyM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>體驗實在很糟，除了機器人的聲調外，外加極快的語速，在你從瀏覽器的分頁標籤移動到真正的網頁內容前，還需經過許多瀏覽器本身按鈕選項的介紹，接著到了網頁內容，文章因為連結的關係，變得破碎（為了讓你知道是連結或是按鈕，在文字內容前都會先朗讀出該段內容的功能性，像是：<em>連結</em>、<em>按鈕</em>），閱讀順序也與我們憑眼睛觀看時的不同。</p>\n<p>然而 Wikipedia 已經算是 a11y 處理得不錯的了，畢竟內容大多也只有文字與圖片。想想看現在這麼多炫麗介面的網站，各種需要使用者與之互動的功能，光用想像的就是悲劇，看一下 Google 大肆宣傳的 AMP Story：</p>\n<iframe style=\"max-width: 560px\" width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/cdPVMDJB37k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<p>在強調 Web performance 的同時，web accessibility 也該考量進去。這邊就有<a href=\"https://ethanmarcotte.com/wrote/amphora/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">文章</a>在討論關於 amp-story 在 a11y 的 <a href=\"https://github.com/ampproject/meta-ac/blob/master/meetings/2019-03-f2f.md#accessibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">issue</a>，不過 ampproject 內是有 accessibility working group 在想辦法解局的。</p>\n<p>上面的 Screen reader 範例比較是針對視障朋友的使用為主，現實中能造成生活不便的可不只有視覺上的困難，還有聽覺、肢體等等，像是滑鼠這類需要高度手眼協調能力的操作，就不是那麼有親和力，因此光是透過鍵盤操作網站的順暢度，就必須好好思考，也是實作 Web Accessibility 時的一大重點。</p>\n<p>如果想快速體驗一下使用 screen reader 的效果，又不想學習 Voiceover 等系統內建 reader 的，可以到 udacity 提供的<a href=\"http://udacity.github.io/ud891/lesson3-semantics-built-in/02-chromevox-lite/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">網站</a> 試試，使用的是 Chrome 的 chromevox-lite 閱讀器，且有刻意將內容模糊化，感受會更真實點。</p>\n<h1 id=\"web-accessibility-的資源與實作要點\" style=\"position:relative;\"><a href=\"#web-accessibility-%E7%9A%84%E8%B3%87%E6%BA%90%E8%88%87%E5%AF%A6%E4%BD%9C%E8%A6%81%E9%BB%9E\" aria-label=\"web accessibility 的資源與實作要點 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Accessibility 的資源與實作要點</h1>\n<p>說了許多緣由以及範例，現在來談談該如何學習 Web Accessibility，並實作在我們的網站中。</p>\n<h2 id=\"網絡內容無障礙功能指南---web-content-accessibility-guidelines\" style=\"position:relative;\"><a href=\"#%E7%B6%B2%E7%B5%A1%E5%85%A7%E5%AE%B9%E7%84%A1%E9%9A%9C%E7%A4%99%E5%8A%9F%E8%83%BD%E6%8C%87%E5%8D%97---web-content-accessibility-guidelines\" aria-label=\"網絡內容無障礙功能指南   web content accessibility guidelines permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>網絡內容無障礙功能指南 - Web Content Accessibility Guidelines</h2>\n<p>先從 W3C 指南了解 \"無障礙\" 的定義。<a href=\"https://www.w3.org/TR/WCAG21/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">網絡內容無障礙功能指南 (WCAG) 2.1</a>，是 W3C 擬定的無障礙功能指南和最佳做法，旨在有系統地闡述“無障礙功能”的含義。很多國家政府機關都會要求根據此指南來實作網站。</p>\n<p>WCAG 有四大原則：</p>\n<ul>\n<li>可感知（Perceivable）：所有資訊與使用者介面元件都必須要能以各種使用者能感知的方式，呈現給使用者。像是能讓 Screen Reader 閱讀出內容。不能讓使用者透過各種感官都無法感知到內容。</li>\n<li>可操作（Operable）：使用者元件與網頁內容間的導覽都要可操作，不能出現使用者無法操作的介面。</li>\n<li>可理解（Understandable）：呈現給使用者的資訊與操作方式都要能被使用者理解。</li>\n<li>強健（Robust）：不論是被哪種輔助科技工具或是各種 user agents 所存取，網站內容都要能不受影響，呈現給使用者完整的內容，若使用者使用的工具變得更加進步，網站也得跟上腳步，維持內容的存取、閱讀性。</li>\n</ul>\n<p>這是無障礙內容的一個概覽，還可以透過 <a href=\"https://webaim.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WebAIM</a> 檢查清單，來檢視我們該如何依照 WCAG 的指南實作。</p>\n<h2 id=\"其他資源\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E8%B3%87%E6%BA%90\" aria-label=\"其他資源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他資源</h2>\n<p>除了 W3C 的定義指南外，還有許多更親和的資源可以參考，畢竟 Web accessibility 不是很新的議題了，像是 <a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a> 或是 <a href=\"https://developers.google.com/web/fundamentals/accessibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a> 都有非常詳細的資料與教學，Udacity 上也有相關<a href=\"https://www.udacity.com/course/web-accessibility--ud891\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">課程</a>。</p>\n<p>看完大概都需要花上幾個小時的時間，如果想快速了解的話，其實也已經有不少關於 a11y 的繁中文章，像這篇 - <a href=\"https://medium.com/frochu/%E5%9B%9E%E6%AD%B8%E5%88%9D%E5%BF%83-%E4%B8%80%E6%8E%A2web-accessibility-baaa4d22f4a7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">回歸初心，一探 Web Accessibility</a>，簡短精要，整理了上面 Google 與 Udacity 課程的內容，適合快速了解何謂 a11y，而最近<a href=\"https://ithelp.ithome.com.tw/users/20108045/ironman/2454\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">鐵人賽的這系列文</a>也很不錯，蒐集整理非常多資訊，細節很多，可以當作參考工具，在實作時隨時翻閱，推推。</p>\n<p>此外，上面的資源著重在一般的網站上，而身為資料視覺化的愛好者，我很好奇該如何處理 Data visualization 上的 Web Accessibility 問題。</p>\n<p>從 <a href=\"https://www.a11ywithlindsey.com/about\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lindsey</a> 的這篇文章 - <a href=\"https://www.a11ywithlindsey.com/blog/accessibility-d3-bar-charts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Accessibility in d3 Bar Charts</a> 中可以窺知一二。</p>\n<p>主要是要在圖表中加入足夠的描述文字，然後在設計顏色時，使用一些輔助工具如 <a href=\"http://www.color-blindness.com/coblis-color-blindness-simulator/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">coblis</a> 來建立 color blind friendly 的圖表。</p>\n<p>若是較常使用 SVG 來製作動態圖表的人，推薦研讀一下這篇專門介紹如何為你的 SVG 增強 accessibility 的文章 -  <a href=\"https://css-tricks.com/accessible-svgs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">accessible-svgs</a>，可以為你的資訊圖表在 Web Accessibility 上帶來非常大的改善。</p>\n<h2 id=\"實作要點\" style=\"position:relative;\"><a href=\"#%E5%AF%A6%E4%BD%9C%E8%A6%81%E9%BB%9E\" aria-label=\"實作要點 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>實作要點</h2>\n<p>知道了為何需要了解 Web Accessibility，也知道了有哪些資源可以閱讀，接下來根據上面閱讀的資料，簡單總結幾個實作上要關注的重點：</p>\n<h3 id=\"思考網站能以什麼方式瀏覽\" style=\"position:relative;\"><a href=\"#%E6%80%9D%E8%80%83%E7%B6%B2%E7%AB%99%E8%83%BD%E4%BB%A5%E4%BB%80%E9%BA%BC%E6%96%B9%E5%BC%8F%E7%80%8F%E8%A6%BD\" aria-label=\"思考網站能以什麼方式瀏覽 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思考網站能以什麼方式瀏覽</h3>\n<p>這其實是 <a href=\"https://medium.com/frochu/%E5%9B%9E%E6%AD%B8%E5%88%9D%E5%BF%83-%E4%B8%80%E6%8E%A2web-accessibility-baaa4d22f4a7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">回歸初心，一探 Web Accessibility</a> 這篇文章中所提到的結論，我覺得蠻有道理的。</p>\n<p>與其思考使用者失去什麼感官能力，不如專注在你的網站能提供哪些方式瀏覽。可能是 screen reader、鍵盤（keyboard）、聲控或眼動儀等其他人機介面。從這些操作介面去思考該怎麼加強自己網站的可訪性。</p>\n<h3 id=\"網頁元件的可聚焦性\" style=\"position:relative;\"><a href=\"#%E7%B6%B2%E9%A0%81%E5%85%83%E4%BB%B6%E7%9A%84%E5%8F%AF%E8%81%9A%E7%84%A6%E6%80%A7\" aria-label=\"網頁元件的可聚焦性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>網頁元件的可聚焦性</h3>\n<p>所謂的可聚焦，指的就是元件能夠成為焦點，而所謂焦點，是指當前螢幕上瀏覽器當下能接收來自鍵盤輸入、剪貼板輸出的元件（字段、複選框、按鈕或連結等輸入項目），更簡單來說，就是使用者此刻正在操作的元件。</p>\n<p>為什麼可聚焦性很重要呢？除了讓使用者知道自己目前所使用的元件外，就是讓 screen reader 知道目前該 read 哪個元件。而瀏覽器一次只能聚焦在一個元件上，這個特性讓 screen reader 不會同時讀到兩個不同元件的描述。</p>\n<p>在一般瀏覽器上頭，被聚焦的元件通常預設會以一個藍色外框包裹住：</p>\n<p><img src=\"/image/outline-blue.png\" alt=\"defaul outline\"></p>\n<p>實務上很多人都會用 <code class=\"language-text\">outline: none</code> 把這個外框拿掉，但實際上是非常不友善的行為，若是不喜歡瀏覽器預設的樣式，可以跟設計師溝通，看要如何修改被聚焦的元件樣式，但記得要能讓使用者注意到樣式的變化，才能幫助他們判斷元件的聚焦與否。如 Youtube 上的回復查看按鈕：</p>\n<p><img src=\"/image/outline-custom.png\" alt=\"custom outline\"></p>\n<p>另外要注意的是，並非所有元件都要設成可聚焦，像是文章內文本身，或是其他即便讓 screen reader 朗讀出來也無法很好傳達意思的元件，其實跳過反而比較不會造成混淆與困擾。</p>\n<h3 id=\"dom-的順序\" style=\"position:relative;\"><a href=\"#dom-%E7%9A%84%E9%A0%86%E5%BA%8F\" aria-label=\"dom 的順序 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 的順序</h3>\n<p>Screen reader 在移動時，會依照 DOM 的順序進行，所以應當盡量將你想要呈現給使用者的內容順序，完整的對應到 DOM 的順序上頭。除此之外，還得注意 CSS 的影響，例如 <code class=\"language-text\">float</code>，就可能會造成視覺上的順序與 DOM 順序有所差異，導致 screen reader 朗讀的次序受到影響與畫面不符：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><button style=\"width:100px;background:transparent;color:#5050c5;font-size: 1.5rem;float: right\">1</button><button style=\"width:100px;background:transparent;color:#5050c5;font-size: 1.5rem;\">2</button><button style=\"width:100px;background:transparent;color:#5050c5;font-size: 1.5rem;\">2</button>\n<br/></p>\n<p>另外，善用 <code class=\"language-text\">tabindex</code>，能夠更好的幫助使用者操作鍵盤（tab）瀏覽網站時的移動順序，無論是跳過隱藏在 Responsive 表單選項中的元件，或是在開啟的 Modal 中製造出 Key trap，讓使用者不會移動到 Modal 覆蓋下的元件上。</p>\n<h3 id=\"語義化標籤\" style=\"position:relative;\"><a href=\"#%E8%AA%9E%E7%BE%A9%E5%8C%96%E6%A8%99%E7%B1%A4\" aria-label=\"語義化標籤 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>語義化標籤</h3>\n<p>眾所皆知，Semantic HTML 對於提高 SEO 很有幫助，然而，它也能大大增加網站的可訪性（大概也是因此才會讓 SEO 效果提升），一個好的 Semantic HTML Element 應該包含：</p>\n<ol>\n<li>Role： 元件的類型（按鈕、input 元件、超連結等等）</li>\n<li>Name(Label)：通常與 input 元件並用，像是 radio input、dropdown list 等等</li>\n<li>State：元件當下的狀態（點擊、展開、收合）</li>\n<li>Value：元件內的值（Input 元件內的值、Button 上的文字等等）</li>\n</ol>\n<p>瀏覽器會根據你的 HTML 建造出 DOM Tree，同時也會依照你在 DOM 元件上的資訊建造出 Accessibility Tree（<a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/the-accessibility-tree\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">source</a>）：</p>\n<p><img src=\"/image/treestructure.jpg\" alt=\"accessibility-tree\"></p>\n<p>而 Screen reader 就會根據這棵 Accessibility Tree 進行朗讀，因此你提供的 Semantic HTML 越清楚，資訊越詳細，就能夠建構出越強健的 Accessibility Tree 供輔助工具參考。</p>\n<p>再者，如同文章前頭提到的，網頁上的媒體元件，像是 <code class=\"language-text\">img</code>、<code class=\"language-text\">video</code> 或是視覺圖表，都應該提供對應的 <code class=\"language-text\">alt</code> 描述，讓 Screen reader 至少能根據 <code class=\"language-text\">alt</code> 來說明該媒體元件的內容。不過，若是單純拿來裝飾用的 <code class=\"language-text\">img</code>，可以給予 <code class=\"language-text\">alt</code> 空值，代表其裝飾性。</p>\n<p>想檢測網站是否有足夠完整的 Accessibility Tree 的話，可以用 Chrome 打開你想看的網站，並且開啟開發者工具，在 Element 標籤內，右側可以找到 Accessibility 的 tab，在那邊就能看到當前頁面元件的 Accessibility Tree：</p>\n<p><img src=\"/image/chrome-dev-AT.png\" alt=\"Chrome DevTool Accessibility Tree\"></p>\n<h3 id=\"wai-aria\" style=\"position:relative;\"><a href=\"#wai-aria\" aria-label=\"wai aria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WAI-ARIA</h3>\n<p>WAI-ARIA，代表 Web Accessibility Initiative — Accessibility Rich Internet Applications （網頁可訪性倡議 — 無障礙網頁應用）。</p>\n<p>上面章節我們提到瀏覽器會依照 Semantic HTML Element 來建構 Accessibility Tree，然而有時你需要使用像是 <code class=\"language-text\">div</code>、<code class=\"language-text\">span</code> 等元素來做一些客製化的元件時，該怎麼辦呢？不就無法保持語義了嗎？</p>\n<p>這時 WAI-ARIA 就派得上用場了。使用 ARIA 屬性，我們就可以補足元件缺少的訊息，讓它進入 Accessibility Tree 當中。（<a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/the-accessibility-tree\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">source</a>）</p>\n<p><img src=\"/image/dom-aria-tree.png\" alt=\"DOM+ARIA\"></p>\n<p>舉個例子：</p>\n<p>一個用 <code class=\"language-text\">&lt;li></code> 元件所客製化的 checkbox，我們可以依靠 CSS 讓他 \"表現\" 得像 checkbox，對於視力正常的人來說是沒問題的，但 screen reader 可不認得他，因此我們至少必須加上 ARIA 屬性中的：<code class=\"language-text\">role</code> 與 <code class=\"language-text\">aria-*</code>，讓其加入到 Accessibility Tree 中：</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span> &lt;li tabindex=\"0\" class=\"checkbox\" checked>\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> &lt;li tabindex=\"0\" class=\"checkbox\" role=\"checkbox\" checked aria-checked=\"true\">\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> Receive promotional offers\n</span><span class=\"token deleted-arrow deleted\"><span class=\"token prefix deleted\"><</span>/li></span></code></pre></div>\n<p><code class=\"language-text\">role</code> ，等於宣告該 DOM 元件該扮演什麼角色，像是 <code class=\"language-text\">checkbox</code>、<code class=\"language-text\">button</code> 或 <code class=\"language-text\">dialog</code> 等，還可再分類出 <code class=\"language-text\">Widget roles</code>、<code class=\"language-text\">Composite roles</code> 和 <code class=\"language-text\">Landmark roles</code> 等等。詳細 spec 可以看 <a href=\"https://www.w3.org/TR/wai-aria-1.1/#role_definitions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3C 的定義</a></p>\n<p>而搭配 <code class=\"language-text\">role</code> 使用的 <code class=\"language-text\">aria-*</code> 則為元件定義了<em>屬性</em>與<em>狀態</em>，像是上面例子中的 <code class=\"language-text\">aria-checked=\"true\"</code> 即為元素狀態的一種，告知 Accessibility Tree 這元件目前屬於 <code class=\"language-text\">checked</code> 狀態。</p>\n<p>也能透過 <code class=\"language-text\">aria-lable</code> 設定專門給輔助工具使用的 API：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>button aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"screen reader only label\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<p>或是設定父項/子項聯繫，例如控制特定區域的客製化捲軸：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div role<span class=\"token operator\">=</span><span class=\"token string\">\"scrollbar\"</span> aria<span class=\"token operator\">-</span>controls<span class=\"token operator\">=</span><span class=\"token string\">\"main\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"main\"</span><span class=\"token operator\">></span>\n<span class=\"token comment\">// . . .</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>關於 <code class=\"language-text\">role</code> 與 <code class=\"language-text\">aria-*</code> 狀態和屬性，可以先從 MDN 的<a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這份文件</a>概觀所有列表，然後從 <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3C 的定義</a>中去翻找詳細資訊。</p>\n<h3 id=\"色彩樣式\" style=\"position:relative;\"><a href=\"#%E8%89%B2%E5%BD%A9%E6%A8%A3%E5%BC%8F\" aria-label=\"色彩樣式 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>色彩、樣式</h3>\n<p>文章前面有提到，設計顏色時，應當使用一些輔助工具如 <a href=\"http://www.color-blindness.com/coblis-color-blindness-simulator/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">coblis</a> 來模擬色盲的使用者是如何 \"看\" 你的網站，可以根據這些測試與資訊，與設計師討論，製作出 color blind friendly 的介面。</p>\n<p>除了顏色之外，從文字的大小、表格的間隙，到長條圖中每條 Bar 的距離，都可能影響到視覺障礙的使用者，也都可以在設計無障礙網站時考慮進去。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>不知道大家投身 Web 領域的動機是什麼，我想一定有部分人的理由與我相同，相信 Web 是最平易近人的媒介，能輕易把任何資訊帶給全世界，你不用存錢半天才能買到一台 iPhone 進入 App Store 下載應用程式，只需要到圖書館把電腦打開，透過瀏覽器即可連接世界。如果你也有同樣信念，除了加強 Web performance，讓存取網站的門檻降低外，提升 Web Accessibility 讓網站能真正服務到 \"所有人\"，絕對也是必修的課題之一，弭平資訊落差，落實公平正義，從你我做起！</p>\n<p>P.S. Web Accessibility 的內容很多，這篇文章旨在引起大家對其的重視，詳細的規格與實作細節可以從底下的參考資料中去閱讀。</p>\n<h3 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h3>\n<ol>\n<li><a href=\"https://youtu.be/dvtfNpt75aA?t=26101\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React rally 2019</a></li>\n<li><a href=\"https://ethanmarcotte.com/wrote/amphora/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Amphora</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN - 可訪問性</a></li>\n<li><a href=\"https://developers.google.com/web/fundamentals/accessibility\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google - 無障礙功能</a></li>\n<li><a href=\"https://medium.com/frochu/%E5%9B%9E%E6%AD%B8%E5%88%9D%E5%BF%83-%E4%B8%80%E6%8E%A2web-accessibility-baaa4d22f4a7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">回歸初心，一探 Web Accessibility</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/users/20108045/ironman/2454\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">實踐無障礙網頁設計（Web Accessibility）系列</a></li>\n<li><a href=\"https://www.a11ywithlindsey.com/blog/accessibility-d3-bar-charts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Accessibility in d3 Bar Charts</a></li>\n</ol>","id":"98824468-2f67-5ad2-b305-72e3f8289a36","fields":{"slug":"web-accessibility-intro"},"frontmatter":{"date":"2019-10-13T17:07:29.000Z","title":"Web Accessibility 的重要性","tags":["web","web accessibility","a11y","javascript"],"type":"tech","slug":"web-accessibility-intro"},"timeToRead":14}],"tagName":"web accessibility","type":"tech"}},"staticQueryHashes":["2123680655"]}