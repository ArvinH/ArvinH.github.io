{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/i-os","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：Rescue","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/0WtcPL8Zac4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rescue</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/0WtcPL8Zac4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>出社會後，平常一天 24 小時，可能有 14 小時都會待在電腦前的我，對於手機功能的需求真的不多，也就不像學生時代會很關注 iOS 上有什麼新的功能。而就在上個月的某天，我ㄧ如往常地在 GitHub 上閒晃時，發現一款叫做 <a href=\"https://shortcuts.fun/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">shortcuts-js</code></a> 的套件，原以為是另一套處理網頁快捷鍵的框架，但看了其敘述寫的是『A JavaScript iOS 12 Shortcuts creator』，我才去查了一下 shortcuts 是什麼...</p>\n<p>原來 iOS 12 推出了一個叫 shortcuts 的功能，能讓你透過一連串 <strong>Action</strong> 的組合，自動化你的 workflow。而該套件的作者很 hardcode 的<a href=\"https://medium.com/shortcutsjs/creating-ios-12-shortcuts-with-javascript-and-shortcuts-js-942420ca9904\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">逆向工程解析</a> shortcuts 上的程式，撰寫出一套 JavaScript 的工具，讓你能用熟悉的 JavaScript 來撰寫 iOS shortcuts。</p>\n<p>覺得蠻有意思的，所以也花了幾個小時的時間玩了一下，透過這篇文章記錄一下過程與心得。</p>\n<p>照慣例先給大家看個簡單的成品，我其實做了兩個 shortcuts，一個是利用 Google 的 <a href=\"https://developers.google.com/fact-check/tools/api/reference/rest/v1alpha1/claims/search?apix_params=%7B%22query%22%3A%22Trump%20got%20infected%22%7D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fact check api</a> 製作的事實查核捷徑，讓你在網頁上快速查驗資訊，但 API 回傳的資料效果不是很好，所以做了另一個 <code class=\"language-text\">vConsole shortcuts</code>，讓你能夠在一般網頁（沒有特別在 header 的 CSP 設定 <code class=\"language-text\">script-src</code> 的網頁）內插入 <code class=\"language-text\">vConsole</code> 套件的 shortcuts，讓你能在手機上直接打開 console！</p>\n<p>想實際玩玩的可以從 iphone 上下載此 <a href=\"https://www.icloud.com/shortcuts/efffb762336744a5857d5defe6ff0ba7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">iCloud link</a></p>\n<p>下載前記得要到 \"設定\" -> \"捷徑\" -> \"允許不受信任的捷徑\" 將該選項開啟。</p>\n<p>下載完後到該 shortcut 的詳細資訊頁內將 <strong>在共享工作表中顯示</strong> 選項打開，這樣才能在 safari 的網頁分享 panel 找到 shortcut 來執行。</p>\n<p><img src=\"/image/ios-shortcuts-js-demo.gif\" alt=\"project-demo\" title=\"project-demo\"></p>\n<h2 id=\"ios-shortcuts\" style=\"position:relative;\"><a href=\"#ios-shortcuts\" aria-label=\"ios shortcuts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iOS Shortcuts</h2>\n<p>在 Shortcuts 出現之前，有個叫做 Workflow 的應用程式可以讓你透過客製化的腳本，自訂自動化流程，而在 Apple 將其買下後，隨著 iOS 12 一起推出，並且開放免費下載。</p>\n<p>Shortcuts 的操作有點像是 Scratch，可以將一個一個的 action block 任意組合，也能夠串接別人做好的 shortcuts，對於不會撰寫程式的人來說，操作上算親民，應該也會覺得蠻有趣的，給大家看一下操作過程（gif 可能有點大）：</p>\n<p><img src=\"/image/shortcuts-ops-demo.gif\" alt=\"shortcuts-ops-demo\" title=\"shortcuts-ops-demo\"></p>\n<p>可以加入各種內建指令，拖拉組合你想要的順序。</p>\n<p>action 的 output 可以當作下一個 action 的 input，也可以與 App 互動，例如可以串接 Evernote：</p>\n<p><img src=\"/image/interaact-with-app.jpeg\" alt=\"interact-with-app\" title=\"interact-with-app\"></p>\n<p>除了上面範例這種簡單的指令堆疊，也支援 <code class=\"language-text\">if-else</code> 結構：</p>\n<p><img src=\"/image/if-else.jpeg\" alt=\"if-else\" title=\"if-else\"></p>\n<p>但是呢，我很難相信會有工程師忍受得了在手機上面一個一個 action 拖拉組合，然後輸入內容，實在太麻煩啦。</p>\n<p>還是直接寫程式比較舒服，而對於習慣 JavaScript 的我來說，<a href=\"https://shortcuts.fun/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">shortcuts-js</code></a> 就是一個很棒的選擇！</p>\n<h2 id=\"shortcuts-js\" style=\"position:relative;\"><a href=\"#shortcuts-js\" aria-label=\"shortcuts js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shortcuts JS</h2>\n<p><img src=\"/image/shortcuts-js-official.png\" alt=\"shortcuts-js-official\"></p>\n<p>Shortcuts JS 基本上就是將 Apple 內建的 Action 都製作出對應的 JS 版本，你可以編排與呼叫那些 JS function，shortcuts-js 會幫你轉譯成 iOS 能運行的 <code class=\"language-text\">shortcut</code> 檔案。</p>\n<p>在 Shortcuts JS 的網站上就有一個 playground 讓你實際玩玩看，並且能馬上下載成 <code class=\"language-text\">shortcut</code> 檔，只是從 iOS 13 開始，不能夠直接將 <code class=\"language-text\">.shortcut</code> 檔案 AirDrop 到手機內，需要透過 icloud link 才行。</p>\n<p>另外，從他們網站上與 github issue 上也能知道目前並不是所有 Apple 內建的 actions 都支援，所以實際上許多 idea 要實作還是不容易。</p>\n<h3 id=\"官方上簡單的範例\" style=\"position:relative;\"><a href=\"#%E5%AE%98%E6%96%B9%E4%B8%8A%E7%B0%A1%E5%96%AE%E7%9A%84%E7%AF%84%E4%BE%8B\" aria-label=\"官方上簡單的範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>官方上簡單的範例</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//////// Import necessary actions and function ////////</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> actionOutput<span class=\"token punctuation\">,</span> buildShortcut <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@joshfarrant/shortcuts-js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  comment<span class=\"token punctuation\">,</span>\n  wait<span class=\"token punctuation\">,</span>\n  runJavaScriptOnWebPage<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@joshfarrant/shortcuts-js/actions\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">///////////////////////////////////////////////////////</span>\n\n<span class=\"token comment\">//////// Create and arrange actions ////////</span>\n<span class=\"token comment\">// We'll use this later to reference the output of a calculation</span>\n<span class=\"token keyword\">let</span> calcVar <span class=\"token operator\">=</span> <span class=\"token function\">actionOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Define a list of actions</span>\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    text<span class=\"token operator\">:</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    number<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    operand<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    operation<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> calcVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">showResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Use the Magic Variable</span>\n    text<span class=\"token operator\">:</span> withVariables<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Total is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>calcVar<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/////////////////////////////////////////////</span>\n\n<span class=\"token comment\">//////// Generate the Shortcut data ////////</span>\n<span class=\"token keyword\">const</span> shortcut <span class=\"token operator\">=</span> <span class=\"token function\">buildShortcut</span><span class=\"token punctuation\">(</span>actions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Write the Shortcut to a file in the current directory</span>\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example.shortcut'</span><span class=\"token punctuation\">,</span> shortcut<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Something went wrong :('</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Shortcut created!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//////////////////////////////////////////////</span></code></pre></div>\n<p>用 shortcuts js 製作一個基本的 shortcuts 非常簡單，只需要三個步驟：</p>\n<ol>\n<li>載入你想要使用的 actions。</li>\n<li>創建一個 <code class=\"language-text\">actions</code> 陣列，將你想要執行的 actions 照順序放進去，基本上每個 action 都會有 output，而每一個 output 都會自動傳給陣列中的下一個 action。可以從<a href=\"https://docs.shortcuts.fun/actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方文件</a>查閱目前 support 的 actions 其輸入輸出為何。不過他們文件沒有很齊全就是了...</li>\n</ol>\n<p><img src=\"/image/shortcut-js-docs.png\" alt=\"shortcut-js-docs\" title=\"shortcut-js-docs\"></p>\n<ol start=\"3\">\n<li>最後一個步驟就是透過 shortcuts js 的 <code class=\"language-text\">buildShortcut()</code> 函式來將你編排的 actions 轉化成合法的 iOS shortcuts format，並寫入檔案。</li>\n</ol>\n<p>接著你就能將這個檔案放入 icloud 上，並產生 icloud shortcuts link 來載入到你的手機裡使用了。</p>\n<p>產生 icloud shortcuts link 的方式其實我不是很確定有沒有什麼正確的方式，但我在最後會分享我所使用的方法。</p>\n<p>這邊我們先來解釋一下官方範例的 actions 做了什麼事：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    text<span class=\"token operator\">:</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    number<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    operand<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    operation<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> calcVar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">showResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Use the Magic Variable</span>\n    text<span class=\"token operator\">:</span> withVariables<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Total is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>calcVar<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>shortcuts js 是用 TypeScript 撰寫的，所以你載入的每個 action 你都能清楚地看到其所需要的參數與類型。</p>\n<p><code class=\"language-text\">comment</code> action 如其名，就是在 shortcuts 中下個註解，實際上沒有作用，你也只能在 shortcuts 的 action flow 中看得到它：</p>\n<p><img src=\"/image/comment-sample.png\" alt=\"comment-sample\" title=\"comment-sample\"></p>\n<p><code class=\"language-text\">number</code> 則是讓你能設定一個數字，他會將你設定的數字當作 output 傳給下一個 action，在範例中即是 <code class=\"language-text\">calculate</code> action。</p>\n<p><code class=\"language-text\">calculate</code> 除了接收上一個 action 傳入的 input 外，你需要指定與 input 操作的 <code class=\"language-text\">operand</code> 與 <code class=\"language-text\">operation</code>；最後的一個參數是一個叫做 Magic Variable 的變數，他可以用來儲存 action 所產生的結果，並在其他 action 中 reference 使用，例如範例中的 <code class=\"language-text\">showResult</code>。</p>\n<p><code class=\"language-text\">showResult</code> 就是將你傳入的 <code class=\"language-text\">text</code> 參數值輸出到手機畫面中。在這邊我們想要取得 <code class=\"language-text\">caculate</code> 所 output 的變數值，然而 <code class=\"language-text\">showResult</code> 需要的是字串，我們不能單純的傳入變數，必須要使用一個特殊的函數 <code class=\"language-text\">withVariables</code>，將變數值讀出並轉成 string 格式。</p>\n<p>這個 shortcuts 執行後就是會在你的手機上跳出一個 dialog 並顯示 14 這個數字。</p>\n<h3 id=\"了解官方範例後自己來動手做看看\" style=\"position:relative;\"><a href=\"#%E4%BA%86%E8%A7%A3%E5%AE%98%E6%96%B9%E7%AF%84%E4%BE%8B%E5%BE%8C%E8%87%AA%E5%B7%B1%E4%BE%86%E5%8B%95%E6%89%8B%E5%81%9A%E7%9C%8B%E7%9C%8B\" aria-label=\"了解官方範例後自己來動手做看看 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>了解官方範例後，自己來動手做看看</h3>\n<p>如同前言提到的，我一開始想做的是事實查核的 shortcuts，也就是說讓使用者點選 shortcuts 後，可以輸入想查詢的事情，背後呼叫 Google 的 <a href=\"https://developers.google.com/fact-check/tools/api/reference/rest/v1alpha1/claims/search?apix_params=%7B%22query%22%3A%22Trump%20got%20infected%22%7D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fact check api</a>，但是 shortcuts 雖然有提供 <code class=\"language-text\">Get URL content</code> 的 aciton，卻沒有方便的資料處理 action，必須使用 <code class=\"language-text\">dictionary</code> 之類的 action 來將回傳的 JSON format 資料轉存成辭典格式，操作上很繁瑣，可以參考 reddit 上高手的說明：<a href=\"https://www.reddit.com/r/shortcuts/comments/afbrlh/using_apis_part1_retrieving_data/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">retrieving data</a>、<a href=\"https://www.reddit.com/r/shortcuts/comments/afpwo2/using_apis_part_2_parsing_complex_api_responses/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">parsing complex api responses</a>、<a href=\"https://www.reddit.com/r/shortcuts/comments/ae80co/quick_and_dirty_guide_to_scraping_data_from/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">scrapign web data</a>。</p>\n<p>在花了不少時間嘗試用 shortcuts js 按照 reddits 上的做法實作後，還是不成功，正當想放棄時，我看到了一個 action 叫做 <code class=\"language-text\">runJavaScriptOnWebPage()</code>，可以讓你在網頁上插入 JavaScript 運行。</p>\n<p>看到這個心花怒放一下，覺得撿到寶，可以在網頁上運行的話更好，在想進行事實查核的網頁上啟用這個 shortcuts，然後一切流程都直接用 JavaScript 在 web page 上執行就好，就不需要透過 shortcuts action 來處理資料了！</p>\n<p>利用 <code class=\"language-text\">runJavaScriptOnWebPage()</code> 所兜出來的 shortcuts 主要程式如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token function\">runJavaScriptOnWebPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    text<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      const element = document.querySelector('title');\n      const title = element.textContent;\n      const url = 'https://content-factchecktools.googleapis.com/v1alpha1/claims:search?key=GoogleAPIKey&amp;query=' + title;\n      const result;\n      fetch(url)\n        .then(function(result) {\n          return result.json();\n        })\n        .then(function(data) {\n          result = data;\n          completion(result);\n        });\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">quickLook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>不是很確定其 JavaScript 執行的環境為何，我並沒有去研究，但測試後是無法使用 await 的，使用單純的 promise 則可以。</p>\n<p>運行結果如下：</p>\n<p><img src=\"/image/fact-check-demo.gif\" alt=\"fact-check-demo\" title=\"fact-check-demo\"></p>\n<p>看起來只要把 response 在美化一下就好，但是我發現 Google API 回傳的結果沒有很好，會回傳很多不相干的，就也不想繼續優化了。</p>\n<p>不過既然知道可以在網頁上運行 JavaScript，那就可以做更多事情了！</p>\n<p>像是我後來找到的這位<a href=\"https://github.com/realdennis\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">高手</a>，就利用這樣的方式來 <a href=\"https://github.com/realdennis/shortcuts-mono/tree/master/packages/shortcuts/sc-background-player\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bypass Youtube video 在手機網頁上無法背景播放的問題</a>，是我目前覺得最實用的 shortcuts XD</p>\n<p>而前言中的範例，我也是利用相同方式，將 <code class=\"language-text\">vConsole</code> inject 到頁面中，程式碼非常簡單：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// injectScript.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cdn.bootcss.com/vConsole/3.2.0/vconsole.min.js\"</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// hacky way to wait for script load</span>\n    <span class=\"token keyword\">const</span> script2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    script2<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">'window.vConsole = new VConsole();'</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">completion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>本來是想直接利用 <code class=\"language-text\">script.onload</code> 在 <code class=\"language-text\">vConsole</code> 的 script 載入後進行 initial，但是不知道為何無法順利觸發，因此只好用 setTimeot 的方式快速 hack 一下。（這種實作會造成有時得啟用兩次 shortcut 才能成功載入 vConsole ...）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> injectScript <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./injectScript\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...略</span>\n<span class=\"token function\">runJavaScriptOnWebPage</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n      text<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        const injectScript = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>injectScript<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n        const result = injectScript();\n        completion(result);</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    output\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// ...略</span></code></pre></div>\n<p>完整程式碼我放在 <a href=\"https://github.com/ArvinH/shortcuts-vconsole\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>。</p>\n<h3 id=\"產生-icloud-link\" style=\"position:relative;\"><a href=\"#%E7%94%A2%E7%94%9F-icloud-link\" aria-label=\"產生 icloud link permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>產生 iCloud link</h3>\n<p>前面說過從 iOS 13 開始，不能夠再隨意用 AirDrop 丟入 <code class=\"language-text\">.shortcut</code> 的檔案，必須要透過 iCloud link。</p>\n<p>但我其實找不太到該如何將我產生的 <code class=\"language-text\">.shortcut</code> 檔案轉成 iCloud link，後來在 <a href=\"https://github.com/joshfarrant/shortcuts-js/issues/217\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub issue</a> 上找到有人分享他從 <a href=\"https://www.reddit.com/r/shortcuts/comments/d738kr/ios13_importing_shortcuts_as_files_is_not/f2ngi2e/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">reddit</a> 找到的 shortcuts - <a href=\"https://www.icloud.com/shortcuts/f9acfff2a5e94138a6574498d22c2813\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Import Shortcut</a>。</p>\n<p>只要將你做好的 <code class=\"language-text\">.shortcut</code> 檔案放入 iCloud Drive，透過這個 <strong>Import Shortcut</strong> 就能從你的 iCloud Drive 中將檔案抓下來並產生一個 iCloud link，接著理論上 iPhone 就會自動 detect 到，你也就能直接安裝。</p>\n<p>P.S. 再提醒一下，記得要到 \"設定\" -> \"捷徑\" -> \"允許不受信任的捷徑\" 將該選項開啟，才能 import 你自己製作的 shortcuts。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>shortcuts 這個概念蠻有意思的，一些小動作其實自己一步一步做也是可以，但透過 shortcuts 將常用的動作組織起來，一鍵就能完成，每個步驟省個三、四秒，整體可能就能省掉你十秒，如果這 shortcuts 很常用的話，勢必能增加效率，至少心理層面的感覺有 XD</p>\n<p>整體來說，shortcuts js 還有很多地方可以改進，目前我覺得還缺少一些蠻重要的 Action，一些輸入的參數目前也不是太好用，debug 也不方便（必須要裝載上去才能測試），希望透過這次介紹能引起多點人的興趣，或許能更加推進這個專案。</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://shortcuts.fun/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">shortcuts-js website</a></li>\n<li><a href=\"https://github.com/joshfarrant/shortcuts-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">shortcuts-js github</a> </li>\n<li><a href=\"https://developers.google.com/fact-check/tools/api/reference/rest/v1alpha1/claims/search?apix_params=%7B%22query%22%3A%22Trump%20got%20infected%22%7D\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fact check api</a></li>\n<li><a href=\"https://www.reddit.com/r/shortcuts/comments/afbrlh/using_apis_part1_retrieving_data/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">retrieving data</a></li>\n<li><a href=\"https://www.reddit.com/r/shortcuts/comments/afpwo2/using_apis_part_2_parsing_complex_api_responses/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">parsing complex api responses</a></li>\n<li><a href=\"https://www.reddit.com/r/shortcuts/comments/ae80co/quick_and_dirty_guide_to_scraping_data_from/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">scrapign web data</a>。</li>\n</ol>","id":"62b18c68-0164-51a0-99a7-ebd11ef41684","fields":{"slug":"ios-shortcuts-js"},"frontmatter":{"date":"2020-04-25T13:37:30.000Z","title":"用 JS 玩轉 iOS shortcuts","tags":["web","iOS","JavaScript","experiment"],"type":"tech","slug":"ios-shortcuts-js"},"timeToRead":11}],"tagName":"iOS","type":"tech"}},"staticQueryHashes":["2123680655"]}