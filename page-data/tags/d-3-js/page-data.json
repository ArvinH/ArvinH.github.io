{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/d-3-js","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：那天晚上 我夢見了你 feat.Vita 張芮菲","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/2MGUXtO7atA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">那天晚上 我夢見了你 feat.Vita 張芮菲</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/2MGUXtO7atA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>軟體工程師應該很少沒參加過 Conference 吧，不管是社群或是學術性的，只要是與會者都會拿到一面主辦方製作的名牌，上面除了印著你的大名外，大多就剩下 Conference 名稱與 Logo 了，然而，由灣區的資料視覺化社群所舉辦的年度聚會 - visfest unconf 很是特別，他們提供與會者一個製作自己 badge 的機會，讓大家自行發揮創意，特別之餘也很符合整個會議的調性。今年八月是他們舉辦的第五屆 visfest unconf，這次他們在 <a href=\"https://observablehq.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ObservableHQ</a> 這個平台上釋出了一個 Template，讓大家更方便的製作名牌，效果如同下方（因為用到 ECMAScript modules，建議使用桌面版 Chrome），若無法觀看，可以前往此 <a href=\"https://observablehq.com/@arvinh/visfest-unconf-badge-builder-template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">link</a>，或是拉到最下面看 gif：</p>\n<div id=\"animation\"></div>\n<script type=\"module\">\n  import notebook from \"https://cors-anywhere.herokuapp.com/https://api.observablehq.com/@arvinh/visfest-unconf-badge-builder-template.js\";\n\n  const renders = {\n    \"result\": \"#animation\",\n  };\n\n  import {Inspector, Runtime} from \"https://unpkg.com/@observablehq/notebook-runtime@2?module\";\n  for (let i in renders)\n    renders[i] = document.querySelector(renders[i]);\n\n  Runtime.load(notebook, (variable) => {\n    console.log(variable)\n    if (renders[variable.name])\n      return new Inspector(renders[variable.name]);\n  });\n</script>\n<p>除了 Observable 與 visfest 的 Logo 外，你可以繪製任何你想呈現的東西，改變背景顏色等等，而主辦方會用 <a href=\"https://gifpop.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gitpop</a> 這項服務，將你的動畫製作成 10 frames 的 gif，因此在製作時，可以根據 template 提供的繪圖函式傳入的 <code class=\"language-text\">frameNumbers</code> 來控制動畫的呈現。</p>\n<p>我自己是覺得這樣的想法很酷，所以即便無緣參加 visfest unconf，也製作了一個自己的 Badge 玩玩，順便來試用已經想玩很久的平台 <a href=\"https://observablehq.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ObservableHQ</a>，這篇文章就記錄一下使用的過程，並說明其特性，希望能引起大家興趣！</p>\n<h2 id=\"observablehq-起源\" style=\"position:relative;\"><a href=\"#observablehq-%E8%B5%B7%E6%BA%90\" aria-label=\"observablehq 起源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ObservableHQ 起源</h2>\n<p>D3.js 的作者 <a href=\"https://twitter.com/mbostock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@mbostock</a>，在 2017 年的時候發了一篇名為 <a href=\"https://medium.com/@mbostock/a-better-way-to-code-2b1d2876a3a0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Better Way to Code</a> 的文章，介紹了他當時正在製作的專案 - <code class=\"language-text\">d3.express</code>，也就是現在的 <a href=\"https://observablehq.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ObservableHQ</a>。</p>\n<!-- 介紹目的 -->\n<p>Mike Bostock 在過去十年左右的時間都致力於資料視覺化，為了能夠更方便的將資料以各種方式呈現，D3.js 因應而生，然而，致力於一個工具太久，反而忘了當初為何要製作工具，目的變成了工具本身，而不是透過該工具所能傳達的價值。</p>\n<blockquote>\n<p>The purpose of visualization is insight, not pictures - Ben Shneiderman</p>\n</blockquote>\n<p>資料視覺化的重點應在於將資料的 insight 更加輕易的傳遞給世界，儘管現在已經有很多圖形化介面的拖拉工具輔助你將資料視覺化，但若是想要最大幅度的自由創作並表達 insight，撰寫程式碼是無可避免的。</p>\n<p>然而寫程式一直都不是一件簡單的事，為了降低寫程式的難度，他創造了另一個工具：<a href=\"https://observablehq.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ObservableHQ</a>。你可以把它想像成 JavaScript 版本的 jupyter notebook，但使用上某些語法跟純 JavaScript 有些差異，因此剛開始可能會有些不太習慣的地方，等到上手後，你就會發現它的好用之處，尤其適合應用在製作資料視覺化專案上。</p>\n<h2 id=\"observablehq-基礎操作\" style=\"position:relative;\"><a href=\"#observablehq-%E5%9F%BA%E7%A4%8E%E6%93%8D%E4%BD%9C\" aria-label=\"observablehq 基礎操作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ObservableHQ 基礎操作</h2>\n<p>ObservableHQ 其實不能算是 JavaScript，因為有許多操作行為與 vanilla JavaScript 不相同，作者也有寫了一篇<a href=\"https://observablehq.com/@observablehq/observables-not-javascript?collection=@observablehq/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">說明</a>。</p>\n<p>基本上，你可以把 ObservableHQ 想像成一個試算表，由一格一格的 <code class=\"language-text\">cell</code> 所組成，而每一格 <code class=\"language-text\">cell</code> 都是一個 JavaScript snippet，可以是一則運算式、一段簡短的函式，當然也可以將值指定給一變數名稱。</p>\n<p><img src=\"/image/observablehq-statement.png\" alt=\"ObservableHQ statements\"></p>\n<p>在上面的圖片中，比較不同的地方在於運算函式的寫法，除了一般的 Function Declarations 與 Function Expressions 外，你也可以用一個大括號 <code class=\"language-text\">{}</code> 包裹著一段程式碼，最後 <code class=\"language-text\">return</code> 出去的值，就會被印出來。</p>\n<p>而就像試算表的公式一樣，表格內的值是互相 reference 的，只要你在某處修改了某個 <code class=\"language-text\">cell</code> 的值，所有引用到該 <code class=\"language-text\">cell</code> 的程式都會相應改變（re-run），跟一般 vanilla JavaScript 從上到下執行程式碼的邏輯有所不同：</p>\n<p><img src=\"/image/observablehq-var-reference.gif\" alt=\"demo\"></p>\n<p>從這點來看，你也可以把所有在 ObservableHQ 上的變數 assignments 都想成是 hoisted declarations，因為宣告順序不影響 reference。</p>\n<p>此外，支援使用 <code class=\"language-text\">html</code> 與 <code class=\"language-text\">markdown</code> 的語法，利用 <code class=\"language-text\">Template literals</code> 來完成：</p>\n<p><img src=\"/image/observablehq-html-md.png\" alt=\"demo-html-md\"></p>\n<p>還有一個特別的 built-in 運算子 - <code class=\"language-text\">viewof</code>：</p>\n<p><img src=\"/image/observablehq-viewof.gif\" alt=\"demo-viewof\"></p>\n<p>如上面的 gif 所示，viewof 可以將使用者針對一個 html input element 操作所產生的值，exposes 出來，或是 assign 給一個變數。可以想見，這用在互動式視覺化專案中會是很棒的功能。</p>\n<p>這幾個大概是最基本的操作，還有其他諸如：如何匯入第三方套件、使用非同步 API 呼叫等等，我們就直接透過實際演練來學習吧！</p>\n<h2 id=\"observablehq-實際操作\" style=\"position:relative;\"><a href=\"#observablehq-%E5%AF%A6%E9%9A%9B%E6%93%8D%E4%BD%9C\" aria-label=\"observablehq 實際操作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ObservableHQ 實際操作</h2>\n<p>接下來用我這次製作的 visfest badge 來做範例，進一步帶大家認識這個工具！</p>\n<p>這次的 badge，主要概念是在 2D 地球圖上，顯示各城市的人口數量級別，用地球的轉動與 marker 的 radius 大小變化來呈現動畫。</p>\n<p>要完成這個目標，起手第一步就是得先把 2D 地球畫出來。而 Mike Bostock 有提供一份 <code class=\"language-text\">topojson</code> 格式的世界地圖資料：<code class=\"language-text\">https://unpkg.com/world-atlas@1/world/110m.json</code>。</p>\n<p>因此，我們需要載入 <code class=\"language-text\">topojson</code> 套件，並 <code class=\"language-text\">fetch</code> 世界圖資，而在 ObservableHQ 上我們可以這樣做：</p>\n<p><img src=\"/image/observablehq-import-lib.png\" alt=\"Import libs\"></p>\n<p>這邊我們用 <code class=\"language-text\">require</code> 來載入 <code class=\"language-text\">topojson</code> 套件，但其實它背後並非 CommonJS，而是用 <a href=\"https://requirejs.org/docs/whyamd.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Asynchronous Module Definition (AMD)</a> 實作。另外它也支援 ES modules 與 imports，所以可以依照你所使用的套件支援度來選擇要用哪種方式載入模組。</p>\n<p>至於取得世界圖資，我們需要兩個步驟：</p>\n<ol>\n<li>取得圖資 JSON 檔案：<code class=\"language-text\">let world = await (await fetch(\"https://unpkg.com/world-atlas@1/world/110m.json\")).json();</code></li>\n<li>取得拓樸後的資料：<code class=\"language-text\">topojson.feature(world, world.objects.countries);</code></li>\n</ol>\n<p>在 ObservableHQ 上，我們可以利用先前說到的大括號 <code class=\"language-text\">{}</code> 來執行多行程式碼，並把最後 return 的值賦予給某個變數：</p>\n<p><img src=\"/image/observablehq-get-worldmap.png\" alt=\"Get world map data\"></p>\n<p>接著還需要有各城市的人口資料，取得方式與上面相同：</p>\n<p><img src=\"/image/observablehq-get-cities-pop.png\" alt=\"Get cities population\"></p>\n<p>資料到手後，剩下的就就跟一般撰寫 D3.js 的專案ㄧ樣。</p>\n<p>在 visfest 提供的模板中，提供了許多以定義好的變數宣告，像是姓名、字體亮度、大小等等，而我們只需要在 <code class=\"language-text\">badgeCode</code> 這個函數中實作我們的視覺化作品即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Your D3 code goes here.</span>\n<span class=\"token comment\">// The function badgeCode gets called below to generate the previews.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">badgeCode</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">g<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> frameNumber</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// g: a &lt;g>, i.e. d3.select(... the node)</span>\n  <span class=\"token comment\">// context: a canvas context, useful for doing canvas drawing</span>\n  <span class=\"token comment\">// frameNumber: a number that represents the frame (1, 2, … 10) for psuedo-animation.</span>\n  <span class=\"token comment\">// width &amp; height are available via the environment, as is d3</span>\n  <span class=\"token comment\">// Note: the &lt;g> is drawn on top of the &lt;canvas></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">badgeCode</code> 接收三個參數，一個是在 badge 上留給你繪圖的空間 <code class=\"language-text\">&lt;g></code> 元素，以及 <code class=\"language-text\">canvas context</code> 和 <code class=\"language-text\">frameNumber</code>，該模板會呼叫此函式十次，依序傳入遞增的 <code class=\"language-text\">frameNumber</code>，讓你來掌控動畫過程。</p>\n<p>到這邊可能你會好奇，在 ObservableHQ 中的 <strong>模板</strong> 到底是怎麼運作的？為什麼能定義出一個函式，讓我去填寫內容，又幫我執行呢？</p>\n<p>答案要追究到 ObservableHQ 的一個特殊 <code class=\"language-text\">import-with</code> 方法：</p>\n<p><img src=\"/image/observablehq-import-with.png\" alt=\"import-with\"></p>\n<p><code class=\"language-text\">b93171820ba3f268</code> 是 ObservableHQ 上的另一個 notebook，也就是實際的 template 程式碼所在位置，我們可以從該 notebook 中 import 進 <code class=\"language-text\">{preview, animation, download, width, height, d3}</code> 這幾個函式來呼叫使用，而這幾個函式中所用到的變數，我們能使用 <code class=\"language-text\">with</code> 來取出，並且賦予其新的值！</p>\n<p>這就是為什麼我們可以修改 <code class=\"language-text\">firstName</code>、<code class=\"language-text\">lastName</code> 以及自行填入 <code class=\"language-text\">badgeCode</code> 函數的原因了。</p>\n<p><code class=\"language-text\">badgeCode</code> 內的程式碼基本上就是普通的 D3.js 程式，這邊就不再附上程式碼，有興趣想知道怎麼實作在地球呈現人口分布的，可以到我的 <a href=\"https://observablehq.com/@arvinh/visfest-unconf-badge-builder-template\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">notebook</a> 去看，其中我也有用到前面提及的 <code class=\"language-text\">viewof</code> 運算子，讓我能手動調整地球的 scale 大小。</p>\n<p>都完成後就會看到由模板提供的 <code class=\"language-text\">preview</code> 函式所繪製出的十張圖：</p>\n<p><img src=\"/image/observablehq-preview-ten-pics.png\" alt=\"Preview ten pics\"></p>\n<p>以及用 <code class=\"language-text\">animation</code> 函式（一樣模板提供）繪製的動畫：</p>\n<p><img src=\"/image/observablehq-animation.gif\" alt=\"Animation gif\"></p>\n<h2 id=\"分享你的-observablehq-作品\" style=\"position:relative;\"><a href=\"#%E5%88%86%E4%BA%AB%E4%BD%A0%E7%9A%84-observablehq-%E4%BD%9C%E5%93%81\" aria-label=\"分享你的 observablehq 作品 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>分享你的 ObservableHQ 作品</h2>\n<p>完成作品後，最重要的就是分享。</p>\n<p>這篇文章的最上方，我放入的成品並不是 gif，而是貨真價實從 ObservableHQ 所匯入的，利用 <code class=\"language-text\">ECMAScript modules</code>，載入想要嵌入的 notebook，接著再載入 ObservableHQ 提供的 <code class=\"language-text\">{Inspector, Runtime}</code>，當 notebook 載入後，取得其中 export 的變數，透過 <code class=\"language-text\">Inspector</code> 將其繪製到指定的 DOM id 上：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>animation<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> notebook <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://cors-anywhere.herokuapp.com/https://api.observablehq.com/@arvinh/visfest-unconf-badge-builder-template.js\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> renders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"result\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#animation\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Inspector<span class=\"token punctuation\">,</span> Runtime<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"https://unpkg.com/@observablehq/notebook-runtime@2?module\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">in</span> renders<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    renders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>renders<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  Runtime<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>notebook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">variable</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>renders<span class=\"token punctuation\">[</span>variable<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Inspector</span><span class=\"token punctuation\">(</span>renders<span class=\"token punctuation\">[</span>variable<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>透過這種方式，除了能夠在 ObservableHQ 上載入引用他人的 notebook 外，也能在一般網站上嵌入任何作品，非常方便！</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>這篇文章只是非常簡略的說明了 ObservableHQ 的起源、用途與使用方式，希望能引起大家的興趣，如果有想要使用這套工具玩玩，或是製作視覺化專案的話，官方網站其實有出了一系列的<a href=\"https://observablehq.com/collection/@observablehq/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">教學與說明文件</a>，直接就是用 ObservableHQ 的 notebook 撰寫的，互動式的閱讀體驗非常好，可以非常清楚的知道各個環節該怎麼使用，以及其背後的設計原理。</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://observablehq.com/@observablehq/five-minute-introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Observablehq five minute intro</a></li>\n<li><a href=\"https://observablehq.com/@observablehq/observables-not-javascript?collection=@observablehq/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Observable’s not JavaScript</a></li>\n<li><a href=\"https://observablehq.com/collection/@observablehq/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Observablehq introduction</a></li>\n</ol>","id":"1628307b-7c51-5350-8588-44aba765b8f3","fields":{"slug":"observablehq-intro"},"frontmatter":{"date":"2019-09-09T02:01:00.000Z","title":"從製作 visfest 2019 badge 認識 ObservableHQ","tags":["d3.js","javascript","visualization"],"type":"tech","slug":"observablehq-intro"},"timeToRead":8}],"tagName":"d3.js","type":"tech"}},"staticQueryHashes":["2123680655"]}