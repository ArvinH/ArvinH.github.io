{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/gsap","result":{"pageContext":{"posts":[{"excerpt":"製作動畫，人人有責。","html":"<p>製作動畫，人人有責。</p>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>疫情升溫，待在家裡救人救己，除了打電動玩健身環外，也是個好機會來培養培養自己的美術能力，然而平常工作沒什麼機會製作動畫的我，即便有了時間，也不知道要從何下手，上了 Dribbble、CodePen 找靈感，的確看到很多有趣的作品，但是大多都很複雜，不像是一個週末午後的休閒良品，例如，<a href=\"https://www.tinydesign.co.uk/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ben Evans</a> 的這個作品：</p>\n<p class=\"codepen\" data-height=\"379\" data-theme-id=\"dark\" data-default-tab=\"result\" data-user=\"ivorjetski\" data-slug-hash=\"xxGYWQG\" data-preview=\"true\" style=\"height: 379px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Pure CSS Landscape - An Evening in Southwold\">\n  <span>See the Pen <a href=\"https://codepen.io/ivorjetski/pen/xxGYWQG\">\n  Pure CSS Landscape - An Evening in Southwold</a> by Ben Evans (<a href=\"https://codepen.io/ivorjetski\">@ivorjetski</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n<p>這張像是照片一樣的圖片，你能想像是單純用 CSS 製作的嗎？作者有放上他製作這作品的<a href=\"https://youtu.be/rUCVBNNyjC4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">縮時影片</a>（影片的音樂還是他自己做的，真有才華），雖然不知道總共花了多少時間，但以他的另一個同樣驚人且至少花費一百小時的<a href=\"https://codepen.io/ivorjetski/pen/dBYWWZ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">作品</a>推斷，時數少不到哪去的。</p>\n<p>我知道很多人會覺得，『對呀很酷，但為什麼？』。</p>\n<p>我也不懂為什麼，但知道能利用 CSS 做出這種極限真的很令人感到興奮。光是觀察他的程式碼就可以學到不少技巧，像是：</p>\n<ol>\n<li>Custom HTML tag</li>\n</ol>\n<p>即便是用 CSS 繪圖，相信大部分的人也都是用普通的 <code class=\"language-text\">div</code>、<code class=\"language-text\">span</code> 來組裝圖案，但如果你打開剛剛那範例的 HTML，會看到這樣的結構：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>landscape</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sky</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>x</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span><span class=\"token punctuation\">></span></span>\n      ...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>x</span>\n    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sky</span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>landscape</span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<p>全都是 custom element，以為是他自製的 web component 但他又沒有對應的 Javascript？🤔</p>\n<p>其實現今瀏覽器對這種 invalid 的 HTML tag 容忍度很高，只要有給定 CSS，瀏覽器還是能正常渲染出來。實際專案上當然不建議這樣做，但在製作 CSS 繪圖或藝術動畫這類通常擁有複雜 HTML 結構的作品上時，就能讓程式碼看起來簡潔許多，等同於讓 tag name 取代 class name。</p>\n<ol start=\"2\">\n<li>Responsive rem</li>\n</ol>\n<p>我們都知道 <code class=\"language-text\">rem</code> 會隨著 root element 的 font-size 自動調整大小，所以若是我們也能動態調整 root element 的大小，並用 <code class=\"language-text\">rem</code> 來設定所有元素的 size，那就能讓頁面輕鬆 responsive。要做到這點可以利用 <code class=\"language-text\">vmin</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1vmin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">vmin</code> 對應 viewport 的短邊，意即螢幕縮小時，該值也會隨之變小，這樣就能達到我們要的效果。</p>\n<p>其實還有其他技巧，但已經扯夠遠了😅。</p>\n<p>雖然試著理解高手如何做到是能吸收不少經驗，但還是會想要自己動手做點什麼，好在我又發現了另一個稍微平易近人的高手 - <a href=\"https://dribbble.com/ai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aaron Iker</a>，他大多的作品都圍繞在一個網頁上不可缺乏，但鮮少被人拿來做文章的元件 - <strong>\"按鈕\"</strong>上。</p>\n<p>按鈕，幾乎所有網頁都會用到它，但就是拿來觸發一些動作，被觸發的動作才是我們在意的，很少會在上頭多作著墨，頂多加個 Hover 變色或位移就很差不多了。</p>\n<p>但看看下面這個<a href=\"https://dribbble.com/shots/14524315-Download-Button\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">實例</a>：</p>\n<p><video width=\"100%\" height=\"315\" controls src=\"https://cdn.dribbble.com/users/414694/screenshots/14524315/media/d4970a372ae0c6b9a4bf8d60c4d5d82f.mp4\"></video></p>\n<p>一點小巧思，瞬間就讓按鈕活了起來。</p>\n<p>而且因為範圍限縮在了按鈕的大小，就算動畫稍微華麗一些也不會對整體頁面造成太多干擾。</p>\n<p>受到 Aaron 啟發，趁著空閒時間我也試著做了一個<a href=\"https://codepen.io/arvin0731/full/dyvvrBb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">按鈕動畫</a>，今天這篇文章就分享一下過程中使用到的工具與眉角！</p>\n<p><video width=\"100%\" height=\"315\" controls src=\"https://i.imgur.com/I27O5GT.mp4\"></video></p>\n<h2 id=\"靈感來源\" style=\"position:relative;\"><a href=\"#%E9%9D%88%E6%84%9F%E4%BE%86%E6%BA%90\" aria-label=\"靈感來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>靈感來源</h2>\n<p>這次的按鈕動畫主要修改自 Dribbble 上 <a href=\"https://dribbble.com/yorkun\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YorKun</a> 的作品 - <a href=\"https://dribbble.com/shots/15522609-Button-Lock-Animation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Button Lock Animation</a>，感謝作者還有附上 Figma 檔案，讓我能更輕鬆的參照 Style。</p>\n<p>不過我並沒有完全照著原作的動畫製作，主要是想多試試一些不同的動畫組合，接下來我會一一介紹。</p>\n<h2 id=\"動畫實作\" style=\"position:relative;\"><a href=\"#%E5%8B%95%E7%95%AB%E5%AF%A6%E4%BD%9C\" aria-label=\"動畫實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>動畫實作</h2>\n<p>我一開始想達到的動畫有四項：</p>\n<ol>\n<li>滑動解鎖</li>\n<li>鎖頭開啟與掉落</li>\n<li>對應開鎖狀態的動畫</li>\n<li>鎖頭拖拉時的 2D 物理效果</li>\n</ol>\n<p>理論上應該是很快就能完成，但因為對 GSAP 不熟，花了些冤枉路，導致最後只完成了前三項的效果，算是差強人意。</p>\n<p>用到的工具主要是 <a href=\"https://greensock.com/docs/v3/GSAP/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GSAP</a> 與 GSAP 的 <a href=\"https://greensock.com/draggable/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Draggable plugin</a></p>\n<h3 id=\"滑動解鎖\" style=\"position:relative;\"><a href=\"#%E6%BB%91%E5%8B%95%E8%A7%A3%E9%8E%96\" aria-label=\"滑動解鎖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>滑動解鎖</h3>\n<p>GSAP 的 <a href=\"https://greensock.com/draggable/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Draggable plugin</a> 真的有夠簡單好用，只要給定想要啟動 Draggable 的 DOM 物件，並指定要拖拉的方向（type）與範圍（bounds），就能瞬間完成這樣的效果（<a href=\"https://codepen.io/arvin0731/pen/JjWWyZG?editors=1010\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">demo 由此去</a>）：</p>\n<p><video width=\"100%\" height=\"315\" controls src=\"https://i.imgur.com/1aL8FNc.mp4\"></video></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 註冊 gsap 的 draggable plugin</span>\ngsap<span class=\"token punctuation\">.</span><span class=\"token function\">registerPlugin</span><span class=\"token punctuation\">(</span>Draggable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 把需要互動的 DOM 用 querySelector 選出來</span>\n<span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".unlock-btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lockerArea <span class=\"token operator\">=</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".locker\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dropArea <span class=\"token operator\">=</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".drop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 主要的 Draggable instance</span>\nDraggable<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>lockerArea<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span>\n  bounds<span class=\"token operator\">:</span> button<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onDrag</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onRelease</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hitTest</span><span class=\"token punctuation\">(</span>dropArea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gsap<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerArea<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span>\n        ease<span class=\"token operator\">:</span> <span class=\"token string\">\"elastic.out(1, .75)\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// this.disable();</span>\n      gsap<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerArea<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> dropArea<span class=\"token punctuation\">.</span>offsetLeft <span class=\"token operator\">-</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span>\n        ease<span class=\"token operator\">:</span> <span class=\"token string\">\"elastic.out(1, .8)\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          tl<span class=\"token punctuation\">.</span><span class=\"token function\">restart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>中間可以看到，我們指定 <code class=\"language-text\">type</code> 為 <code class=\"language-text\">x</code>，表示移動方向為 x 軸，而 <code class=\"language-text\">bounds</code> 為 <code class=\"language-text\">button</code> DOM 物件，所以最多不會拖移超過 butotn 的範圍。</p>\n<p>另外，影片中有一個效果是當你拖拉到前後兩端點的時候，會有一個吸力把拖移中的物件吸過去，這段其實是需要靠額外的兩個動畫效果來達成。</p>\n<p><code class=\"language-text\">Draggable.create()</code> 可以傳入的 Option 中，能指定 <code class=\"language-text\">onDrag</code> 與 <code class=\"language-text\">onRelease</code> handler，在 <code class=\"language-text\">onRelease</code> 的時候我們可以透過 <code class=\"language-text\">this.hitTest(dropArea)</code> 這個 Draggable 內建的函式判斷拖拉中的物件是否觸碰到另一個指定的 DOM 物件，若還沒碰到，我們就拉回到起點，也就是這段所做的事：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">gsap<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerArea<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  duration<span class=\"token operator\">:</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span>\n  ease<span class=\"token operator\">:</span> <span class=\"token string\">\"elastic.out(1, .75)\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>透過 <code class=\"language-text\">gsap.to</code> 可以讓指定的 DOM 物件變換到我們傳入的 property 狀態，以此例子來說就是位移到原點，等同於 apply  <code class=\"language-text\">transform:translateX(0)</code>。</p>\n<p>而若觸碰到指定物件，則可以調整 <code class=\"language-text\">x</code> 來將拖移物件直接拉到指定物件，這樣就能製造出<em>吸力</em>的效果。</p>\n<p>此外，在觸碰到物件後的 <code class=\"language-text\">gsap.to</code> 函式中，我們也傳入了 <code class=\"language-text\">onUpdate</code> handler，該 handler 會在動畫完成後被觸發，剛好讓我們能接著下一階段的動畫 - <strong>鎖頭開啟與掉落</strong>。</p>\n<h3 id=\"鎖頭開啟與掉落\" style=\"position:relative;\"><a href=\"#%E9%8E%96%E9%A0%AD%E9%96%8B%E5%95%9F%E8%88%87%E6%8E%89%E8%90%BD\" aria-label=\"鎖頭開啟與掉落 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>鎖頭開啟與掉落</h3>\n<p>當拖移物件觸碰到指定物件時，<code class=\"language-text\">onUpdate</code> 會被觸發：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  tl<span class=\"token punctuation\">.</span><span class=\"token function\">restart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">onUpdate</code> 中我們放的是一個 <a href=\"https://greensock.com/docs/v3/GSAP/Timeline\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Timeline</code> 物件</a>，它能讓我們進行序列動畫，一步步指定各個物件該如何依序執行動畫。</p>\n<p>由於我是將整個 timeline 動畫定義在別處，所以當 <code class=\"language-text\">onUpdate</code> 被觸發時是呼叫 <code class=\"language-text\">tl.restart()</code>，你也可以直接定義在 handler 裡面。</p>\n<p>Timeline 使用方法一樣簡單：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> tl <span class=\"token operator\">=</span> gsap<span class=\"token punctuation\">.</span><span class=\"token function\">timeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> paused<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//create the timeline</span></code></pre></div>\n<p>先創建一個 timeline 物件，這邊傳入 <code class=\"language-text\">{ paused: true }</code> 是因為我希望在之後才觸發他（上述所說，在拖移物件移動到指定區域後才觸發)，所以先預設讓他暫停，這樣我們在 <code class=\"language-text\">onUpdate</code> 時再呼叫 <code class=\"language-text\">restart()</code> 即可。</p>\n<p>題外話，一開始我並不是用 <a href=\"https://greensock.com/docs/v3/GSAP/Timeline\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Timeline</a> 而是在每個 <code class=\"language-text\">gsap.to</code> 的 <code class=\"language-text\">onUpdate</code> 中去呼叫另一個 <code class=\"language-text\">gsap.to</code>，這樣雖然也是可行，但讓程式碼可讀性降低很多，最終我才改成用 <a href=\"https://greensock.com/docs/v3/GSAP/Timeline\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Timeline</a> 來串接序列動畫。</p>\n<p>接著就是針對每個我們想要觸發動畫的 DOM 物件設定欲變化的值：</p>\n<p>先讓整個鎖頭的身體部分往下位移，讓上面鐵環部分保持原地，造出開鎖的效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">tl<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerBody<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  y<span class=\"token operator\">:</span> <span class=\"token string\">\"120%\"</span><span class=\"token punctuation\">,</span>\n  duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/image/button-animation-open-lock.gif\" alt=\"demo\"></p>\n<p>接著利用 <code class=\"language-text\">keyframes</code> 針對單一物件進行一連串較為細緻的動畫，這邊主要是要將整個鎖頭（包含身體與鐵環部分）進行位移與旋轉，營造出鎖頭打開並從鎖上拿掉的動畫：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">tl<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerBody<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...略*/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>locker<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    keyframes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        rotation<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span>\n        x<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n        transformOrigin<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n        y<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"/image/button-animation-drop-locker.gif\" alt=\"demo\"></p>\n<p>接著也是差不多的步驟，一步步對其他的 DOM 物件加上最後的 - <strong>對應開鎖狀態的動畫</strong>，替換掉 <em>UNLOCK</em> 字樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">tl<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerBody<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...略*/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>locker<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...略*/</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>lockerArea<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    rotation<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    duration<span class=\"token operator\">:</span> <span class=\"token number\">0.3</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".message,.drop,.locker-area\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    duration<span class=\"token operator\">:</span> <span class=\"token number\">0.1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">fromTo</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\".read-ok, .unlock-msg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      duration<span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>注意到的是我們除了傳入 DOM object 給 <code class=\"language-text\">gsap.to</code> 與 <code class=\"language-text\">gsap.fromTo</code> 外，也能直接指定 class name，非常方便。</p>\n<p>就這樣簡單幾行程式碼，就做好了一個套用在按鈕上的動畫，應該還算是不錯吧！</p>\n<p class=\"codepen\" data-height=\"369\" data-theme-id=\"29194\" data-default-tab=\"result\" data-user=\"arvin0731\" data-slug-hash=\"dyvvrBb\" style=\"height: 369px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Drag to unlock button with locker (final ver.)\">\n  <span>See the Pen <a href=\"https://codepen.io/arvin0731/pen/dyvvrBb\">\n  Drag to unlock button with locker (final ver.)</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>今天簡單練習了一下從 Dribbble 上找靈感然後用前端技術將動畫實作出來的過程，或許沒有什麼新的東西，但希望能給大家帶來點啟發，防疫期間不妨在家做點有趣的動畫或 CSS art，自娛娛人一下！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://www.tinydesign.co.uk/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ben Evans</a> </li>\n<li><a href=\"https://dribbble.com/ai\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aaron Iker</a></li>\n<li><a href=\"https://greensock.com/docs/v3/GSAP/gsap.to()\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GSAP</a></li>\n<li><a href=\"https://frontend.horse/articles/realistic-art-with-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">frontend.horse</a></li>\n</ol>","id":"e7b1f0f4-81d4-5ddc-9c87-245af6ede978","fields":{"slug":"practice-animation-on-button"},"frontmatter":{"date":"2021-05-22T13:37:30.000Z","title":"練習動畫的好選擇 - 按鈕","tags":["css","gsap","web"],"type":"tech","slug":"practice-animation-on-button"},"timeToRead":9}],"tagName":"gsap","type":"tech"}},"staticQueryHashes":["2123680655"]}