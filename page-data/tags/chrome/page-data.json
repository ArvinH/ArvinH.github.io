{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/chrome","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：Oh Girl","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/IjSHmuEY9OQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Oh Girl</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/IjSHmuEY9OQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>身為工程師，想辦法提高自己的工作效率是一件很重要的事情，<del>畢竟這樣才有多餘的時間打電動</del>，除了平時加強各種知識與累積經驗外，撰寫工具的能力也值得培養。剛好在前不久，公司舉辦了一次內部的 hackday，我就利用這個時間針對公司內部的 framework 寫了一個簡單的 chrome devtools 的 extension，增加開發上的便利性。而在開發的過程中，發現關於 Chrome devtools extension 的文章並不是很多，中文的更少。總之，雖然<a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方文件</a>該有的都有，但跟 vscode extension 的文件比起來就是差了很多，光是排版就讓人不太想閱讀...\n因此希望藉此篇文章介紹開發 chrome devtools extension 的方法與一些注意事項。（註：可能需要先有點 Chrome extension 的相關知識會比較好懂） </p>\n<p>先給大家看其中一個範例（共有兩個），主要是能自動將 DOM 物件的 element inline style 轉化為 <a href=\"https://acss.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atomic CSS</a> 的 class 名稱（<a href=\"https://blog.techbridge.cc/2017/04/29/css-methodology-atomiccss/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">不知道 Atomic CSS 的可以看這篇</a>），如此一來，在 Inspector 中調整完 style 後，就能直接將轉換好的 Atomic CSS 複製貼上到 code 當中，省去一次自己轉換的時間（有時還會忘記 class name...）</p>\n<p><img src=\"/image/devtools-acss-demo.gif\" alt=\"Sidebar Demo\"></p>\n<h1 id=\"chrome-devtools-extension-基本介紹\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9\" aria-label=\"chrome devtools extension 基本介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension 基本介紹</h1>\n<p>有開發過 Chrome extension 的人應該都知道，我們會有所謂的 <code class=\"language-text\">Content Script</code> 與 <code class=\"language-text\">Background page</code> 兩種不同的 context 存在於我們的 extension 中，而 <code class=\"language-text\">Devtools page</code> 也是一個獨立的 context，從下面這張官方圖可以很清楚的看到其之間的差異：</p>\n<p><img src=\"/image/devtools-extension-overview.png\" alt=\"官方圖片\"></p>\n<ul>\n<li>Content Script: 可以存取實際頁面的 DOM 物件與事件。</li>\n<li>Background page: 可以調用多數 extension API，像是 <code class=\"language-text\">chrome.runtime.*</code> 與 <code class=\"language-text\">chrome.tabs.onUpdated</code>，並負責 extension 與 Content script、Devtools page 之間的溝通。</li>\n<li>Devtools page: 可以調用 <code class=\"language-text\">chrome.extensions.*</code> 與 <code class=\"language-text\">chrome.devtools.*</code> Devtools API，其他的就都無法存取。可以透過 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval</code> 能與目前開啟 inspector 的頁面互動。</li>\n</ul>\n<p>與一般 Extension 不同的地方就在於多了 Devtools API 需要了解，而主要的 Devtools API 其實也只有三種：</p>\n<h3 id=\"1-chromedevtoolsinspectedwindow\" style=\"position:relative;\"><a href=\"#1-chromedevtoolsinspectedwindow\" aria-label=\"1 chromedevtoolsinspectedwindow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. chrome.devtools.inspectedWindow</h3>\n<p>透過 <code class=\"language-text\">inspectedWindow.eval</code> 可以在當前開啟 inspector 的頁面 context 執行 javascript：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> Error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// result 為 window.$0.style.cssText</span>\n    <span class=\"token comment\">// 在當前頁面的 context 下支執行結果 </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-chromedevtoolsnetwork\" style=\"position:relative;\"><a href=\"#2-chromedevtoolsnetwork\" aria-label=\"2 chromedevtoolsnetwork permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. chrome.devtools.network</h3>\n<p>network api 可以取得你在 <code class=\"language-text\">Network panel</code> 看到的資訊。\n<img src=\"/image/devtools-networkpanel.png\" alt=\"network panel\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 取得當前開啟 inspector 的頁面所發出的 request 中，bodySize > 40*1024 的 url</span>\nchrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>network<span class=\"token punctuation\">.</span>onRequestFinished<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>bodySize <span class=\"token operator\">></span> <span class=\"token number\">40</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">'console.log(\"Large request: \" + unescape(\"'</span> <span class=\"token operator\">+</span>\n              <span class=\"token function\">escape</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-chromedevtoolspanels\" style=\"position:relative;\"><a href=\"#3-chromedevtoolspanels\" aria-label=\"3 chromedevtoolspanels permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. chrome.devtools.panels</h3>\n<p>panels api 應該是最重要的一塊了，因為我們必須透過它來創建 Panel 或 Sidebar。</p>\n<p><img src=\"/image/devtools-panel&#x26;sidebar.png\" alt=\"panel-sidebar\"></p>\n<p>Chrome devtools 的 extension UI 基本上就是分為上面這兩種類型，與上方 <code class=\"language-text\">Elements</code>、<code class=\"language-text\">Network</code> 和 <code class=\"language-text\">Sources</code> 同 Level 的稱為 Panel，而在每個 Panel 底下還可以另外創建 Sidebar，像是 Elements panel 右邊的 <code class=\"language-text\">style sidebar</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Panel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// code invoked on panel creation</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>看完這些 API 應該也是一頭霧水，也不清楚到底要在哪裡呼叫，別急，接下來會針對這兩種 UI 個別實作一個範例來說明。</p>\n<h1 id=\"chrome-devtools-extension---sidebar-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---sidebar-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   sidebar 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Sidebar 實作</h1>\n<p>開頭的範例中，就是採取 Sidebar 的 UI，屬於 <code class=\"language-text\">ElementPanel</code> 底下的 sidebar。</p>\n<p>接著先看一下我們的檔案結構：</p>\n<img src=\"/image/devtools-foldr-structure.png\" style=\"width:50%;height:50%\">\n<p>很簡單，重點只有三個檔案，ruleMap.js 是跟 Atomic CSS 相關的 mapping 檔案，這邊不需要理會：</p>\n<h3 id=\"1-manifestjson\" style=\"position:relative;\"><a href=\"#1-manifestjson\" aria-label=\"1 manifestjson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. manifest.json</h3>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Atomic CSS Devtool\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtool extension for making Acss users happier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devtools_page\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"devtools.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"manifest_version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>  跟一般 extension 一樣，要在 manifest.json 中做相對應設定，既然是開發 Devtools extension，自然就要註冊 <code class=\"language-text\">devtools_page</code>，指定為 devtools.html，這份 html 就是用來載入相關 js 的入口頁面。</p>\n<h3 id=\"2-devtoolshtml\" style=\"position:relative;\"><a href=\"#2-devtoolshtml\" aria-label=\"2 devtoolshtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. devtools.html</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ruleMap.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>devtools.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>  內容非常簡單，載入整個 devtools extension 需要的 javascript 檔案。如果你在 devtools.js 中有其他需要使用的 lib，也請記得在這個地方進行載入，像是 lodash 等等。\n但若你要載入非本地端的 javascript（透過 cdn 之類），會遇到 CSP(content security policy) 的錯誤，在 <a href=\"#notice\">注意事項</a> 中我會再說明解法。</p>\n<h3 id=\"3-devtoolsjs\" style=\"position:relative;\"><a href=\"#3-devtoolsjs\" aria-label=\"3 devtoolsjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. devtools.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"acss class\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// The function below is executed in the context of the inspected page.</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">page_generateAtomicClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selectedElementCssText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// generate Atomic CSS</span>\n          <span class=\"token comment\">// 略...</span>\n          <span class=\"token keyword\">return</span> styleMap<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acssClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">function</span> <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"window.$0.style.cssText\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> selectedElementCssText <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">const</span> acssClass <span class=\"token operator\">=</span> <span class=\"token function\">page_generateAtomicClass</span><span class=\"token punctuation\">(</span>selectedElementCssText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">updateElementProperties</span><span class=\"token punctuation\">(</span>acssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>\n          elements<span class=\"token punctuation\">.</span>onSelectionChanged<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>getAcssClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getAcssClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>devtool.js 就比較複雜了，所有主要功能都發生在這裡。</p>\n<p>首先，我們利用 <code class=\"language-text\">chrome.devtools.panels.elements.createSidebarPane(sidebarTitle, callbackFunc)</code> 來創建 Sidebar，在 callback 中我們會拿到一個 <code class=\"language-text\">sidebar</code> 物件，此物件是我們與右邊這個 sidebar 區塊互動的媒介，有四種 method 可以使用：</p>\n<ul>\n<li>\n<p>sidebar.setObject()\n我們範例中就是使用 <code class=\"language-text\">setObject()</code> 來將運算完的資料（轉換後的 atomic css classname）傳到 sidebar 顯示，他會將傳入的 Object 展開：</p>\n<p><img src=\"/image/devtools-setobj.png\" alt=\"setObject\"></p>\n</li>\n<li>\n<p>sidebar.setPage() 與 sidebar.setHeight()\n若是覺得光是顯示 JS 的 Object 太單調，你也可以利用 <code class=\"language-text\">setPage()</code> 搭配 <code class=\"language-text\">setHeight()</code> 來在 sidebar 中塞入一個 html。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span>elements<span class=\"token punctuation\">.</span><span class=\"token function\">createSidebarPane</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Atomic Css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sidebar</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sidebar.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setHeight</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"8ex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sidebar.html 中，可以自由繪製畫面，但要注意的是，你是在 sidebar 的 context 中，不能取得當前頁面的 DOM 物件資料，需要的話得透過 background.js 以 <code class=\"language-text\">postMessage</code> 來傳遞，我們最後還會提到。</p>\n</li>\n<li>\n<p>sidebar.setExpression()\n除了 <code class=\"language-text\">setObject</code> 以外，我們也能夠過 <code class=\"language-text\">setExpression</code> 直接 <code class=\"language-text\">eval()</code> js code 到當前的 inspected page。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  sidebar<span class=\"token punctuation\">.</span><span class=\"token function\">setExpression</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> page_generateAtomicClass<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用方法有點特殊，因為是 eval 的方式，你需要把函式 toString() 後再傳入，此外，在傳入的 <code class=\"language-text\">page_generateAtomicClass()</code> 中，你可以取得當前 inspected 頁面的資訊！\n例如：$0 (Chrome devtools 中特殊的變數，等同於 Element panel 中你目前選取的元素 DOM)。\n官方文件中 setExpression 還能傳入一個 callback，但是我怎麼傳都會有 Error 就是了...</p>\n</li>\n</ul>\n<p>接著，我用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval(\"window.$0.style.cssText\", callback);</code> 的方式去取得 selected element 的 css 資訊，接著在 callback 中將其傳給 <code class=\"language-text\">page_generateAtomicClass()</code> 做運算，最後用 <code class=\"language-text\">sidebar.setObject()</code> 將結果輸出。</p>\n<p>等等，你不是說 <code class=\"language-text\">sidebar.setExpression</code> 就能直接取得 <code class=\"language-text\">$0</code> 了嗎？何必多此一舉？</p>\n<p>原因很簡單，因為在 <code class=\"language-text\">setExpression</code> 傳入的 function 中，你取不到 devtools.js 中的 context，所有你在 devtools.html 中 include 的 js 都無法取得，像是我需要用來轉換 Atomic css 的 <code class=\"language-text\">ruleMap.js</code> 就無法拿到，只好採此作法。在實作時需要特別注意 context 的問題！</p>\n<p>最後，我們註冊一個 <code class=\"language-text\">onSelectionChanged</code> 監聽事件 <code class=\"language-text\">chrome.devtools.panels.elements.onSelectionChanged.addListener(getAcssClass);</code>，只要選擇別的 elements 時就重新執行。</p>\n<p>到這邊為止，你就能夠做出如同一開始範例所展現功能的 Devtools extension 了！</p>\n<h1 id=\"chrome-devtools-extension---panel-實作\" style=\"position:relative;\"><a href=\"#chrome-devtools-extension---panel-%E5%AF%A6%E4%BD%9C\" aria-label=\"chrome devtools extension   panel 實作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome devtools extension - Panel 實作</h1>\n<p>這個範例是實作 Panel UI 的 extension，這邊我將功能降之最低，單純抓出目前頁面的 Page title，目的在展示如何將不同 context 的資訊呈現在 Devtools 的 Panel 中。</p>\n<p><img src=\"/image/devtools-panel-demo.gif\" alt=\"Panel Demo\"></p>\n<p>一樣先來看檔案結構：</p>\n<img src=\"/image/devtools-panel-structure.png\" style=\"width:50%;height:50%\">\n<p>可以看到基本上跟前一個範例差不多，只是多了 <code class=\"language-text\">Panel.html</code> 與 <code class=\"language-text\">background.js</code> 兩個檔案。</p>\n<p>另外的差別在於 <code class=\"language-text\">devtools.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isException <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>panels<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Panel Demo\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"logo.png\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"Panel.html\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">panel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// code invoked on panel creation</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>有別於前一個範例我們都將程式邏輯寫在 <code class=\"language-text\">devtools.js</code> 中，這次我們只在這邊進行創建 panel 的程式，可以從上面程式碼中看到，我們創建了一個 Title 叫做 \"Panel Demo\" 的 panel，並告訴 chrome devtool 是要用 <code class=\"language-text\">Panel.html</code> 這份檔案。</p>\n<p>在 <code class=\"language-text\">Panel.html</code> 中，我們載入主要程式邏輯 <code class=\"language-text\">getPageTitle.js</code>，你也可以看到，這邊就是繪製 Panel 的地方，因此可以載入 bootstrap 等 css style 來輔助。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container mt-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getPageTitle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>接著來看主要程式邏輯，<code class=\"language-text\">getPageTitle.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 與 background.js 建立 channel 連結</span>\n  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"Devtools.js Communication\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> inspectedWindowId <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span>tabId<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Listen to messages from the background page</span>\n  port<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>action <span class=\"token operator\">===</span> <span class=\"token string\">\"reloadExtension\"</span> <span class=\"token operator\">&amp;&amp;</span> message<span class=\"token punctuation\">.</span>updatedTabId <span class=\"token operator\">===</span> inspectedWindowId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span>appNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chrome<span class=\"token punctuation\">.</span>devtools<span class=\"token punctuation\">.</span>inspectedWindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"document.title\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> isException</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> appNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> titleWrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n              titleWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              appNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeHTMLChilds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">HTMLNode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          HTMLNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>HTMLNode<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// init</span>\n  <span class=\"token function\">getPageTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我們利用 <code class=\"language-text\">chrome.devtools.inspectedWindow.eval()</code> 來執行 <code class=\"language-text\">document.title</code>，取得 page title 資訊，並利用 <code class=\"language-text\">document.createElement</code> 等原生 Web API 來將資訊呈現在頁面上。</p>\n<p>接著這邊我們用到了 <code class=\"language-text\">port.onMessage.addListener()</code>，原因是我們想要 monitor 頁面的變化，像是 page reload 或是 page update。而這些資訊都只能透過 <code class=\"language-text\">content script</code> 或是 <code class=\"language-text\">Background.js</code> 才能取得，因此我們必須建立一個 messaging 的 channel，讓 <code class=\"language-text\">background.js</code> 告訴我們頁面是否更新了，若更新就重新繪製 <code class=\"language-text\">Panel.html</code> 的內容。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsbackground.js\"><pre class=\"language-jsbackground.js\"><code class=\"language-jsbackground.js\">chrome.runtime.onConnect.addListener(function (port) {\n    chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n        if (changeInfo.status === &#39;complete&#39;) {\n            reloadExtension(port, tabId);\n        }\n    });\n    function reloadExtension(port, tabId) {\n        const message = { action: &quot;reloadExtension&quot;, updatedTabId: tabId };\n        port.postMessage(message);\n    }\n});\n// `background.js` 透過 `chrome.runtime.onConnect.addListener`\n// 在與 devtools page 的 script 連接到後，監聽 `chrome.tabs.onUpdated` 事件，\n// 當 update status 為 complete 後，`postMessage()` 給 `Panel.html` 中的 `getPageTitle.js`。</code></pre></div>\n<p>此外，由於 <code class=\"language-text\">Background.js</code> 存在於整個 Browser 中，因此在 <code class=\"language-text\">getPageTitle.js</code> 中，需要透過 <code class=\"language-text\">const inspectedWindowId = chrome.devtools.inspectedWindow.tabId;</code> 取得當前 inspected page 的 tab id 來過濾其他 tab 的 event change。</p>\n<p>就這樣我們就完成了一個可以取得頁面 Title 的 Devtools extension！雖然功能超廢但要是希望讓大家有個概念，知道要怎麼開始。\n基本上所有程式碼都在這邊了，但如果還是想直接載範例 code 來看的話可以移駕至 github，但只是 demo 用就是了...<a href=\"https://github.com/ArvinH/acss_devtool\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 1</a> <a href=\"https://github.com/ArvinH/chrome-devtools-extension-panelDemo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo 2</a>\n<span id=\"notice\"></span></p>\n<h1 id=\"注意事項\" style=\"position:relative;\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\" aria-label=\"注意事項 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事項</h1>\n<p>在 hackday 開發內部工具時其實踩到不少雷，而在上述的範例中比較難去說明，因此在文章的最後額外與大家分享：</p>\n<ol>\n<li>\n<p>載入外部檔案的方式\n雖然在 <code class=\"language-text\">devtools.html</code> 或 <code class=\"language-text\">Panel.html</code> 中可以載入除了 <code class=\"language-text\">devtools.js</code> 外的檔案，但若是載入的檔案中存有 <code class=\"language-text\">eval()</code> 或著是透過 web 下載的 js，都會出現 CSP(content ecurity policy) 錯誤，而解法是在 <code class=\"language-text\">manifest.json</code> 中加上一行：\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval'; object-src 'self'\"\n這樣就能解決 js 中存有 <code class=\"language-text\">eval()</code> 或是 <code class=\"language-text\">setTimeout()</code> 所造成的 CSP error </p>\n<p>而若要載外部資源，則還要另外將其 domain 也加進去，當作 white list\n\"content<em>security</em>policy\": \"script-src 'self' 'unsafe-eval' <a href=\"https://maps.googleapis.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://maps.googleapis.com/</a>; object-src 'self'\"</p>\n</li>\n<li>chrome.devtools.inspectedWindow.eval 長度限制\n在製作內部工具時，其實是需要從 inspected page 的 context 中取出大量資料到 Panel.html 中進行處理，而透過 <code class=\"language-text\">inspectedWindow.eval</code> 的方式並沒有辦法傳送太大量的 JSON object，因此我是先將其 <code class=\"language-text\">JSON.stringify()</code> 後才往後傳的。 eg. <code class=\"language-text\">chrome.devtools.inspectedWindow.eval( \"JSON.stringify(context.getStore())\"</code>。</li>\n</ol>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>今天透過兩種範例介紹了如何用最主要的 Devtools API 來搭建 Devtools extension，但當然還有許多 API 或是 Event 沒有介紹到，像 panels 就有 <code class=\"language-text\">onShown</code>, <code class=\"language-text\">onHide</code> 等監聽 devtools 是否有開啟的事件可以用，不過很難從一次的範例中全部介紹到，有需要的話還是得去查看官方文件。至少希望能讓大家對於製作增加自己工作效率的工具有一個初步的開始方向，有任何問題也歡迎提出指教！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://developer.chrome.com/extensions/devtools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google offical doc</a></li>\n<li><a href=\"https://div.io/topic/1669\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome Extension CSP 開發小記</a></li>\n<li><a href=\"http://www.360doc.com/content/17/1212/14/26662048_712402137.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome 插件(擴展)全攻略</a></li>\n</ol>","id":"4828b7b5-f26b-5561-8545-bf6db284bc7c","fields":{"slug":"chrome-devtool-extension"},"frontmatter":{"date":"2018-02-10T11:04:27.000Z","title":"Chrome devtools extension 實作介紹","tags":["Chrome","devtools","extension"],"type":"tech","slug":"chrome-devtool-extension"},"timeToRead":11}],"tagName":"Chrome","type":"tech"}},"staticQueryHashes":["2123680655"]}