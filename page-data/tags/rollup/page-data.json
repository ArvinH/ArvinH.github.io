{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/rollup","result":{"pageContext":{"posts":[{"excerpt":"『怎樣都行』\n『只要別讓任何人打敗你』\n--- Daigo Umehara","html":"<blockquote>\n<p>『怎樣都行』\n『只要別讓任何人打敗你』\n--- Daigo Umehara</p>\n</blockquote>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>前陣子 Mozilla 如火如荼地推出他們的量子專案，而其中在介紹 Quantum CSS 架構的時候，用了許多 [可愛的草圖]((<a href=\"https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/</a>) 來解說，讓我突然想到如果能夠將這種手繪風格套用到資料圖表上面，應該會蠻有趣的，也才因此有了這篇文章。</p>\n<p>一般來說，我們不管是用 D3.js 或是 Highcharts 等工具來製作圖表，都是朝向專業、有質感、表達清晰的方向去實作，利用各種顏色搭配與互動操作來讓圖表更漂亮更吸引人。</p>\n<p><img src=\"/image/highchart_demo.png\" alt=\"source: highchart offical site\">\n（來源：highchart offical site）</p>\n<p>但看久了以後總會有點疲乏，加上現代人專注力越來越短暫，利用一些漫畫、草圖的方式來呈現要說明的東西，反而夠容易抓住大家的注意力，像是上述文章的作者 Lin Clark 在 medium 上就有一系列的 <a href=\"https://code-cartoons.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cartoon Intro</a> 的文章。</p>\n<p>但身為前端工程師，手上的工具只有 Javascript、CSS 與 HTML，要怎麼樣 \"手繪\" 圖表呢？</p>\n<p>其實很簡單，利用 D3.js 我們就能做得到！</p>\n<h2 id=\"d3-sketchy\" style=\"position:relative;\"><a href=\"#d3-sketchy\" aria-label=\"d3 sketchy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>d3 sketchy</h2>\n<blockquote>\n<p>“開玩笑的吧？我知道 D3 可以在 Canvas 上繪圖，但 Canvas 用起來還是沒有操作 svg 來得方便，而 svg 畫的長條圖就是四四方方的啊！\"</p>\n</blockquote>\n<p>沒錯我一開始也是這麼想的，但就在某次偶然機會下，拜讀到 <a href=\"https://www.manning.com/books/d3js-in-action-second-edition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">D3 in Action</a> 這本書的作者在 <a href=\"https://github.com/emeeks/d3-sketchy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github 上的 code</a> 後讓我改觀了。</p>\n<p>這篇文章的範例就是修改自他三年前的 code，當時還是 v3 的版本，似乎也沒有將它推上 npm。</p>\n<p>所以順便利用這篇文章記錄並分享一下如何製作出 Sketchy 效果的長條圖，並且包裝成 d3 plugin 來使用！</p>\n<p>先給大家看一下比較圖：</p>\n<p><img src=\"/image/normal_barchart.png\" alt=\"一般的長條圖\"></p>\n<p><img src=\"/image/sketchy_barchart.png\" alt=\"套用 sketchy 效果的長條圖\"></p>\n<p>是不是瞬間活潑很多呢？</p>\n<p>雖然你可能會說這樣喪失了圖表的精準度，但很多時候我們只需要用來強調比較性的結果，這種情況就很適合了。</p>\n<h2 id=\"那到底是如何做到的呢\" style=\"position:relative;\"><a href=\"#%E9%82%A3%E5%88%B0%E5%BA%95%E6%98%AF%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E7%9A%84%E5%91%A2\" aria-label=\"那到底是如何做到的呢 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>那到底是如何做到的呢？</h2>\n<p>稍微仔細觀察上面的兩張圖，你可能會發現，擁有 Sketchy 效果的長條圖，好像少了間距，多了黑色的手繪編框。</p>\n<p>發現到這點以後，答案就呼之欲出了！</p>\n<p>其實所謂 Sketchy 的效果，就只是在原本的長條圖上加入了不規則的黑色邊框線條！</p>\n<p>而這些黑色的邊框其實是利用 <code class=\"language-text\">svg</code> 的 <code class=\"language-text\">path</code> 來繪製的，我們把它拆開來看就很清楚：</p>\n<p data-height=\"419\" data-theme-id=\"29194\" data-slug-hash=\"XeQbPP\" data-default-tab=\"html,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"sketchy-split\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/XeQbPP/\">sketchy-split</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>黑色的手繪風格邊框其實是利用至少九條 <code class=\"language-text\">L</code> 線段繪製出來的，等於是將原本的長方圖用線段包起來，實作上我們只要在原本長條圖的 x, y 位置與寬高上加上一些隨機變動的 offset，就可以做出這樣的效果！原理其實就這麼簡單！</p>\n<p><img src=\"/image/path-d-order.png\" alt=\"pathd\"></p>\n<h2 id=\"知道原理以後來看點-code-吧\" style=\"position:relative;\"><a href=\"#%E7%9F%A5%E9%81%93%E5%8E%9F%E7%90%86%E4%BB%A5%E5%BE%8C%E4%BE%86%E7%9C%8B%E9%BB%9E-code-%E5%90%A7\" aria-label=\"知道原理以後來看點 code 吧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>知道原理以後來看點 code 吧！</h2>\n<p>既然他的實作原理很簡單，我們理當可以將它變成一個 d3 的 plugin，像是其他 d3 v4 的模組一樣，讓其他使用者都能夠透過 npm 或是 script 的方式載入使用。</p>\n<p>而要做成 d3-plugin 的話，在 code 的架構上我們就要稍微注意一下。</p>\n<p>基本上我們希望能沿用一般使用 d3 lib 的語法習慣：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsdemo\"><pre class=\"language-jsdemo\"><code class=\"language-jsdemo\">d3.select(&#39;#svgParent&#39;).selectAll(&quot;g&quot;).data(data)\n    .enter()\n    .append(&quot;g&quot;)\n    .attr(&quot;class&quot;, &quot;bar&quot;);\n\nd3.select(&quot;#svgParent&quot;)\n    .selectAll(&quot;g.bar&quot;)\n    .each(function (d, i) {\n        var x = i * 100 + 20;\n        var y = 500 - hscale(d) / 2;\n        var rw = 100;\n        var rh = hscale(d) / 2;\n        // 1. 我們想將此 plugin 放到 d3 的 global object 內\n        // d3.sketchy 就是我們的 plugin\n        var sketchyBar = d3.sketchy.rect();\n\n        // 2. 我們要能 chaining 函數\n        sketchyBar\n            .height(rh)\n            .width(rw)\n            .x(x)\n            .y(y)\n            .fill(color)\n            .stroke(&quot;black&quot;)\n            .strokeWidth(10)\n            .jostle(5)\n        // 3. 最後我們利用 d3-selection 來幫我們選取 d3 DOM 傳入\n        d3.select(this).call(sketchyBar);\n    })</code></pre></div>\n<p>要達到這種效果，對 Javascript 熟悉的你應該都不困難，我們只要 <code class=\"language-text\">export</code> 一個物件，在其內設定一個會回傳函式的 function，製作出 closure，再實作相對應的 <code class=\"language-text\">setter</code>，並且每一個 <code class=\"language-text\">setter</code> 都回傳 <code class=\"language-text\">this</code> 即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascriptd3-sketchy\"><pre class=\"language-javascriptd3-sketchy\"><code class=\"language-javascriptd3-sketchy\">import { select as d3Select, selectAll as d3SelectAll } from &quot;d3-selection&quot;;\nimport { scaleLinear as d3ScaleLinear } from &quot;d3-scale&quot;;\nimport { line as d3Line, curveLinear as d3CurveLinear } from &quot;d3-shape&quot;;\nlet d3sketchy = {};\n\nd3sketchy.rect = function(selection) {\n\n  let rh = 50, rw = 10, w = 2, c = [0, 0],\n    fillColor = &quot;red&quot;, strokeColor = &quot;black&quot;, jostle = 0;\n\n  function d3_sketchyRect(selection) {\n      // 繪製 sketchy 長條圖的主要函式\n  }\n\n  // 實作各個屬性的 setter\n  d3_sketchyRect.height = function(data) {\n    if (!arguments.length) return rh;\n    rh = data;\n    return this;\n  }\n\n  d3_sketchyRect.width = function(data) {\n    // ... 作法與 height 相同\n  }\n\n  d3_sketchyRect.x = function(data) { /* ... */ }\n\n  d3_sketchyRect.y = function(data) { /* ... */ }\n\n  d3_sketchyRect.fill = function(data) { /* ... */ }\n\n  d3_sketchyRect.jostle = function(data) { /* ... */ }\n\n  // ... 可以再繼續設置你要的函數\n\n  return d3_sketchyRect;\n}\nexport default d3sketchy;</code></pre></div>\n<p>而 export 出去的物件函式執行後所回傳的 function 就是用來接收 d3-selection 傳遞給我們的 d3 DOM，並且繪製 sketchy bar 的函式，相關的 code 大家可以從下面的 codepen 看到，或是到我的 <a href=\"https://github.com/ArvinH/d3-sketchy/blob/master/src/sketchy.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a> 上去看也可以：</p>\n<p data-height=\"360\" data-theme-id=\"29194\" data-slug-hash=\"QqPbEK\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"d3-sketchy demo I\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/arvin0731/pen/QqPbEK/\">d3-sketchy demo I</a> by Arvin (<a href=\"https://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>繪製 sketchy bar 的函式主要做三件事：</p>\n<ol>\n<li>繪製一般的長條圖</li>\n<li>Random 產生一些動態 offset （在 <code class=\"language-text\">d3_sketchyRect</code> 這個函式中可以看到有一段看似複雜的計算，其實就只是對稱的畫出內外框，像是在原理介紹那邊的圖一樣）</li>\n<li>用 Svg path 來繪製手繪邊框</li>\n</ol>\n<h2 id=\"最後來打包-plugin-吧\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%BE%8C%E4%BE%86%E6%89%93%E5%8C%85-plugin-%E5%90%A7\" aria-label=\"最後來打包 plugin 吧 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最後來打包 Plugin 吧！</h2>\n<p>其實要打包一個 lib 有很多方法，但是 D3 的作者在 D3 v4 尚未推出前就有寫了一篇文章介紹要<a href=\"https://bost.ocks.org/mike/d3-plugin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">怎麼樣製作一個 d3 plugin</a>，為了要能盡量共用所有的 d3 plugin，最好大家都是遵照同樣的準則來處理會比較好。</p>\n<p>不過其實也沒什麼準則 XD...主要比較特別的就是 D3 的 plugin 大多是用 rollup 來打包，我猜想是因為當時 webpack 1.x 還沒有加入 tree-shaking 的功能，而針對 plugin 這種小型模組來說，也用不到 webpack 的許多功能，rollup 反而比較適合用來打包 plugin 模組。</p>\n<p>｀</p>\n<p>檔案結構大概就是這樣：</p>\n<p><img src=\"/image/file_structure.png\" alt=\"檔案結構\"></p>\n<p>在你的 <code class=\"language-text\">index.js</code> 中加入：</p>\n<p><code class=\"language-text\">export {default as sketchy} from \"./src/sketchy\";</code></p>\n<p>當作 module 的入口，也方便 require。</p>\n<p>接著在你的 package.json 中加入 script：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonpackage.json\"><pre class=\"language-jsonpackage.json\"><code class=\"language-jsonpackage.json\">&quot;scripts&quot;: {\n    &quot;pretest&quot;: &quot;rm -rf build &amp;&amp; mkdir build &amp;&amp; rollup -c rollup.config.js&quot;,\n    &quot;test&quot;: &quot;tape &#39;test/**/*-test.js&#39;&quot;,\n    &quot;prepublish&quot;: &quot;npm run test &amp;&amp; uglifyjs build/d3-sketchy.js -c -m -o build/d3-sketchy.min.js&quot;,\n    &quot;postpublish&quot;: &quot;zip -j build/d3-sketchy.zip -- LICENSE README.md build/d3-sketchy.js build/d3-sketchy.min.js&quot;\n}</code></pre></div>\n<p>可以看到這邊在 publish 前都會用 uglify.js 來產生 min.js 檔案，如此一來你的 user 就可以選擇要不要下載 minify 過的套件。</p>\n<p>最後就是撰寫你的 <code class=\"language-text\">rollup.config.js</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsrollup.config.js\"><pre class=\"language-jsrollup.config.js\"><code class=\"language-jsrollup.config.js\">import resolve from &#39;rollup-plugin-node-resolve&#39;;\nimport babel from &#39;rollup-plugin-babel&#39;;\n\nexport default {\n    entry: &#39;index.js&#39;,\n    dest: &#39;build/d3-sketchy.js&#39;,\n    format: &#39;umd&#39;, // umd 的格式能透過 CommonJS 或是 AMD 載入\n    moduleName: &#39;d3&#39;, // 設定為 d3 可以將你的 plugin 放入 global.d3 底下\n    sourceMap: true,\n    plugins: [\n        resolve(),\n        babel({\n            exclude: &#39;node_modules/**&#39;\n        })\n    ]\n};</code></pre></div>\n<p>這邊要注意兩件事情。</p>\n<ol>\n<li>rollup 不會幫你打包你從 node<em>modules 裡面 import 進來的檔案，所以如果你有用到其他的 d3 plugin，變成在你的 plugin 說明內要告知使用者，記得載入相依的 plugin。或是你也可以向我這邊一樣，透過 <code class=\"language-text\">rollup-plugin-node-resolve</code> 這個 rollup plugin 來幫我們把 `node</em>modules` 底下的 lib 也打包</li>\n<li>rollup 不會幫你編譯 babel，如果你真的想用 babel，就像我一樣加入 <code class=\"language-text\">rollup-plugin-babel</code> 即可。</li>\n<li>format 記得設為 umd，這樣才能夠在 CommonJS 或 AMD 環境下都能使用。</li>\n<li>最雷的一點在這邊！目前用 rollup 打包 d3 plugin 的話，你需要將 roullup 的版本鎖在 0.41，否則你會發現你編譯出來的 <code class=\"language-text\">build/d3-xxx.js</code> 內的最前面幾行長得像這樣：</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">global<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">typeof</span> define <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'exports'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> factory<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">.</span>d3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">exports</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>有看出什麼問題嗎？</p>\n<p><code class=\"language-text\">factory((global.d3 = {}))</code></p>\n<p>他會將 global.d3 塞入一個空物件，而非先使用原先的 global.d3：<code class=\"language-text\">factory((global.d3 = global.d3 || {}))</code></p>\n<p>如此一來，你如果在載入 plugin 之前先載入其他 d3 plugin，就會發生問題了...</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://d3js.org/d3.v4.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../build/d3-sketchy.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 裡面的 d3 object 會蓋掉上面 d3.v4.js 產生的---></span></code></pre></div>\n<p>可能有其他解法，但看了 d3 的一些 plugin 也是先將版本卡在 0.41。</p>\n<p>當你做完上述工作後，在你的 repo 底下執行 <code class=\"language-text\">npm install</code>，就會產生 <code class=\"language-text\">build</code> folder，裡面含有：</p>\n<ol>\n<li>d3-sketchy.js</li>\n<li>d3-sketchy.min.js</li>\n<li>d3-sketchy.js.map (如果你 rollup.config.js 有設定 sourceMap: true 就會有此檔案)</li>\n</ol>\n<p>如此一來別人就能使用你的 plugin 了：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../build/d3-sketchy.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> sketchyBar <span class=\"token operator\">=</span> d3<span class=\"token punctuation\">.</span>sketchy<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//...</span>\n    <span class=\"token comment\">//..</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>有些時候看似很複雜的東西，其實原理卻非常簡單，只是需要發揮點創意。剛好透過這篇也學習了一下 rollup 的相關設定，雖然我私人猜測 rollup 應該還是會慢慢被 webpack 壓過去，即便 rollup 作者寫了<a href=\"https://medium.com/webpack/webpack-and-rollup-the-same-but-different-a41ad427058c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇文章</a>。\n這篇算是一個小小的筆記，不是太完整，若有任何疑問或建議歡迎留言討論！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/emeeks/d3-sketchy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-sketchy</a></li>\n<li><a href=\"https://bost.ocks.org/mike/d3-plugin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">d3-plugin</a></li>\n<li><a href=\"https://github.com/rollup/rollup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rollup</a></li>\n</ol>","id":"e8539dea-9a05-51d1-a347-bcdb8d3eba5a","fields":{"slug":"d-3-v-4-sketchy-plugin"},"frontmatter":{"date":"2017-10-21T18:16:38.000Z","title":"D3v4 工作坊 - 製作 D3 plugin 來繪製草圖風格長條圖","tags":["d3","plugin","rollup","data visualization"],"type":"tech","slug":"d3v4-sketchy-plugin"},"timeToRead":9}],"tagName":"rollup","type":"tech"}},"staticQueryHashes":["2123680655"]}