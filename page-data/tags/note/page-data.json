{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/note","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：莫宰羊 - 健康快樂","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/SfehQq0wC84\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">莫宰羊 - 健康快樂 </a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/SfehQq0wC84\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<p>去年年底時趁著 Udemy 特價，買了上面很有名的課程 - JavaScript: Understanding the Weird Parts，當初會想買是因為他最後面有個章節是介紹如何建構自己的 JS Framework，\n而我一直都很想有系統性地去瞭解建構一個可供大家使用的 JS library 或是 framework 需要注意哪些事項，該怎麼寫才是安全有彈性的結構。</p>\n<p>大約花了三天的時間斷斷續續把課程上完，這邊紀錄一下該章節的一些筆記，並實做一個小小的 js library 當範例。</p>\n<h3 id=\"goal\" style=\"position:relative;\"><a href=\"#goal\" aria-label=\"goal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Goal</h3>\n<p>目標是建構一個 js library，可以將數字做一些簡化約分，像是我在 <a href=\"http://blog.techbridge.cc/2017/03/04/webcomopnent-practice/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Web Component 實戰</a> 中所實作的 function。\n並讓 user 透過 <code class=\"language-text\">&lt;script src=\"formatNum.js\" /></code> 的方式就能載入使用。</p>\n<p>完整的 code 如下：</p>\n<p><a class=\"jsbin-embed\" href=\"http://jsbin.com/cayelaxewu/embed?js,console\">JS Bin on jsbin.com</a><script src=\"http://static.jsbin.com/js/embed.min.js?3.41.9\"></script></p>\n<h3 id=\"structuring-safe-code\" style=\"position:relative;\"><a href=\"#structuring-safe-code\" aria-label=\"structuring safe code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Structuring Safe Code</h3>\n<p>要建構一個安全的 JS lib，勢必需要保護好自己的 scope 不受外部影響，也不會去影響外部。要做到這件事最簡單的方式就是使用一個 IIFE (Immediately Invoked Function Expression)，</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而我們需要將 lib 能夠 export 到外部供人使用，所以在這個立即執行函式中需要傳入 window 物件，在函式內我們則取名為 global，這樣未來如果想要執行在不同環境，像是 nodejs 裡面時，可以不用更改內部的變數名稱，\n只要修改傳入的 window 變數即可。</p>\n<p>另外最前方可以加上個分號，以免有其他人的 code 沒有用分號做結尾而造成問題，不過這個並不是必須的。</p>\n<p>在這個立即執行函式中的變數除非我們刻意 export 出去，否則都只存在於自己的作用域內，是個安全的結構。</p>\n<p>下方的 <code class=\"language-text\">supportedUnit</code> 與 <code class=\"language-text\">unit</code> 在外部都無法存取，無法透過 <code class=\"language-text\">FormaNum.unit</code> 取得。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// hidden within the scope of the IIFE and never directly accessible</span>\n    <span class=\"token keyword\">const</span> supportedUnit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'normal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'scientific'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        normalUnit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"k\"</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        siUnit<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E18</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"E\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E15</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"P\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E12</span><span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"T\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E9</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"G\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E6</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"M\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">1E3</span><span class=\"token punctuation\">,</span>  symbol<span class=\"token operator\">:</span> <span class=\"token string\">\"k\"</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"object-prototype-and-properties\" style=\"position:relative;\"><a href=\"#object-prototype-and-properties\" aria-label=\"object prototype and properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object, Prototype and Properties</h3>\n<p>接著就是開始實作我們的 lib 內容了，這門課程中，有帶著我們了解 JQuery 的 source code，看看這個偉大的 lib 是如何架構其內部程式，其中很特別的地方在於它 new 一個物件的方式，\n通常我們載入一個別人寫好的物件，或是我們自己寫好了一個物件，要使用的時候會需要透過 <code class=\"language-text\">const objectInstanc = new Object()</code> 的方式來產生物件實例，但為何我們使用 JQuery 的時候都不需要特別使用 new 關鍵字呢？</p>\n<p>因為在 JQuery 中，他透過下面的方式來幫你在每次使用它時自動 new 了一個物件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token comment\">// 'new' an object</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FormatNum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormatNum<span class=\"token punctuation\">.</span>init</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//...</span>\n\n    <span class=\"token comment\">// the actual object is created here, allowing us to 'new' an object without calling 'new'</span>\n    FormatNum<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">init</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num<span class=\"token punctuation\">,</span> digits<span class=\"token punctuation\">,</span> unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span> num <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>digits <span class=\"token operator\">=</span> digits <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        self<span class=\"token punctuation\">.</span>unit <span class=\"token operator\">=</span> unit <span class=\"token operator\">||</span> <span class=\"token string\">'normal'</span><span class=\"token punctuation\">;</span>\n        \n        self<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>這時候你可能會想說，這樣的寫法，不就代表我要加 method 到 prototype 的話，都是要加在 <code class=\"language-text\">FormatNum.init.prototype</code> 了嗎？ 這樣有點奇怪耶，畢竟我的 lib 是叫做 FormatNum呀！</p>\n<p>沒錯，所以我們可以將 FormatNum.init.prototype 在指定到 FormatNum.prototype 上：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    FormatNum<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token class-name\">FormatNum</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span></code></pre></div>\n<p>透過短短這兩個步驟，我們就能夠不需要自己 new object，同時又能直接在 FormatNum 上面設置 prototype method！</p>\n<p>另外，透過在每個 method 的最後 return this，就能讓我們的 function chainable。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// prototype holds methods (to save memory space)</span>\n    <span class=\"token class-name\">FormatNum</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token function-variable function\">validate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">///</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      \n        <span class=\"token function-variable function\">calculate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">unitType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">///</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      \n        <span class=\"token function-variable function\">formatScientific</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'siUnit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token function-variable function\">formatNormal</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'normalUnit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// chainable methods return their own containing object</span>\n        <span class=\"token function-variable function\">format</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">unit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> formattedNum<span class=\"token punctuation\">;</span>\n            \n            <span class=\"token comment\">// if undefined or null it will be coerced to 'false'</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unit <span class=\"token operator\">===</span> <span class=\"token string\">'scientific'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                formattedNum <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatScientific</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                formattedNum <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">formatNormal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>\n          \n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formattedNum <span class=\"token operator\">=</span> formattedNum<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 'this' refers to the calling object at execution time</span>\n            <span class=\"token comment\">// makes the method chainable</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n        <span class=\"token function-variable function\">log</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'formattedNum is: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formattedNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token comment\">// make chainable</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"export-to-outside-world\" style=\"position:relative;\"><a href=\"#export-to-outside-world\" aria-label=\"export to outside world permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export to outside world</h3>\n<p>最後我們只要加上 <code class=\"language-text\">global.FormatNum = global.F$ = FormatNum;</code></p>\n<p>就可以在外部使用 <code class=\"language-text\">FormatNum</code> 或是 <code class=\"language-text\">F$</code> 來呼叫我們的 lib 了！</p>\n<h3 id=\"小問題\" style=\"position:relative;\"><a href=\"#%E5%B0%8F%E5%95%8F%E9%A1%8C\" aria-label=\"小問題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小問題</h3>\n<p>在實作範例時，本來想直接全用 ES6 寫（課程主要都是 ES5），但是在這邊的 function 都不能用 ES6 的 arrow function 取代，<code class=\"language-text\">this</code> 的作用域不同，會造成問題。\n<a href=\"https://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這篇有提到</a>\narrow function 會 binding 到整個 module 的 scope，而非 object。不知道是否有什麼好方法可以解決，等我查到後再來補上。</p>","id":"c2f70c5f-5181-5121-ba39-71a2245daa09","fields":{"slug":"build-own-js-lib"},"frontmatter":{"date":"2017-04-01T15:21:37.000Z","title":"[筆記] JavaScript: Understanding the Weird Parts --- Build your own lib/framework","tags":["javascript","note"],"type":"tech","slug":"build-own-js-lib"},"timeToRead":4}],"tagName":"note","type":"tech"}},"staticQueryHashes":["2123680655"]}