{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/chrome-extension","result":{"pageContext":{"posts":[{"excerpt":"『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』","html":"<blockquote>\n<p>『ETH 好穩誒，應該可以買個買個潛艇 堡來吃了』</p>\n</blockquote>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>還記得約莫是 2012 年我還在唸研究所的時候，有位清大教授（原諒我忘了是哪位...）來系上演講關於類神經網路的應用，當時的我聽得霧煞煞，覺得是離我很遙遠的一門學問，而如今 Machine Learning、Deep Learning 滿天飛，說你沒聽過 KNN 就像說你沒背過 99 乘法表一樣驚人。</p>\n<p>對於一個成天在網頁打滾的前端工程師，可能真的沒太多機會碰觸到相關實作或研究。\n但小心了！AI 的觸角也慢慢伸到前端的領域 - [Screenshot to code in Keras]((<a href=\"https://github.com/emilwallner/Screenshot-to-code-in-Keras\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emilwallner/Screenshot-to-code-in-Keras</a>)，從圖片就能轉成 HTML，以後該怎麼辦啊...</p>\n<p>你可能會想，身處於變化快速的前端領域，我們最擅長的不就是快速學習應對嗎？現在已經有很多 js 版本的機器學習函式庫啦，像是 Keras.js、Deeplearn.js 等等，讓你可以在 browser 上透過 WebGL 的幫助來使用 GPU 做運算。</p>\n<p>但是這些 Library 的宗旨比較是拓展機器學習的應用層面，對於沒接觸過 Deeplearning 的前端工程師來說，要做出 <a href=\"https://teachablemachine.withgoogle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">teachablemachine</a> 這樣的東西，其實沒這麼簡單。</p>\n<p>而今天要介紹的這款 library 就是想提供一個 Higher level 的 js library，降低採用 Machine learning 實作產品的門檻。</p>\n<p>先來看個 Demo：</p>\n<p><img src=\"/image/deeplearnjs-demo.gif\" alt=\"p5ML-Deeplearnjs-demo\"></p>\n<p>Demo 裡是一個簡單的 Chrome extension，透過 WebCam 擷取圖片來分析，利用 <a href=\"https://github.com/PAIR-code/deeplearnjs/tree/master/models/knn_image_classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNN image classifier model</a>，來判斷出不同動作，並對應到網頁上的互動，像是 scroll dow, scroll up 或是修改 DOM 元件（ Demo 中的開關燈效果 ）。主要參考自 <a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a>。</p>\n<p>沒有，我的另一隻手絕對沒有在下面控制滑鼠。</p>\n<p>這一切的實現都是依靠 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 與 <a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a> 的 knn image classifier。</p>\n<h1 id=\"p5ml\" style=\"position:relative;\"><a href=\"#p5ml\" aria-label=\"p5ml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>p5ML</h1>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5ML</a> 還持續在開發中，主要是提供一系列的 API wrapper，讓你能忽略掉一些直接使用 deeplearn.js 需要知道的細節，像是 <code class=\"language-text\">NDArrayMath</code>, <code class=\"language-text\">Scalar</code>, <code class=\"language-text\">Array3D</code> 等 deeplearn 提供的物件。</p>\n<p>使用方式很簡單，直接在 html 中載入：</p>\n<p> <code class=\"language-text\">&lt;script src=\"p5ML.min.js\">&lt;/script></code></p>\n<p> 或是 <code class=\"language-text\">npm install p5ML --save</code> 下載皆可。</p>\n<p><code class=\"language-text\">p5ML.min.js</code> 會 expose 一個 <code class=\"language-text\">p5ml</code> 的全域變數，裡面提供以下幾種目前實作的 Modal 演算法：</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#lstm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM</a></p>\n<ul>\n<li>沒研究過 LSTM 的讀者可以看看這篇介紹，<a href=\"http://x-algo.cn/index.php/2017/03/21/lstm-understanding/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LSTM直觀理解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#imagenet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ImageNet</a> - 目前只支援 SqueezeNet Modal</p>\n<ul>\n<li><a href=\"http://blog.csdn.net/xbinworld/article/details/50897870\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SqueezeNet 模型詳解</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#knn-image-classifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">KNNImage</a></p>\n<ul>\n<li>其中採用了 <a href=\"https://github.com/PAIR-code/deeplearnjs/blob/master/models/knn_image_classifier/knn_image_classifier.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deeplearn.js 的 knn models</a>，寫得很簡潔，又是 Typescript，對於理解這種演算法很有幫助。</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js#neural-network\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NeuralNetwork</a></li>\n</ul>\n<p>除了 Neura Network 外，上述其餘每個 Modal 在 p5ML 的 github 上都有對應的 Demo，以及簡短的使用方式。</p>\n<h1 id=\"實作範例\" style=\"position:relative;\"><a href=\"#%E5%AF%A6%E4%BD%9C%E7%AF%84%E4%BE%8B\" aria-label=\"實作範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>實作範例</h1>\n<p>以剛剛開頭看到的例子來說，我們使用到的是 <strong>KNNImgae</strong> 這個 API：</p>\n<p><code class=\"language-text\">let knn = new p5ml.KNNImageClassifier(callback);</code></p>\n<p>建立出 KNNImageClassifier 的物件 knn 後，我們可以透過 <code class=\"language-text\">knn.addImage(video, index);</code> 來加入 example（video 變數)，並告知其 class 類別（index 變數）。\n當加入的 example 足夠多以後，就能透過 <code class=\"language-text\">knn.predict(input, callback)</code> 來預測 input 是屬於哪種類別：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">knn<span class=\"token punctuation\">.</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>classIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 屬於類別 1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用起來就是這麼簡單。</p>\n<h2 id=\"整合-extension---popupjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---popupjs\" aria-label=\"整合 extension   popupjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - popup.js</h2>\n<p>要整合到 Chrome extension 中的話，需要使用到的是 <code class=\"language-text\">popup.js</code>, <code class=\"language-text\">popup.html</code>, <code class=\"language-text\">content.js</code> 以及 <code class=\"language-text\">option.html</code>。</p>\n<p>疑？為什麼需要 <code class=\"language-text\">option.html</code>？這次的範例應該還用不著需要使用者設定什麼參數吧？</p>\n<p>原因是為了取得使用者的<strong>攝影機權限</strong>。</p>\n<p>一般 Web 上是呼叫 <code class=\"language-text\">navigator.mediaDevices.getUserMedia(options, callback)</code>來取得使用者 WebCam 權限：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> audio<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> video<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webcam not ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>但要讓 Chrome extension 也拿到權限的話，你的這段程式碼，必須放置在由 extension 本身開啟的 html 內才可以，<code class=\"language-text\">popup.html</code> 不算。\n因此，利用設置頁面 <code class=\"language-text\">option.html</code> 是最為適合的，只要在你的 <code class=\"language-text\">manifest.json</code> 中設定：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsonmanifest.json\"><pre class=\"language-jsonmanifest.json\"><code class=\"language-jsonmanifest.json\">&quot;options_ui&quot;: {\n    &quot;page&quot;: &quot;options.html&quot;,\n    &quot;chrome_style&quot;: true,\n    &quot;open_in_tab&quot;: true\n}</code></pre></div>\n<p>之後就能透過開啟 Extension 的設定頁面，來徵求使用者的攝影權限。</p>\n<img src=\"/image/extension-option.png\" style=\"width: 300px;height:200px\">\n<p>取得權限後，在我們的 <code class=\"language-text\">popup.html</code> 中要繪製一些頁面元件，以供之後我們在前端進行 Image 的分類：</p>\n<div class=\"gatsby-highlight\" data-language=\"popup.html\"><pre class=\"language-popup.html\"><code class=\"language-popup.html\">&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;video crossorigin=&quot;anonymous&quot; width=&quot;227&quot; height=&quot;227&quot; id=&quot;video&quot;&gt;&lt;/video&gt;\n  &lt;button id=&quot;still&quot;&gt;Do nothing&lt;/button&gt;\n  &lt;button id=&quot;up&quot;&gt;Up&lt;/button&gt;\n  &lt;button id=&quot;down&quot;&gt;Down&lt;/button&gt;\n  &lt;button id=&quot;turnoff&quot;&gt;Turn Off Light&lt;/button&gt;\n  &lt;script src=&quot;scripts/p5ml.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;scripts/popup.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>popup.js 中則是放入最主要的 knn 相關程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"jspopup.js\"><pre class=\"language-jspopup.js\"><code class=\"language-jspopup.js\">let knn = new p5ml.KNNImageClassifier(modelLoaded);\nlet turnoffButton = document.getElementById(&#39;turnoff&#39;);\n// turnoffButton\nturnoffButton.addEventListener(&#39;click&#39;, function () {\n    knn.addImage(video, 4);\n    times++;\n})\nsetInterval(function() {\n    if (times &gt; 10) {\n        knn.predict(video, function(data) {\n            if (data.classIndex == 1) {\n                console.log(&#39;response&#39;, &#39;still&#39;);\n            } else if (data.classIndex == 2) {\n                // ...\n            } else if (data.classIndex == 3) {\n                // ...\n            } else if (data.classIndex == 4) {\n                chrome.runtime.sendMessage({ direction: &quot;turn off&quot; }, function (response) {\n                console.log(&#39;response&#39;, &#39;turn off&#39;);\n                });\n            }\n        });\n    }\n}, 1500);</code></pre></div>\n<p>Line 1 我們初始化 <code class=\"language-text\">p5ml.KNNImageClassifier</code> 物件 <code class=\"language-text\">knn</code>，接著在 <code class=\"language-text\">turnoffButton</code> 按下時加入範例 <code class=\"language-text\">knn.addImage(video, 4)</code>，並設定該範例類別為 4。</p>\n<p>接著在 Line 8 開始，利用 <code class=\"language-text\">setInterval()</code> 不斷的進行 <code class=\"language-text\">knn.predict()</code>，這樣就能盡量即時分辨 WebCam 傳來的資料。</p>\n<p>其他部分，像是如何讓 WebCam 的影像顯示在 <code class=\"language-text\">&lt;video></code> tag 中的程式碼也是在 <code class=\"language-text\">popup.js</code> 中實作。</p>\n<p>完整 popup.js 程式碼可以看 <a href=\"https://gist.github.com/ArvinH/f10ea345904d09f51aebb3f1e34e95e5\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這裏</a> 或是<a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension/blob/master/scripts/popup.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">原作者的</a></p>\n<p>實作到這裡以後，基本上你就可以開啟 Extension 然後進行一些影片的分類，像是這樣：</p>\n<p><img src=\"/image/deeplearn-demo-2.gif\" alt=\"教育你的 extension\"></p>\n<p>可以從上面的片段發現，你需要點擊對應分類的按鈕，並且做出你想要的動作來教導你的 extension，讓他認得你的手勢！\n當你給予的 example 越多，就愈有機會判斷得更好。</p>\n<h2 id=\"整合-extension---contentjs\" style=\"position:relative;\"><a href=\"#%E6%95%B4%E5%90%88-extension---contentjs\" aria-label=\"整合 extension   contentjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>整合 Extension - content.js</h2>\n<p>這邊假定大家都知道 Extension 的實作方式（如果不知道可以從<a href=\"https://developer.chrome.com/extensions/overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>學習）。</p>\n<p>在 Extension 中，可以透過 <code class=\"language-text\">chrome.runtime.sendMessage()</code> 與 <code class=\"language-text\">chrome.runtime.onMessage.addListener()</code> 來針對 Popup page 與 當前頁面的 content script 進行溝通，我們就是利用這點來將辨識完的手勢，轉換成頁面上的互動操作：</p>\n<div class=\"gatsby-highlight\" data-language=\"jscontent.js\"><pre class=\"language-jscontent.js\"><code class=\"language-jscontent.js\">chrome.runtime.onMessage.addListener(gotMessage)\nfunction gotMessage(message, sender, sendResponse){\n  let direction = 0;\n  if(message.direction == &#39;up&#39;){\n    direction = -500;\n  } else if(message.direction == &#39;down&#39;){\n    direction = +500;\n  } else if (message.direction == &#39;turn off&#39;) {\n    const mask = document.getElementById(&#39;body-maskDiv&#39;);\n    if (mask) {\n      removeMask();\n    } else {\n      addMask();\n    }\n  }\n  window.scrollBy({ \n    top: direction,\n    left: 0, \n    behavior: &#39;smooth&#39; \n  });\n}</code></pre></div>\n<p>到這邊為止基本上就完成了範例的所有功能，對完整程式碼（或是遮罩實作方式 XD）有興趣的人可以從<a href=\"https://gist.github.com/ArvinH/96fa770dcd007c02a69f31676020cbe6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">這邊</a>取得。</p>\n<h1 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h1>\n<p>這次算是初步嘗試在前端上應用 ML 相關的功能，介紹大家有像是 <a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a> 這樣有趣的 library 可以使用，希望可以有多一點的前端高手來發揮創意，並分享作品出來，不然真的很難找到相關的經驗分享。\n不過當然，這只是個非常粗淺的應用，更是用非常 High level 的 API 來實作，還是需要真正去了解 ML 相關的演算法，才是比較正確的學習方向，接下來我也會繼續學習，p5-deeplearn-js 會是一個不錯的起點，加上 deeplearn.js 的 KNN 演算法程式碼都算蠻簡潔的，以 Typescript 實作，閱讀起來比起純 JS 好理解一些（多了 Type 很有幫助啊！），推薦給各位！</p>\n<!-- 資料來源 -->\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://github.com/ITPNYU/p5-deeplearn-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">p5-deeplearn-js</a></li>\n<li><a href=\"https://github.com/cvalenzuela/deeplearn-chrome_extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearn-chrome_extension</a></li>\n<li><a href=\"https://github.com/PAIR-code/deeplearnjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deeplearnjs</a></li>\n</ol>","id":"027bada1-0bee-5863-a87d-42bbd8690b73","fields":{"slug":"p-5-ml-deeplearnjs"},"frontmatter":{"date":"2018-01-13T16:30:21.000Z","title":"前端也能玩 Deepleaning - 以 p5-deeplearn-js 為例","tags":["deeplearning","deeplearnjs","p5ML","chrome extension"],"type":"tech","slug":"p5ML-deeplearnjs"},"timeToRead":8}],"tagName":"chrome extension","type":"tech"}},"staticQueryHashes":["2123680655"]}