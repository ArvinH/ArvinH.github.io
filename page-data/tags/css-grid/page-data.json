{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/css-grid","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：Ruby duby feat.Ruby","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/o5S-K5G9VO8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ruby duby feat.Ruby</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/o5S-K5G9VO8\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>建構網頁佈局是製作網站的基本動作之一，隨著設計多樣性與功能複雜度的提升，開發者必須利用 <code class=\"language-text\">table</code>, <code class=\"language-text\">inline</code>, <code class=\"language-text\">float</code>, <code class=\"language-text\">clear</code>, 或是 <code class=\"language-text\">positioning</code> 等方式來 hack 頁面配置，但不管是哪種方式都各自有其缺乏的功能，也因此催生出許多 CSS Framework 提供的 Grid System 來加速佈局開發。</p>\n<p>幾年前出現的 <code class=\"language-text\">FlexBox</code> 宛如神兵利器，讓我們可以擺脫這些困擾，快速進行排版，而隨著 <code class=\"language-text\">CSS Grid</code> 規範的出現，我們即將有更好的武器了！</p>\n<p><code class=\"language-text\">CSS Grid</code> 不是要來取代 <code class=\"language-text\">Flexbox</code>，他們是相輔相成的角色，<code class=\"language-text\">flex</code> 可以看作是 <code class=\"language-text\">one-dimensional layout solution</code>，<code class=\"language-text\">CSS Grid</code> 則是 <code class=\"language-text\">two-dimentional layout solution</code>，用來解決我們所有先前需要各種 hack 才能完成的頁面佈局。</p>\n<p>不過可惜的是，<code class=\"language-text\">CSS Grid</code> 還在 <a href=\"https://www.w3.org/TR/css-grid-1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">W3C working draft</a> 中，並且直到 2017 的今天，還是有些人使用不支援 <code class=\"language-text\">flex</code> 的舊瀏覽器...</p>\n<img src=\"/image/caniuse-grid.png\" alt=\"Can I use Css grid\" style=\"width: 500px;\"/>\n<p>從<a href=\"http://caniuse.com/#search=grid\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">上圖</a>可以得知，Chrome 跟 Firefox 的下一個版本都會預設支援 <code class=\"language-text\">CSS Grid</code>，而 IE/Edge 目前則是支援舊版本的規格實作的。如果想要先嚐鮮，可以直接下載 <a href=\"https://www.google.com/chrome/browser/canary.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome Canary</a>, <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firefox Nightly</a> 來使用，或是開啟目前版本的實驗功能：</p>\n<ul>\n<li>Chrome: <code class=\"language-text\">chrome://flags</code> -> 啟用 <code class=\"language-text\">experimental Web Platform features</code></li>\n<li>Firefox: <code class=\"language-text\">about:config</code> -> 啟用 <code class=\"language-text\">layout.css.grid.enabled</code></li>\n</ul>\n<p>當然也有 <a href=\"https://github.com/FremyCompany/css-grid-polyfill/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Polyfill</a> 可以使用。</p>\n<p>雖然生不逢時，但這一切都是過程，活著不難，最難的是做人...啊啊蛋堡的歌真好聽</p>\n<p>這篇文章主要是介紹 <code class=\"language-text\">CSS Grid</code> 的用法，並為我自己做個學習紀錄，畢竟網路上已經有許多關於 <code class=\"language-text\">CSS Grid</code> 的資源，我也條列了一些在文章最下方，懶得看我廢言的讀者可以自行參考！</p>\n<h2 id=\"css-grid-layout\" style=\"position:relative;\"><a href=\"#css-grid-layout\" aria-label=\"css grid layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Grid Layout</h2>\n<p>以往我們在進行頁面切版佈局的時候，即便是使用 <code class=\"language-text\">flexbox</code>，由於他是 <code class=\"language-text\">one-dimensional layout</code>，我們排版的方式無非就是從上往下排，或是由左到右等方向性來把各種 <code class=\"language-text\">one-dimensional layout</code> 組合成我們要的 <code class=\"language-text\">two-dimensional layout</code>。</p>\n<p>而 <code class=\"language-text\">CSS Grid</code> 不同的地方就在於，他讓我們先定義好一個 <code class=\"language-text\">container</code> 就夠了，一個 <code class=\"language-text\">container</code> 來設定好所有底下元件<strong>可以擺放的位置</strong>。</p>\n<p>什麼是<strong>“可以擺放的位置“</strong>呢？先跳過實作過程與這些屬性值的意思，以下面這張結果圖來解釋一下，你設定好 <code class=\"language-text\">CSS Grid</code> 的 container 後，該 container 會長成這副德性：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 100px 10px 0.3fr 0.7fr<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> 25% 100px auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"/image/grid-container.png\" alt=\"Grid Container\" style=\"width: 300px;\"/>\n<p>然後你就只要把 <code class=\"language-text\">container</code> 內的元素，一一定義好各自的 CSS 屬性，來決定他們要擺在這圖中的哪個空格內即可。\n只要兩行 css，一個 div 就排好了，是不是很讓人興奮啊啊啊！</p>\n<p>好的，接下來認真說明 CSS Grid 的其他基本用法。</p>\n<h2 id=\"css-grid-terminology\" style=\"position:relative;\"><a href=\"#css-grid-terminology\" aria-label=\"css grid terminology permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Grid Terminology</h2>\n<p>再開始嘗試實作之前，我們先來了解並記憶一下相關的術語。</p>\n<ul>\n<li>Grid Line: 分隔元素的線，可以是垂直與水平，如下圖的紅色線</li>\n<li>Grid Track: 兩條分隔線中間的區域，簡單想就是 Grid 中的 Columns 或 Rows，如下圖的綠色區塊</li>\n<li>Grid Cell: Grid 中的基本單位，四條線組成的區域，如下圖的藍色區塊。</li>\n<li>Grid Area: 由數個 Cell 組成的區域，如下圖的紅色區塊。</li>\n<li>fr: track-size 的單位，通常用於分配 row 或 column 的非彈性尺寸設定完後之剩餘空間。以下圖的 column為例，意思即：將去掉 100px 與 10px 後的剩餘空間，分配為 30% 與 70%。</li>\n</ul>\n<img src=\"/image/grid-term.png\" alt=\"Grid Terminology\" style=\"width: 300px;\"/>\n<h2 id=\"simple-css-grid-example\" style=\"position:relative;\"><a href=\"#simple-css-grid-example\" aria-label=\"simple css grid example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple CSS Grid Example</h2>\n<p>接著我們把上面的圖片，用 CSS Grid 來 layout 出來。</p>\n<p>CSS Grid 的 properties 可以切成兩大塊，一塊是給 Parent 的，也就是 <code class=\"language-text\">Grid Container</code>，另一塊給 Children，<code class=\"language-text\">Grid items</code>。</p>\n<p>詳細的 properties 介紹可以看這篇 <a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Complete Guide Grid</a>\n（ 強力推薦閱讀，各種圖片文字輔以 css 說明，完全可以直接左轉出去看這篇就好 XD ）</p>\n<p>要使用 CSS Grid 就必須先定義好 Grid Container：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-item item-a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Tack<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-item item-b<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Cell<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-item item-c<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Area<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>在 grid container 底下的 children 是沒有順序差別的，我們都可以透過定義 grid items 的 properties 來設定他的擺放位置。當然，如果你沒有設定的話，就會照順序放置，如果該列放不下就會自動放到下一行。</p>\n<p>但基本上不會這麼做，畢竟我們就是想要能好好掌控位置啊！</p>\n<p>Grid Container 的 css 可以用下面兩種方式來寫，<code class=\"language-text\">grid-template-columns</code> 用來定義這個 Grid 有幾個 columns，每個 column 可以有多少寬度；換而言之，<code class=\"language-text\">grid-template-rows</code> 就是用來定義 row 的屬性。</p>\n<p><code class=\"language-text\">grid-template-columns</code> 和 <code class=\"language-text\">grid-template-rows</code> 有兩個主要 Values 可以設定：</p>\n<ul>\n<li>track-size：可以是任何長度(px)、百分比(%)或是先前提到的 <code class=\"language-text\">fr</code></li>\n<li>line-name：組成 column 與 row 的線的名字</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> &lt;track-size> ... | &lt;line-name> &lt;track-size> ...<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> &lt;track-size> ... | &lt;line-name> &lt;track-size> ...<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>也就是說，你可以用純數字的方式來給予屬性質：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.grid-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 100px 10px 0.3fr 0.7fr<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> 25% 100px auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>也可以安插 <code class=\"language-text\">Grid Line</code> 的名字在屬性值的設定中，這個名字在後續我們要安置 children 時可以用到！\n[Note] 要注意，因為是定義 <strong>線</strong> 的名字，所以最後一個數字的後面也可以定義名字喔！</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.grid-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> [line1] 100px [line2] 10px [line3] 0.3fr [line4] 0.7fr [end]<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> [row-1-start] 25% [row-2-start] 100px [row-3-start] auto [row-end]<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>這樣我們就定義好需要的 Grid Container 了。</p>\n<p>接著，我們說明一下如何將前面的圖片中的 ** Area ** 這個 <code class=\"language-text\">Grid Item</code> 放到我們剛剛定義好的 Grid Container 中，因為他的位置比較特殊，在右下角的位置，較好展現 CSS Grid 方便之處。</p>\n<p><code class=\"language-text\">Grid Item</code> 的屬性基本上就是四個：<code class=\"language-text\">grid-column-start</code>, <code class=\"language-text\">grid-column-end</code>, <code class=\"language-text\">grid-row-start</code> 和 <code class=\"language-text\">grid-row-end</code>，你也可以簡化成兩個：<code class=\"language-text\">grid-column</code> 與 <code class=\"language-text\">grid-row</code>。</p>\n<p><code class=\"language-text\">grid-column-start</code>, <code class=\"language-text\">grid-column-end</code>, <code class=\"language-text\">grid-row-start</code> 和 <code class=\"language-text\">grid-row-end</code> 可以有四種 Values 設定：</p>\n<ul>\n<li>line： 對照到 Grid Container 中定義的線，可以是數字或名字。</li>\n<li>span [number]：該 item 會橫跨 [number] 個 tracks。</li>\n<li>span [name]：該 item 會橫跨到名字是 [name] 的線為止。</li>\n<li>auto：自動放置，類等於 span 1。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item-area</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #C57474<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-column-start</span><span class=\"token punctuation\">:</span> line2<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-column-end</span><span class=\"token punctuation\">:</span> end<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row-start</span><span class=\"token punctuation\">:</span> row-3-start<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row-end</span><span class=\"token punctuation\">:</span> row-end<span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>若只用兩個屬性，中間以 / 隔開：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item-area</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #C57474<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> line2 / end<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> row-3-start / row-end<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>以此類推，完成的範例如下：</p>\n<p data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"ZLodmz\" data-default-tab=\"css,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"CSS-Grid-Sample\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/ZLodmz/\">CSS-Grid-Sample</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<h2 id=\"another-css-grid-example\" style=\"position:relative;\"><a href=\"#another-css-grid-example\" aria-label=\"another css grid example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Another CSS Grid Example</h2>\n<p>Container 不只有上面的寫法，還有一個叫做 <code class=\"language-text\">grid-template-areas</code> 的東西，搭配 Grid-Item 的 <code class=\"language-text\">grid-area</code> 可以有更簡單的寫法來進行排版。</p>\n<p>我們這邊換個例子，以一般網頁較常見的配置來說明：</p>\n<p data-height=\"423\" data-theme-id=\"0\" data-slug-hash=\"xgjvRr\" data-default-tab=\"result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"CSS-Grid-Sample-Area\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/xgjvRr/\">CSS-Grid-Sample-Area</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>用了 <code class=\"language-text\">grid-template-areas</code> 後，在 container 的 css 中，我們可以直接定義每個元素的位置：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.grid-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 0.25fr 0.25fr 0.25fr 0.25fr<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-areas</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"header header header header\"</span>\n                       <span class=\"token string\">\"main main . sidebar\"</span>\n                       <span class=\"token string\">\"footer footer footer footer\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-column-gap</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row-gap</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>裡面的 <code class=\"language-text\">header</code>, <code class=\"language-text\">main</code>, <code class=\"language-text\">sidebar</code> 與 <code class=\"language-text\">footer</code> 就是在 Grid-Item 中我們要指定的名稱：</p>\n<p><code class=\"language-text\">grid-template-areas</code> 的每一行定義了 Grid-Item 內容：</p>\n<ul>\n<li>第一行代表：header 要佔據四行。</li>\n<li>第二行代表：main 佔兩行，而 sidebar 佔一行，其中 <code class=\"language-text\">·</code> 類似 placeholder 的作用。</li>\n<li>第三行代表：footer 佔四行。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.header</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #8BC574<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #748CC5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> main<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.sidebar</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #C57474<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> sidebar<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.footer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #FCE052<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> footer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>此外，<code class=\"language-text\">grid-column-gap</code> 與 <code class=\"language-text\">grid-row-gap</code> 可用來設定行距。</p>\n<h2 id=\"one-more-thing\" style=\"position:relative;\"><a href=\"#one-more-thing\" aria-label=\"one more thing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>One more thing</h2>\n<p>除了上述的基本屬性運用外，最前面有說過 CSS Grid 跟 Flex 是相輔相成，而實際上他們可以調配的屬性也有類似的地方。</p>\n<p>Grid Container 可以用 <code class=\"language-text\">justify-items</code> 與 <code class=\"language-text\">align-items</code> 來控制每個 Grid-item 的 <strong>垂直</strong> 與 <strong>水平</strong> 位置。</p>\n<p>Grid Item 則是可以用 <code class=\"language-text\">justify-self</code> 與 <code class=\"language-text\">align-self</code> 來控制自己在網格中的位置。</p>\n<p>像這個範例中的 Sidebar</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"NdMQXK\" data-default-tab=\"css,result\" data-user=\"arvin0731\" data-embed-version=\"2\" data-pen-title=\"CSS-Grid-Sample-align\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/arvin0731/pen/NdMQXK/\">CSS-Grid-Sample-align</a> by Arvin (<a href=\"http://codepen.io/arvin0731\">@arvin0731</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n<p>歡迎大家參考這幾個個超詳細圖解說明：</p>\n<p><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-items\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Complete guide grid - justify-items</a>\n<a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-items\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Complete guide grid - align-items</a>\n<a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Complete guide grid - justify-self</a>\n<a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Complete guide grid - align-self</a></p>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>用幾個簡單的範例來學習並介紹 CSS Grid，但還是希望大家都能直接去 Codepen 上玩玩看 CSS Grid，一定都會被其方便性給驚豔到！\n前端發展雖然百家爭鳴，但是很多基本的規範如果能越來越統一越來越強大，開發者就更能省去各種 hacking 的時間，用來創造更多有創意又有美感的作品！</p>\n<p>最後再推薦一個網站 <a href=\"http://gridbyexample.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Grid by Example</a>，裡面用許多範例來進行教學，頁面也很清楚乾淨。\n有任何問題都歡迎大家指教！\t</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">A Complete Guide to Grid</a></li>\n<li><a href=\"http://chris.house/blog/a-complete-guide-css-grid-layout/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chris House Guide to Grid</a></li>\n<li><a href=\"http://andyyou.github.io/2016/05/04/css-grid/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS Grid 介紹</a></li>\n<li><a href=\"http://gridbyexample.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Grid by Example</a></li>\n<li><a href=\"https://github.com/FremyCompany/css-grid-polyfill/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css-grid-polyfill</a></li>\n</ol>","id":"3b87b3f0-ee42-5e87-b24d-7d0f2e207bb8","fields":{"slug":"css-grid"},"frontmatter":{"date":"2017-02-03T23:44:37.000Z","title":"與 CSS Grid 的第一次接觸","tags":["css","css-grid"],"type":"tech","slug":"css-grid"},"timeToRead":9}],"tagName":"css-grid","type":"tech"}},"staticQueryHashes":["2123680655"]}