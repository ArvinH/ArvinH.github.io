{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/pebble","result":{"pageContext":{"posts":[{"excerpt":"『欸你看！Pebble watch 可以自己做錶面耶，超酷！』\n「Apple watch 也可以啊」\n『你這樣我怎麼教育下一代！』\n「...」","html":"<blockquote>\n<p>『欸你看！Pebble watch 可以自己做錶面耶，超酷！』\n「Apple watch 也可以啊」\n『你這樣我怎麼教育下一代！』\n「...」</p>\n</blockquote>\n<!-- more -->\n<p>是的，我「最近」買了一隻 Pebble 2，大概是半年多前的事情...當初看上他便宜信譽好，又可以用 javascript 撰寫自己的 watch face，所以就刷下去了，算是第一次在 kickstarter 上面贊助產品，等待的時間久到我都快忘了....才怪，我大概每個月都會想起來一次 XD</p>\n<p>總之，經過幾個月漫長等待，以及網站上跟我一樣想趕快拿到產品的 baker 們不斷地詢問下，終於還是送到我手上了！</p>\n<p>Tada ~!\n<img alt=\"Pebble 2\" style=\"width: 500px; height: 500px; object-fit: cover\" src=\"/image/pebble.jpg\" /></p>\n<p>...不對這篇不是開箱文</p>\n<p>我今天要來簡介一下如何用 Pebble 提供的 Rocky.js Javascript API 來開發 Pebble watchface，讓你可以安裝到自己的手錶上！</p>\n<h1 id=\"build-your-very-first-pebble-watchface\" style=\"position:relative;\"><a href=\"#build-your-very-first-pebble-watchface\" aria-label=\"build your very first pebble watchface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build your very first pebble watchface</h1>\n<p><a href=\"https://developer.pebble.com/tutorials/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pebble 的官網</a>內容蠻豐富的，從簡單的教學、API Doc 到使用者論壇與 blog 都有。</p>\n<img alt=\"Pebble developer site\" style=\"object-fit: cover\" src=\"/image/pebble-officialsite.png\" />\n<p>Pebble 上頭的 app 基本上都是以 C 語言撰寫為主，而距離我上次寫 C 大約是臉書還沒在台灣出現的時代...不過沒關係，Pebble 沒有捨棄 Javascript 這個強大的語言，我們還能利用 Javascript API 與 官方出的 Rocky.js 來撰寫 Pebble watchface！\n(只是目前不支援 ES6)</p>\n<p>然而，工欲善其事，必先利其器，開發 iOS 我們會想到 Xcode，開發 Android 我們有 Andriod studio，開發 Pebble 呢？</p>\n<h2 id=\"ide---cloudpebble\" style=\"position:relative;\"><a href=\"#ide---cloudpebble\" aria-label=\"ide   cloudpebble permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IDE - <a href=\"https://cloudpebble.net\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cloudpebble</a></h2>\n<img alt=\"Pebble Cloud IDE\" style=\"object-fit: cover\" src=\"/image/cloudpebble-index.png\" />\n<p>雖然你也可以透過 command line 去編譯 Pebble 的程式，但我還是要推薦跟介紹他們的雲端 IDE，因為整合得蠻好的，只要以 Pebble 的帳號登入（一開始設定你的手錶時就會要求你註冊），就可以無痛連接你的手機與 Pebble watch。即便開發體驗上面還有許多可以加強的部分，但是已經是非常方便的工具了，而且還有中文！</p>\n<h2 id=\"start-a-new-project\" style=\"position:relative;\"><a href=\"#start-a-new-project\" aria-label=\"start a new project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Start a new project</h2>\n<img alt=\"login\" style=\"object-fit: cover\" src=\"/image/cloudpebble-buildproject.png\" />\n<p>當你登入後可以看到很簡單的介面，列出目前擁有的專案，按下建立按鈕來新增。</p>\n<img alt=\"Create New Project\" style=\"object-fit: cover\" src=\"/image/cloudpebble-create.png\" />\n<p>這邊你會看到好幾種選項，<code class=\"language-text\">Pebble C SDK</code> 應該可以算是最主要的開發工具，可以寫 watchface 也可以寫 app，而 <code class=\"language-text\">Pebble.js</code> 似乎是較為舊版的 javascript SDK，我們今天要介紹的 <code class=\"language-text\">Rocky.js</code>也還在持續更新中。</p>\n<p>選了 <code class=\"language-text\">Rocky.js</code> 後，就可以開始進行我們今天的開發了！</p>\n<p>先給大家看一下開發完成後，從 IDE 上的模擬器看起來會長什麼樣子。</p>\n<img alt=\"Final result\" style=\"object-fit: cover\" src=\"/image/cloudpebble-result.png\" />\n<p>左邊大大秀出時間，右上角顯示星期幾，右下角則是股票資訊。</p>\n<h2 id=\"something-you-should-know-before-you-start-to-code\" style=\"position:relative;\"><a href=\"#something-you-should-know-before-you-start-to-code\" aria-label=\"something you should know before you start to code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Something you should know before you start to code</h2>\n<p>Pebble watchface 的 js 開發大致上分為兩塊：Rocky JS 與 PebbleKit JS</p>\n<p>Rocky JS 負責<strong>手錶端</strong>的程式，包含 UI 繪製以及與手機端的溝通。</p>\n<p>PebbleKit JS 我們先前並沒有提到，他是運行在<strong>手機端</strong>的程式，會安裝在你手機的 Pebble app 內，主要負責與其他 Web Service 溝通，並將訊息傳給手錶作畫面上的顯示與更新。</p>\n<p>基本上兩者都是 Javascript，只是多了 Pebble 提供的 API。</p>\n<h2 id=\"coding-time\" style=\"position:relative;\"><a href=\"#coding-time\" aria-label=\"coding time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Coding Time!</h2>\n<p>IDE 左邊的列表中有許多選項，我們會先需要新增一個 index.js，按下 <code class=\"language-text\">ADD NEW</code> button</p>\n<img alt=\"Add new resource\" style=\"object-fit: cover\" src=\"/image/cloudpebble-addnew.png\" />\n<p>有三種類型的 javascript 檔案可以選擇，我們先開發 Rocky.js，繪製基本的時間出來。</p>\n<p>先 include <code class=\"language-text\">rocky.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> rocky <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rocky'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>RockyJS 的 API 很簡單，主要是一種 Event-based 的感覺，我們可以透過註冊一個 <code class=\"language-text\">minutechange</code> 的 event 來監聽 <strong>分鐘</strong> 的變化。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">rocky<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minutechange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Request the screen to be redrawn on next pass</span>\n  rocky<span class=\"token punctuation\">.</span><span class=\"token function\">requestDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>每分鐘我們都呼叫一次 <code class=\"language-text\">rocky.requestDraw()</code>，透過這個 function 我們可以發出一個 <code class=\"language-text\">Draw</code> 的 event，而該 event 會帶著一個包含 <code class=\"language-text\">CanvasRenderingContext2D</code> 物件的參數，根據這個參數我們可以有許多 Canvas 相關的 API 可以使用，來繪製我們想要的畫面。</p>\n<p>既然是觸發事件，理所當然就是註冊一個 Listener 來處理。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">rocky<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'draw'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Clear the screen</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientWidth<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Determine the width and height of the display</span>\n  <span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>unobstructedWidth<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>unobstructedHeight<span class=\"token punctuation\">;</span>\n\n  drawAPI<span class=\"token punctuation\">.</span><span class=\"token function\">drawDigital</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'49px Roboto-subset'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  drawAPI<span class=\"token punctuation\">.</span><span class=\"token function\">drawDay</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span>  w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Draw Stock on the bottom of the screen, if available</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stockData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    drawAPI<span class=\"token punctuation\">.</span><span class=\"token function\">drawStock</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> stockData<span class=\"token punctuation\">,</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在這段 Listener 中，我做了幾件事情：</p>\n<ol>\n<li>從 <code class=\"language-text\">event</code> 中將 <code class=\"language-text\">context</code> 取出來，也就是先前提到的 <code class=\"language-text\">CanvasRenderingContext2D</code>，並且先透過 <code class=\"language-text\">clearRect()</code> 將螢幕清乾淨，因為每次被呼叫到的時候，都代表我們要重新繪製畫面。</li>\n<li>將螢幕畫布的寬高暫存起來，用於之後繪製其他圖形時計算各自要擺放的座標位置。</li>\n<li>呼叫 <code class=\"language-text\">drawAPI</code> 來繪製需要的內容。<code class=\"language-text\">drawAPI</code> 是我另外寫的一個 js file，將繪圖邏輯與主要 API 做個分離。在這邊我們一樣能夠透過 <code class=\"language-text\">require()</code>將我們自己寫的 js 檔案匯入。</li>\n<li>最後是當有股票資料存在的時候，繪製股票資訊，這部分稍後講到 <code class=\"language-text\">PebbleKit.js</code> 的時候會再提到。</li>\n</ol>\n<p>主要的邏輯就這麼簡單，註冊 listener，分發 <code class=\"language-text\">requestDraw</code> 事件，然後重繪畫面！</p>\n<h3 id=\"how-to-draw\" style=\"position:relative;\"><a href=\"#how-to-draw\" aria-label=\"how to draw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to draw?</h3>\n<p>接著就是要發揮你們藝術家天份的時刻了，利用 <code class=\"language-text\">CanvasRenderingContext2D</code> 提供的介面，我們可以輕易地畫出長方體、圓形、路徑與文字，並且設定顏色與字型大小等等，詳細的 API 參數可以直接參考官網，因為能用的 API 其實不多，所以看起來也很清楚。</p>\n<p><a href=\"https://developer.pebble.com/docs/rockyjs/CanvasRenderingContext2D/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CanvasRenderingContext2D API Doc</a></p>\n<p>這邊講解我用到的部分：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> drawAPI<span class=\"token punctuation\">.</span><span class=\"token function\">drawDigital</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'49px Roboto-subset'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p> <code class=\"language-text\">drawDigital</code> 是用來繪製畫面上的數位時間，也就是螢幕左邊大大的數字，參數很簡單，就是 context object、x, y 的座標位置、顏色與字型大小。</p>\n<p> 這邊有兩點要注意，座標位置跟一般 web 上的標準一樣，螢幕左上角為 (0, 0)，計算每個圖形的位置會是初期開發簡單的 watchface 中較為麻煩的地方，因為畫面很小，你要好好調整才行。</p>\n<p>另外一個要小心的是，雖然你看這邊的字型大小寫法，似乎跟一般 CSS 的格式一樣，但你可不能自己隨意亂加大小或是 font-family，需要使用它們定義好的才能生效。\n<a href=\"https://developer.pebble.com/docs/rockyjs/CanvasRenderingContext2D/#font\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">可用字型列表-link</a></p>\n<p>實際的 drawDigital function</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> hourAndMin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hourText <span class=\"token operator\">=</span> hourAndMin<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> minutesText <span class=\"token operator\">=</span> hourAndMin<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>textAlign <span class=\"token operator\">=</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> font<span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span>hourText<span class=\"token punctuation\">,</span> cx<span class=\"token punctuation\">,</span> cy <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span>minutesText<span class=\"token punctuation\">,</span> cx<span class=\"token punctuation\">,</span> cy <span class=\"token operator\">+</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>透過 <code class=\"language-text\">ctx</code> 可以設定 fillStyle、textAlign、font style，並使用 <code class=\"language-text\">fillText()</code> 來將文字繪製在畫面，參數分別是：文字內容, x 座標, y 座標, 最大寬度(option)，若你有設定<strong>最大寬度</strong>，當你的文字大於這寬度時，會自動使用較小的字體。</p>\n<p>繪製星期的部分其實與時間大同小異，直接看程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"SUN\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"MON\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"TUE\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"WED\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"THU\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"FRI\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n      day <span class=\"token operator\">=</span> <span class=\"token string\">\"SAT\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'lightgray'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>textAlign <span class=\"token operator\">=</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">'24px bold Gothic'</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span>day<span class=\"token punctuation\">,</span> cx<span class=\"token punctuation\">,</span> cy<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>當你寫完這些後，你就可以先試著執行看看。</p>\n<p>點擊右邊選項中的播放鍵，就會自動編譯並啟動模擬器。若是沒有問題，你會看到模擬器開啟，並出現一條 progress bar 顯示正在安裝，第一次會比較久一點。</p>\n<p>成功後就會出現畫面，並有個彈跳視窗出來，這邊可能是翻譯問題，所謂的 <strong>解除</strong> 其實就只是取消這個彈跳視窗罷了，我一開始還不太敢按，怕他把我的 App 解除安裝 XD</p>\n<img alt=\"run project\" style=\"width: 800px;\" src=\"/image/cloudpebble-run.gif\">\n<h2 id=\"fetch-stock-data\" style=\"position:relative;\"><a href=\"#fetch-stock-data\" aria-label=\"fetch stock data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fetch Stock Data</h2>\n<p>既然是智慧手錶，當然不能只有單純的顯示時間，接下來說明怎麼樣搭配 <code class=\"language-text\">PebbleKitJS</code> 透過你的手機來獲取 Web 資料，並傳送給手機顯示。</p>\n<p>PebbleKit JS 是運行在你手機端的 Pebble app 裡面，一樣也是 Event-based 的方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Pebble<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>因為是運行在 Pebble 自己的環境下，所以我們這邊不需要 require 什麼 library，\n直接註冊 <code class=\"language-text\">message</code> event 的 listener 即可。</p>\n<p>手錶端的 RockyJS 可以透過 <code class=\"language-text\">postMessage()</code> 傳送訊息給 PebbleKit，當 PebbleKit 的 listener 監聽到傳送過來的 <code class=\"language-text\">message</code> 事件後，就可以採取相對應的措施，像是發送 Ajax 抓取 web 資料，並同樣透過 <code class=\"language-text\">postMessage()</code> 將資料傳回給手錶端的 RockyJS。</p>\n<p>完整的手機端 PebbleKit JS </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Get the message that was passed</span>\n<span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// we random pick one of these stock symbol to show</span>\n<span class=\"token keyword\">var</span> stockSymbols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'YHOO'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GOOGL'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'AAPL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> randStockSymbol <span class=\"token operator\">=</span> stockSymbols<span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> stockSymbols<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// use yql to fetch data (don't use in productin or sell)</span>\n<span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://query.yahooapis.com/v1/public/yql'</span> <span class=\"token operator\">+</span> \n    <span class=\"token string\">'?q=select * from yahoo.finance.quotes where symbol in '</span> <span class=\"token operator\">+</span>\n    <span class=\"token string\">'(\"'</span><span class=\"token operator\">+</span>randStockSymbol<span class=\"token operator\">+</span><span class=\"token string\">'\")&amp;format=json&amp;env=store://datatables.org/alltableswithkeys&amp;callback='</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token function\">encodeURI</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">respText</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> stockData <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>respText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    Pebble<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'stockData'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'symbol'</span><span class=\"token operator\">:</span> stockData<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">.</span>symbol<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Ask'</span><span class=\"token operator\">:</span> stockData<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">.</span>Ask<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'Bid'</span><span class=\"token operator\">:</span> stockData<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">.</span>Bid\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>註1: 因為不能用 es6 來寫，所以也沒有 <code class=\"language-text\">fetch</code> 可以用，所以這邊的 request 是自己寫的 XMLHttpRequest function。\n註2: 記得 encodeURI 一下 url，否則有可能會出現 invalid url error</p>\n<p>接著我們回到手錶端的 RockyJS，在原本的程式下加入這兩段：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">rocky<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hourchange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Send a message to fetch the weather information (on startup and every hour)</span>\n  rocky<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'fetch'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nrocky<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Receive a message from the mobile device (pkjs)</span>\n  <span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>stockData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Save the stockData data</span>\n    stockData <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>stockData<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Request a redraw so we see the information</span>\n    rocky<span class=\"token punctuation\">.</span><span class=\"token function\">requestDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在 <code class=\"language-text\">hourchange</code> 事件發生時，我們 <code class=\"language-text\">postMessage()</code> 告訴 PebbleKitJS 需要去抓取新資料，並且註冊 <code class=\"language-text\">message</code> 的 event listener，當資料傳送回來時，我們重繪製畫面。\n（這邊直接把資料存在全域變數，方便讀取）</p>\n<h2 id=\"final-result\" style=\"position:relative;\"><a href=\"#final-result\" aria-label=\"final result permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Final Result!</h2>\n<p>Tada~ 股票資訊就出現了！</p>\n<img alt=\"run project\" style=\"width: 800px;\" src=\"/image/cloudpebble-run-stock.gif\">\n<p>當然不能一直在模擬器上跑，我們要安裝到手錶上！</p>\n<img alt=\"install to watch\" style=\"width: 800px;\" src=\"/image/cloudpebble-build-phone.gif\">\n<p>點選左邊選項列表的 <strong>編製</strong>，選擇 <strong>PHONE</strong>，並安裝執行即可！</p>\n<p>記得打開手機上 Pebble app 內的 developer mode</p>\n<img alt=\"open developer mode\" style=\"width: 300px;\" src=\"/image/cloudpebble-developmode.jpg\" />\n<p>編譯成功的話就可以在手錶上看到畫面，若失敗有問題，可以檢視編譯結果，從 log 中去找問題，像我一開始就忘記 encodeURI，導致 ajax 出問題。</p>\n<img alt=\"check build result\" style=\"width: 800px;\" src=\"/image/cloudpebble-log.png\" />\n<p>上圖內的 PBW，是可以讓你下載下來，之後要 publish 到 store 的時候所使用的，至於怎麼 publish？\n這邊再講下去篇幅有點長，會另外寫一篇來介紹。</p>\n<p>手錶上看起來長這樣~</p>\n<img alt=\"watch\" style=\"width: 300px;\" src=\"/image/cloudpebble-watch.jpg\" />\n<p>本文中介紹的程式碼在此：\n<a href=\"https://github.com/ArvinH/clean-stock-pebble-wf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/ArvinH/clean-stock-pebble-wf</a></p>\n<p>若想看官網上指針時鐘與天氣的範例，我也有個修改版本的：\n<a href=\"https://github.com/ArvinH/pebble-watchface-starterkit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/ArvinH/pebble-watchface-starterkit</a></p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://developer.pebble.com/tutorials/js-watchface-tutorial/part1/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pebble build with JS</a></li>\n<li><a href=\"https://forums.pebble.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pebble forum</a></li>\n</ol>","id":"14b803d7-e940-5899-8965-0d37eafbfc0a","fields":{"slug":"pebble-rocky-watchface"},"frontmatter":{"date":"2016-11-19T13:36:01.000Z","title":"一小時內製作自己的 Pebble 錶面","tags":["pebble","javascript"],"type":"tech","slug":"pebble-rocky-watchface"},"timeToRead":9}],"tagName":"pebble","type":"tech"}},"staticQueryHashes":["2123680655"]}