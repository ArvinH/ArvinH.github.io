{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/generative-art","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：San Cisco - 'On The Line'","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/jlubk5RYCAc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">San Cisco - 'On The Line'</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/jlubk5RYCAc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>生成藝術一直是我很想學習的主題，雖然知道大部分的人會使用 <a href=\"https://processing.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">processing</a>, <a href=\"http://paperjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">paper.js</a>, 或是 <a href=\"https://zimjs.com/art.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zimjs</a> 來製作 Generative art, 但在對於自己的藝術天份很有自知之明的情況下，一直都沒有去嘗試製作，再加上這些工具的學習也是有ㄧ定門檻。</p>\n<p>然而，最近在 Youtube 上看到 <a href=\"https://css-doodle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css-doodle</a> 的<a href=\"https://codepen.io/yuanchuan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">作者 - 袁川</a>於 <a href=\"https://www.youtube.com/watch?v=mEpocRIc3q8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSSConf CN 2019 的演講</a>，才了解到要\"開始\"似乎沒有這麼難，只要掌握一些基本觀念與技巧即可，而且他開發的 web component <a href=\"https://css-doodle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css-doodle</a> 無論是語法或是使用都算易懂好上手。</p>\n<p>今天藉由這篇文章分享該演講中我很喜歡的一些重點，並試著介紹與運用 CSS/JS 和 css-doodle 製作一些簡單的生成藝術作品。</p>\n<p>先給大家看第一個小 demo，這是參照袁川在演講中提及的一個範例實作，利用純 CSS 與 JS 所製作的簡單生成藝術:</p>\n<iframe height=\"423\" style=\"width: 100%;\" scrolling=\"no\" title=\"CSS  Generative Art - sample I\" src=\"https://codepen.io/arvin0731/embed/zYvbKQJ?height=423&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/arvin0731/pen/zYvbKQJ'>CSS  Generative Art - sample I</a> by Arvin\n  (<a href='https://codepen.io/arvin0731'>@arvin0731</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"簡單的事重複做就不簡單\" style=\"position:relative;\"><a href=\"#%E7%B0%A1%E5%96%AE%E7%9A%84%E4%BA%8B%E9%87%8D%E8%A4%87%E5%81%9A%E5%B0%B1%E4%B8%8D%E7%B0%A1%E5%96%AE\" aria-label=\"簡單的事重複做就不簡單 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>簡單的事重複做就不簡單</h2>\n<p>在生成藝術中，<code class=\"language-text\">Loop</code> 佔了很主要的角色，需要透過迴圈的方式去自動產生圖案。而圖案其實不需要複雜，在第一個範例中的元素就只有<strong>直線</strong>。</p>\n<p>簡單的直線，透過 <code class=\"language-text\">transform: rotate()</code>，就能夠有不一樣的變化，而透過組合，將多個擁有不同狀態的直線串接在一起，再加上時間因子作為變數去改變狀態，就可以是一個簡單的生成藝術。</p>\n<p>程式碼也很簡短：</p>\n<p>先設定一個 5x5 的表格：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">div.grid\n  div\n  div\n  // 略 ... 共 25 個 div</code></pre></div>\n<p>現在利用 CSS grid 可以很輕易控制表格的呈現，接著我們可以將之後預期要來拿隨機變化的屬性以 css variable 的方式設定：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--theme</span><span class=\"token punctuation\">:</span> #FF9800<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--deg</span><span class=\"token punctuation\">:</span> 45deg<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--gride-size</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.grid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--gride-size<span class=\"token punctuation\">)</span> * 5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 5px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 18px 1px <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme<span class=\"token punctuation\">)</span> inset<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>5<span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-auto-rows</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--gride-size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.grid div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 1s ease-in<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">skew</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform-origin</span><span class=\"token punctuation\">:</span> top<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>JS 的部分就只需要在固定的 time interval 中間賦以隨機產生的數值到 CSS variable 中：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getRandomBoolean</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">randomColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">16777215</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> color<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">6</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">f</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> sign <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">randomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> divs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.grid > div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  theme <span class=\"token operator\">=</span> <span class=\"token function\">randomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  divs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">div</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    sign <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getRandomBoolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'+'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">;</span>\n    div<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transform'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">skew(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sign<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">45deg)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    root<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--theme'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>theme<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>以這樣的基本想法出發，就可以修改成不同的變化，像是加入 <code class=\"language-text\">clip-path</code> 來進一步操作畫面中的圖案元素：</p>\n<iframe height=\"362\" style=\"width: 100%;\" scrolling=\"no\" title=\"CSS  Generative Art - sample II\" src=\"https://codepen.io/arvin0731/embed/OJyqOXZ?height=362&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/arvin0731/pen/OJyqOXZ'>CSS  Generative Art - sample II</a> by Arvin\n  (<a href='https://codepen.io/arvin0731'>@arvin0731</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>帶入一點數學，可以產生更多不同的 polygon：</p>\n<iframe height=\"476\" style=\"width: 100%;\" scrolling=\"no\" title=\"CSS  Generative Art - sample III\" src=\"https://codepen.io/arvin0731/embed/VwvRdXe?height=476&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/arvin0731/pen/VwvRdXe'>CSS  Generative Art - sample III</a> by Arvin\n  (<a href='https://codepen.io/arvin0731'>@arvin0731</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>上面這範例中我是隨便用三角函數設定一個公式來跑，但在演講中，袁川有提及 <strong>lissajous curves</strong> 這個古老的數學公式，他發現非常適合用在 <code class=\"language-text\">clip-path</code> 上頭，搭配 <code class=\"language-text\">poylgon</code> 的 <code class=\"language-text\">fill-rule</code> 屬性，可以做出以下的效果，像是許多特殊的海洋生物一般：</p>\n<p><img src=\"/image/lissajous-curve-clip-path.png\" alt=\"lissajous-curve-clip-path\">\n(出處：<a href=\"https://youtu.be/mEpocRIc3q8?t=737\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://youtu.be/mEpocRIc3q8?t=737</a>)</p>\n<h2 id=\"發揮更多想像力\" style=\"position:relative;\"><a href=\"#%E7%99%BC%E6%8F%AE%E6%9B%B4%E5%A4%9A%E6%83%B3%E5%83%8F%E5%8A%9B\" aria-label=\"發揮更多想像力 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>發揮更多想像力</h2>\n<p>妥善使用 <strong>迴圈</strong>、<strong>pattern</strong>、<strong>隨機性</strong>這三個要素，就可以有許多的創意組合，除了上面的線條和 <code class=\"language-text\">clip-path</code> 外，CSS 繪圖常用到的 <code class=\"language-text\">border-style</code>, <code class=\"language-text\">border-image</code>, <code class=\"language-text\">gradient</code>, <code class=\"language-text\">box-shadow</code> 等等都能拿來嘗試。</p>\n<p>附上幾個袁川在 codepen 上的作品：</p>\n<ul>\n<li>border-image: <a href=\"https://codepen.io/yuanchuan/pen/aQjKwO\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codepen.io/yuanchuan/pen/aQjKwO</a></li>\n<li>background-image + linear-gradient: <a href=\"https://codepen.io/yuanchuan/pen/NLXZLm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codepen.io/yuanchuan/pen/NLXZLm</a></li>\n<li>radial-gradient: <a href=\"https://codepen.io/yuanchuan/pen/LXPJOW\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codepen.io/yuanchuan/pen/LXPJOW</a></li>\n</ul>\n<p><img src=\"/image/yuanchuan-works.png\" alt=\"yuanchuan-works\"></p>\n<p>這只是其作品的冰山一角，有興趣的讀者可以到他的 <a href=\"https://codepen.io/yuanchuan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">codepen</a> 上欣賞各種絢麗的畫作。</p>\n<p>像是這個用 z-index 堆疊出的城市天際線圖，不得不佩服他的創造力：</p>\n<iframe height=\"306\" style=\"width: 100%;\" scrolling=\"no\" title=\"z-index -- City \" src=\"https://codepen.io/yuanchuan/embed/MMYmqv?height=306&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/yuanchuan/pen/MMYmqv'>z-index -- City </a> by yuanchuan\n  (<a href='https://codepen.io/yuanchuan'>@yuanchuan</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>另外，在袁川的演講中，讓我特別印象深刻的是他利用 <code class=\"language-text\">text-shadow</code> 的效果，將一個括號，運用在生成藝術中，你沒看錯，就是 <code class=\"language-text\">(</code> 這個括號。</p>\n<p>我找不到袁川<a href=\"https://youtu.be/mEpocRIc3q8?t=1751\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">影片</a>中的範例，但自己依照他的介紹用純 css/js 實作了一個版本：</p>\n<iframe height=\"389\" style=\"width: 100%;\" scrolling=\"no\" title=\"CSS Generative Art - sample IV\" src=\"https://codepen.io/arvin0731/embed/abvMXmX?height=389&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/arvin0731/pen/abvMXmX'>CSS Generative Art - sample IV</a> by Arvin\n  (<a href='https://codepen.io/arvin0731'>@arvin0731</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>除了 <code class=\"language-text\">text-shadow</code>，上面範例中也用上了 <code class=\"language-text\">filter</code>, <code class=\"language-text\">rotation</code>, <code class=\"language-text\">font-size</code> 等等的隨機屬性變化，來生成這幅圖案。</p>\n<h2 id=\"css-doodle\" style=\"position:relative;\"><a href=\"#css-doodle\" aria-label=\"css doodle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS-Doodle</h2>\n<p>上面的範例都是用 pure css/js 完成的，但袁川其實製作了一個 web component，把許多製作 generative art 需要的一些功能幫你包好成多個函式，像是想要產生 grid，不用再到 html 內複製一大堆 div，也不用自己用 JS createElement，只要透過 css-doodle，一句話就能做到：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:doodle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@grid</span><span class=\"token punctuation\">:</span> 1x10 / 85%<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>css-doodle 是基於 Shadow DOM v1 和 Custom Elements v1 實作的 web component，基本上目前主流瀏覽器都能支援。</p>\n<p>像上面的例子，透過設定 css-doodle web component 的 shadow-dom 屬性，可以讓他幫你產生 grid layout 的 divs。而在 component 內除了能撰寫一般的 CSS 外，也能利用他提供的 utility function 快速達到一些 random、pick one 等等的效果。</p>\n<p>我很喜歡作者在官網上很霸氣地一句話：The limit is the limit of CSS itself.</p>\n<p>從他的作品集來看，所言不假。</p>\n<p>\bcss-doodle 的官網就是一個詳細的<a href=\"https://css-doodle.com/#usage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">使用手冊</a>，每個 function 與屬性的旁邊都有對應的實際範例幫助你理解。提供的函式說多不多，說少也不少，一個一個看完也不一定能馬上記住，還是得要在實作時邊對照查詢。</p>\n<p>所以說做中學還是最快的，今天文章最後就來解析一個袁川利用 css-doodle 製作的作品，一方面能臨摹大神的創意，另一方面也能比較深刻的了解這些函式的用法。</p>\n<h2 id=\"css-doodle-作品解析\" style=\"position:relative;\"><a href=\"#css-doodle-%E4%BD%9C%E5%93%81%E8%A7%A3%E6%9E%90\" aria-label=\"css doodle 作品解析 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css-doodle 作品解析</h2>\n<p>挑一個我很喜歡的作品，非常的漂亮！</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Chasing\" src=\"https://codepen.io/yuanchuan/embed/pBrMNQ?height=265&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/yuanchuan/pen/pBrMNQ'>Chasing</a> by yuanchuan\n  (<a href='https://codepen.io/yuanchuan'>@yuanchuan</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>這個作品分成兩個 component，一個是背後不斷滑落的線條，另一個是類似不斷旋轉的 DNA 螺旋。</p>\n<p>我們單就 DNA 螺旋來看，程式碼非常簡短：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:doodle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@grid</span><span class=\"token punctuation\">:</span> 45x1 / 40vmin<span class=\"token punctuation\">;</span></span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">:container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>50%<span class=\"token punctuation\">,</span> 33vmin<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">:after, :before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></span>\n  <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">radial-gradient</span><span class=\"token punctuation\">(</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@p</span><span class=\"token punctuation\">(</span>#FFFDE1<span class=\"token punctuation\">,</span> #FB3569<span class=\"token punctuation\">)</span> <span class=\"token atrule\"><span class=\"token rule\">@r</span><span class=\"token punctuation\">(</span>70%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    transparent 0\n  <span class=\"token punctuation\">)</span> \n  <span class=\"token atrule\"><span class=\"token rule\">@pn</span><span class=\"token punctuation\">(</span>30% 50%<span class=\"token punctuation\">,</span> 70% 50%<span class=\"token punctuation\">,</span> 50% 60%<span class=\"token punctuation\">)</span> / \n  <span class=\"token atrule\"><span class=\"token rule\">@r</span><span class=\"token punctuation\">(</span>.1vmin<span class=\"token punctuation\">,</span> 5vmin<span class=\"token punctuation\">)</span> <span class=\"token atrule\"><span class=\"token rule\">@lr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n  no-repeat<span class=\"token punctuation\">;</span></span></span></span></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> centerr<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span>\n\n<span class=\"token property\">will-change</span><span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> r 4s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>-4s / <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> * <span class=\"token atrule\"><span class=\"token rule\">@i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span>\n\n<span class=\"token property\">--translate</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>-66vmin / <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> * <span class=\"token atrule\"><span class=\"token rule\">@i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> r</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--translate<span class=\"token punctuation\">)</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--translate<span class=\"token punctuation\">)</span> <span class=\"token function\">rotateZ</span><span class=\"token punctuation\">(</span>-1turn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>要使用 css-doodle 的話，上面這段 css 是要放在 <code class=\"language-text\">&lt;css-doodle></code> component 內的：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>css-doodle</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- Your css --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>css-doodle</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"doodle\" style=\"position:relative;\"><a href=\"#doodle\" aria-label=\"doodle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:doodle</h4>\n<p><code class=\"language-text\">:doodle</code> 是針對 <code class=\"language-text\">&lt;css-doodle></code> 這個元素本身的 selector，範例中設定了 <code class=\"language-text\">position</code> 與 <code class=\"language-text\">z-index</code>，比較特別的是 <code class=\"language-text\">@grid</code> 的使用。</p>\n<h4 id=\"grid\" style=\"position:relative;\"><a href=\"#grid\" aria-label=\"grid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@grid</h4>\n<p><code class=\"language-text\">@grid</code> 是用來定義 css-doodle 的 grid layout，你也可以直接設定在 <code class=\"language-text\">&lt;css-doodle grid=\"5\"></code> 上，但是 <code class=\"language-text\">@grid</code> 的屬性設定會有比較高的優先權。</p>\n<p><code class=\"language-text\">@grid: 45x1 / 40vmin;</code> 代表的是 doodle size 為 <strong>41vmin</strong>，且其中有 <strong>45 x 1</strong> 的 grid。(<code class=\"language-text\">vmin</code> 代表的是當前 <code class=\"language-text\">vh</code> 與 <code class=\"language-text\">vw</code> 中最小的值)</p>\n<p>當你設定了 <code class=\"language-text\">grid</code> 後，<code class=\"language-text\">css-doodle</code> 的 <code class=\"language-text\">shadow-dom</code> 會長出類似如下的結構：</p>\n<p><img src=\"/image/css-doodle-shadowdom.png\" alt=\"css-doodle-shadowdom\"></p>\n<p>會產生一個 <code class=\"language-text\">&lt;div class=\"container\"></code>，並且在裡面產生對應你所設定的 <code class=\"language-text\">grid</code> 數量的 <code class=\"language-text\">&lt;div cell></code>。</p>\n<p>其中有個重點是，在 <code class=\"language-text\">&lt;css-doodle></code> 元件內設定的 CSS 會套用到每一個 <code class=\"language-text\">&lt;div cell></code>，以 <code class=\"language-text\">[cell]:nth-of-type(1)</code> 這樣的 css selector 把生成的 css style 個別應用到 DOM 上。</p>\n<h4 id=\"container\" style=\"position:relative;\"><a href=\"#container\" aria-label=\"container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:container</h4>\n<p><code class=\"language-text\">:container</code> 代表的是 <code class=\"language-text\">:doodle</code> 內 grid layout 的 container，也就是上面說到的 <code class=\"language-text\">&lt;div class=\"container\"></code>。範例中設置 <code class=\"language-text\">transform: translate(50%, 33vmin)</code> 也就只是把其偏移到畫面中間的位置。</p>\n<hr>\n<p>接下來的 <code class=\"language-text\">:after, :before</code> 是整個圖形的重點：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:after, :before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@place-cell</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span></span>\n  <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">radial-gradient</span><span class=\"token punctuation\">(</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@p</span><span class=\"token punctuation\">(</span>#FFFDE1<span class=\"token punctuation\">,</span> #FB3569<span class=\"token punctuation\">)</span> <span class=\"token atrule\"><span class=\"token rule\">@r</span><span class=\"token punctuation\">(</span>70%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    transparent 0\n  <span class=\"token punctuation\">)</span> \n  <span class=\"token atrule\"><span class=\"token rule\">@pn</span><span class=\"token punctuation\">(</span>30% 50%<span class=\"token punctuation\">,</span> 70% 50%<span class=\"token punctuation\">,</span> 50% 60%<span class=\"token punctuation\">)</span> / \n  <span class=\"token atrule\"><span class=\"token rule\">@r</span><span class=\"token punctuation\">(</span>.1vmin<span class=\"token punctuation\">,</span> 5vmin<span class=\"token punctuation\">)</span> <span class=\"token atrule\"><span class=\"token rule\">@lr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n  no-repeat<span class=\"token punctuation\">;</span></span></span></span></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"place-cell\" style=\"position:relative;\"><a href=\"#place-cell\" aria-label=\"place cell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@place-cell</h4>\n<p><code class=\"language-text\">@place-cell</code> 是用來指定 cell 相對於整個 grid layout 中的位置，在此 component 的 <code class=\"language-text\">:after, :before</code> 都設定 <code class=\"language-text\">@place-cell: center</code>，就代表 grid 中 cell 的 <code class=\"language-text\">:after</code> 與 <code class=\"language-text\">:before</code> 都置於相對於整個 grid 的中心位置。</p>\n<h4 id=\"size\" style=\"position:relative;\"><a href=\"#size\" aria-label=\"size permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@size</h4>\n<p>很單純就是同時設定 <code class=\"language-text\">wdith</code> 與 <code class=\"language-text\">height</code> 的值。</p>\n<h4 id=\"background\" style=\"position:relative;\"><a href=\"#background\" aria-label=\"background permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Background</h4>\n<p>作者利用 grid 內每個 <code class=\"language-text\">&lt;div cell></code> 的 <code class=\"language-text\">:after</code> 與 <code class=\"language-text\">:before</code>，使用 <code class=\"language-text\">background</code> 與 <code class=\"language-text\">radial-gradient</code> 屬性來製造我們看到的圓點。</p>\n<p>主要使用到 <code class=\"language-text\">background-image</code>、<code class=\"language-text\">background-position-x|y</code>、<code class=\"language-text\">background-size</code>、<code class=\"language-text\">background-repeat</code> 四個屬性。</p>\n<p>如果單純取其中一個 cell 來觀察的話，會長這樣：</p>\n<p><img src=\"/image/css-doodle-cell-div-single-dot.gif\" alt=\"css-doodle-cell-div-single-dot\"></p>\n<p>若再加上 <code class=\"language-text\">css-doodle</code> 提供的一些 random (@r), pick(@p) 等 utility function，就可以造成每一個 cell div 都各自擁有兩個不同顏色、大小、位置的圓點。</p>\n<p>接下來針對 <code class=\"language-text\">background</code> 屬性所使用到的 utility function 作介紹。</p>\n<h4 id=\"p-pickv1-v2\" style=\"position:relative;\"><a href=\"#p-pickv1-v2\" aria-label=\"p pickv1 v2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@p, @pick(v1, v2,...)</h4>\n<p><code class=\"language-text\">@p</code> 為 <code class=\"language-text\">@pick</code> 的 alias。它會從給定的 list 中隨機挑選數值出來：</p>\n<p><code class=\"language-text\">@p(#FFFDE1, #FB3569)</code> 就會從這兩個顏色中隨機挑選一個。</p>\n<h4 id=\"r-randstart-end\" style=\"position:relative;\"><a href=\"#r-randstart-end\" aria-label=\"r randstart end permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@r, @rand(start [,end])</h4>\n<p><code class=\"language-text\">@r</code> 為 <code class=\"language-text\">@rand</code> 的 alias。接受至少一個參數，作為區間的頭與尾，它會從給定的區間中隨機挑選兩個數值。</p>\n<p>因此範例中，<code class=\"language-text\">background-image</code> 的 <code class=\"language-text\">radial-gradient</code> 屬性：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token function\">radial-gradient</span><span class=\"token punctuation\">(</span> @<span class=\"token function\">p</span><span class=\"token punctuation\">(</span>#FFFDE1<span class=\"token punctuation\">,</span> #FB3569<span class=\"token punctuation\">)</span> @<span class=\"token function\">r</span><span class=\"token punctuation\">(</span>70%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> transparent 0 <span class=\"token punctuation\">)</span> </code></pre></div>\n<p>第一層的設定等同於隨機選取兩個顏色（紅、白），並從 0 ~ 70% 之間選取一個百分比數值作為大小。</p>\n<h4 id=\"pn-pick-nv1-v2\" style=\"position:relative;\"><a href=\"#pn-pick-nv1-v2\" aria-label=\"pn pick nv1 v2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@pn, @pick-n(v1, v2,...)</h4>\n<p><code class=\"language-text\">@pn</code> 為 <code class=\"language-text\">@pick-n</code> 的 alias。會從給定的 list 中，一個一個取出，對應到 <code class=\"language-text\">grid</code> 中的 <code class=\"language-text\">cell</code>。</p>\n<p>以範例來說，就會依序設置 <code class=\"language-text\">cell</code> 的 <code class=\"language-text\">background-position</code> 值為 30% 50%，70% 50% 和 50% 60%。（依照我觀察，似乎不會保證依照列表的順序，但還是會一個一個對應設置到 <code class=\"language-text\">cell</code> 上）</p>\n<h4 id=\"lr-last-rand\" style=\"position:relative;\"><a href=\"#lr-last-rand\" aria-label=\"lr last rand permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@lr, @last-rand</h4>\n<p>至於 <code class=\"language-text\">background-size</code>，範例使用 <code class=\"language-text\">@r(.1vmin, 5vmin) @lr()</code>，其中 <code class=\"language-text\">@r(.1vmin, 5vmin)</code> 就是從 .1vim 到 5vmin 中取一個值，而 <code class=\"language-text\">@lr</code> 則代表取得最後一個 random 函式所取得的數值，也就是 <code class=\"language-text\">@r(.1vmin, 5vmin)</code> 的結果。最終的 <code class=\"language-text\">background-size</code> 就會是兩個相同的隨機值。</p>\n<p>到目前為止，設定出來的圖形會長這樣：</p>\n<p><img src=\"/image/css-doodle-no-animation.png\" alt=\"css-doodle-no-animation\"></p>\n<p>所有的點會集中在一起，因為我們的 grid 是 <code class=\"language-text\">45x1</code>，也就是只有一個 column。</p>\n<p>範例中，作者用 <code class=\"language-text\">translateY</code> 的方式來將每個點隨機向 Y 軸移動，並加上 <code class=\"language-text\">@keyframe</code> 與 <code class=\"language-text\">rotate</code> 的效果，就完成了螺旋的生成圖案：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> r 4s linear infinite<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-delay</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>-4s / <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> * <span class=\"token atrule\"><span class=\"token rule\">@i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span>\n\n<span class=\"token property\">--translate</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>-66vmin / <span class=\"token atrule\"><span class=\"token rule\">@size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> * <span class=\"token atrule\"><span class=\"token rule\">@i</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> r</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--translate<span class=\"token punctuation\">)</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--translate<span class=\"token punctuation\">)</span> <span class=\"token function\">rotateZ</span><span class=\"token punctuation\">(</span>-1turn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"i-index\" style=\"position:relative;\"><a href=\"#i-index\" aria-label=\"i index permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@i, @index</h4>\n<p>唯一用到的 utility function 是 <code class=\"language-text\">@i</code>，代表當前套用到該 css 的 <code class=\"language-text\">cell</code> 的 index。</p>\n<p>螺旋的部分到此為止，而另一個滑落效果的 doodle 運用的技巧也差不多，但是效果卻完全不同，有興趣的讀者可以研究 codepen 上的原始碼。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>生成藝術除了要有創意外，擁有好的實作工具也很重要，\b<code class=\"language-text\">css-doodle</code> 算是給了想嘗試生成藝術的人一個好的開頭，像是文章一開始所製作的簡單生成藝術，也都能夠透過 <code class=\"language-text\">css-doodle</code> 來實作，程式碼會簡短很多。</p>\n<p>而透過 processing 等工具能做出更多效果，甚至能搭配音樂來做出不同變化，今天只是透過 <code class=\"language-text\">css-doodle</code> 的啟發，練習了一些簡單的生成藝術，體驗了一下，非常有趣，推薦大家一起來試試！</p>\n<p>袁川的影片後半段還有很多使用絢麗技巧的生成藝術，非常推薦大家花個四十分鐘把影片看完，相信會有不少收穫，就算不想自己嘗試，欣賞他所創作的作品也是一種享受。</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://www.youtube.com/watch?v=mEpocRIc3q8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSS生成藝術@袁川_CSSConf CN 2019</a></li>\n<li><a href=\"https://css-doodle.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css-doodle</a></li>\n<li><a href=\"https://processing.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">processing</a></li>\n<li><a href=\"http://paperjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">paper.js</a></li>\n<li><a href=\"https://zimjs.com/art.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zimjs</a></li>\n</ol>","id":"18096a95-291e-51a8-ab74-8bb45209d2c1","fields":{"slug":"css-generative-art-css-doodle"},"frontmatter":{"date":"2020-05-23T13:37:30.000Z","title":"CSS 生成藝術初探與 css-doodle 簡介","tags":["web","css","css-doodle","generative art"],"type":"tech","slug":"css-generative-art-css-doodle"},"timeToRead":13}],"tagName":"generative art","type":"tech"}},"staticQueryHashes":["2123680655"]}