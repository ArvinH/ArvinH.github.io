{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/web-component","result":{"pageContext":{"posts":[{"excerpt":"好歌分享：Monkey Majik + 吉田兄弟 - Change","html":"<blockquote>\n<p>好歌分享：<a href=\"https://youtu.be/WK1wwgMpFDg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Monkey Majik + 吉田兄弟 - Change</a></p>\n</blockquote>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/WK1wwgMpFDg\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!-- more -->\n<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>好一陣子之前在網路上看到 <a href=\"https://stenciljs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Stencil JS</a>，原以為是跟 CSS 相關的框架，沒想到是 <a href=\"https://ionicframework.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ionic 團隊</a> 製作的 Web Component 工具，在 GitHub 上有七千多顆星星，看來是深受喜愛，但當時我對於 Web Component 存有一些疑慮，所以沒有多加研究，例如，雖然主打用 Browser 原生支援的 Custom Elements 來渲染共用元件，能共用在任何前端框架上，但其實也意味著，使用這共用元件的團隊，對於這個元件的掌控力也降低了，若是想要修改元件的行為，不可避免的也得去學習如何修改 Web Component，反而徒增成本。\n不過從另一個角度想，今天若有專門的團隊利用 Web Component 來建構與維護一整套 Design System 的話，可能就會是不錯的選擇。</p>\n<p>總之，最近偶然間聽到高手學弟再度提及 Stencil 的名字，加上我在修改個人網站的時候，正好想在文章頁加入類似 Medium 的拍手元件，覺得可以利用這機會來試試看，用 Stencil 來製作一個能在 React 或其他前端框架上能運行的 Web Component，用這篇文章記錄下過程。</p>\n<p>先看看成品：</p>\n<iframe height=\"410\" style=\"width: 100%;\" scrolling=\"no\" title=\"claps-button web component\" src=\"https://codepen.io/arvin0731/embed/preview/ExjGBNq?height=410&theme-id=dark&default-tab=result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/arvin0731/pen/ExjGBNq'>claps-button web component</a> by Arvin\n  (<a href='https://codepen.io/arvin0731'>@arvin0731</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>點擊拍手 emoji 時，除了記錄點擊次數外，還會有光點由外至內被吸引到手上，最後讓拍手 emoji 的顏色由灰階轉黃再發紅光，營造出一種元氣彈吸收能量的感覺。</p>\n<p>懶得看文章的可以到 GitHub 上看原始碼：<a href=\"https://github.com/ArvinH/claps-button\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/ArvinH/claps-button</a></p>\n<h2 id=\"stencil-簡介\" style=\"position:relative;\"><a href=\"#stencil-%E7%B0%A1%E4%BB%8B\" aria-label=\"stencil 簡介 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stencil 簡介</h2>\n<blockquote>\n<p>Stencil is a compiler that generates Web Components (more specifically, Custom Elements). Stencil combines the best concepts of the most popular frameworks into a simple build-time tool.</p>\n</blockquote>\n<p>在官網上清楚的寫到 Stencil 的定位是一個 Compiler，用了目前流行的 tech stack 來製作出完全符合標準的 Web Components。</p>\n<p>參考了 React 的 Virtual DOM、Fiber 的 Async rendering、reactive data-binding，並支援 TypeScript 和 JSX 語法。對於習慣用 React 開發的人來說，算是非常好上手的一套工具。</p>\n<p>官網上的文檔清晰明瞭，而且很好閱讀，一路從 Introduction 順著讀下去，就會默默把各種功能與 API 也都看過一遍，包含如何整合在不同的前端框架中的資訊。</p>\n<p>其中也花了一些篇幅在介紹為什麼他們要製作這套工具，以及他們的目的是什麼。對於他們的出發點與目標，我覺得蠻有意思的：</p>\n<blockquote>\n<p>Stencil aims to combine the best concepts of the most popular frontend frameworks into a compile-time tool rather than run-time tool.</p>\n</blockquote>\n<p>他們對於 Stencil 的定位是屬於 <code class=\"language-text\">compile-time tool</code>，應用各種工具最佳化開發體驗，最終編譯出符合 Web Standards 且能運行在多數瀏覽器的元件。</p>\n<p>為此，他們提供了 out-of-the-box 的按需加載，這點對於 Web Component 來說非常重要，也大大提高我的使用意願；API 部分他們是從 Web Component 標準的 lifecycle 上再做延伸，並沒有太多他們自己的客製化 API，學習曲線相對低，但還是能保有良好的開發體驗，像是在使用 Framework 開發一般。</p>\n<p>有興趣的讀者可以前往<a href=\"https://stenciljs.com/docs/goals-and-objectives\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官網</a>閱讀，內容不算太多，很快能掃過一遍。</p>\n<h2 id=\"如何製作\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E8%A3%BD%E4%BD%9C\" aria-label=\"如何製作 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何製作</h2>\n<h3 id=\"專案設定\" style=\"position:relative;\"><a href=\"#%E5%B0%88%E6%A1%88%E8%A8%AD%E5%AE%9A\" aria-label=\"專案設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>專案設定</h3>\n<p>接下來就說明如何使用 Stencil 來製作 Web Component。</p>\n<p>首先我們利用 Stencil 的 cli 開啟一個專案：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init stencil</code></pre></div>\n<p>你可以看到我們其實有三種選擇：<code class=\"language-text\">ionic-pwa</code>、<code class=\"language-text\">app</code>、<code class=\"language-text\">component</code></p>\n<p><img src=\"/image/stencil-cli.png\" alt=\"stencil-cli\" title=\"stencil-cli\"></p>\n<p>ionic-pwa 與 app 都是用來建構一個完整 Web application 的 starter kit，單純建構 Component 的話只需要選擇 component 這個 starter kit 即可。有興趣的讀者也可以裝 ionic-pwa 與 app 試試看，Stencil 提供了自己的 router \b與 redux lib，讓你能有與開發目前一般前端應用程式相似的體驗。</p>\n<p>選擇安裝好 <code class=\"language-text\">component starter kit</code> 後，可以看到下面的專案結構：</p>\n<p><img src=\"/image/stencil-starter-kit-structure.png\" alt=\"stencil-starter-kit-structure\" title=\"stencil starter kit structure\"></p>\n<p>重點只有一個，就是 <code class=\"language-text\">components</code> 資料夾，底下包含了 e2e 測試的檔案、css 檔與 component 主程式所在的 <code class=\"language-text\">my-component.tsx</code>。可以看到都是由 Typescript 為主要 stack，其中的 type file <code class=\"language-text\">components.d.ts</code> 在你 <code class=\"language-text\">build</code> 與 <code class=\"language-text\">run dev</code> 的過程中會自動幫你 codegen 出來。</p>\n<p>其中的 <code class=\"language-text\">index.html</code> 是 <code class=\"language-text\">run dev</code> 時的主要 html template，你可以在這邊測試你設計的 component 使用情境。</p>\n<p>接著來看一下 package.json 的內容：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-first-component\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Stencil Component Starter\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.mjs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"es2015\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm/index.mjs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"es2017\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm/index.mjs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/types/index.d.ts\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/collection/collection-manifest.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collection:main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/collection/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"unpkg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/my-first-component/my-first-component.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"dist/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"loader/\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stencil build --docs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stencil build --dev --watch --serve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stencil test --spec --e2e\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test.watch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stencil test --spec --e2e --watchAll\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"generate\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stencil generate\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@stencil/core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.8.8\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>基本的 npm script 都幫你準備好了，當你 <code class=\"language-text\">npm run build</code> 的時候，除了基本的 main - <code class=\"language-text\">dist/index.js</code> 外，module 模式的 <code class=\"language-text\">dist/index.mjs</code> 與 <code class=\"language-text\">es2015</code>、<code class=\"language-text\">es2017</code> 的編譯版本都有，甚至準備了給 <code class=\"language-text\">unpkg</code> 使用的 destination。</p>\n<p>唯一一點要注意的是，當你準備要 publish 你的 component 到 npm 上，讓人透過 <a href=\"https://unpkg.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">unpkg</a> 使用時，記得一定要先 <code class=\"language-text\">npm run build</code>，產生 production build 才會有的編譯檔案，這樣才能夠正確地被人引入使用。</p>\n<p>另外，裡面唯一比較特殊的 config 檔案 - <code class=\"language-text\">stencil.config.ts</code> 則是用來設定各種 stencil plugin 的，例如在我的範例中，我使用了 SCSS，這時就可以在此 config 檔中設定 scss plugin：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// sass plugin</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> sass <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/sass'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> config<span class=\"token operator\">:</span> Config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  namespace<span class=\"token operator\">:</span> <span class=\"token string\">'claps-button'</span><span class=\"token punctuation\">,</span>\n  outputTargets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span>\n      esmLoaderPath<span class=\"token operator\">:</span> <span class=\"token string\">'../loader'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'docs-readme'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'www'</span><span class=\"token punctuation\">,</span>\n      serviceWorker<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// disable service workers</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// can setup plugins here</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"程式開發\" style=\"position:relative;\"><a href=\"#%E7%A8%8B%E5%BC%8F%E9%96%8B%E7%99%BC\" aria-label=\"程式開發 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>程式開發</h3>\n<p>利用 starter kit 把專案建立好，接著把名稱改成自己的 component 後，就能開始正式撰寫程式碼。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> Prop<span class=\"token punctuation\">,</span> State<span class=\"token punctuation\">,</span> Listen<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> Host <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@stencil/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  tag<span class=\"token operator\">:</span> <span class=\"token string\">'claps-button'</span><span class=\"token punctuation\">,</span>\n  styleUrl<span class=\"token operator\">:</span> <span class=\"token string\">'claps-button.scss'</span><span class=\"token punctuation\">,</span>\n  shadow<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">State</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> count<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Prop</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Listen</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> capture<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Host<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"counter\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          color<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div\n          <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"claps-btn-container\"</span>\n          data<span class=\"token operator\">-</span>count<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span>\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          👏\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Host<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"一步步解析\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E6%AD%A5%E6%AD%A5%E8%A7%A3%E6%9E%90\" aria-label=\"一步步解析 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一步步解析</h3>\n<p><strong>@Component</strong> decorator 提供 Stencil compiler 關於你的元件的 Metadata。其中，<code class=\"language-text\">tag</code> 顧名思義就是你元件的 tag 名稱要叫做什麼；<code class=\"language-text\">styleUrl</code> 標示出你要引入的 css 檔案；<code class=\"language-text\">shadow</code> 代表你的元件是否要使用 shadow dom。</p>\n<p>使用 shadow dom 的差別在於你想不想要元件內的所有元素被封裝起來。不清楚何謂 shadow dom 的可以看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN 的說明</a>。若是你有開啟 shadow dom，你的元件在 HTML Tree 中會長得像這樣：</p>\n<p><img src=\"/image/stencil-shadowdom.png\" alt=\"shadow-dom\" title=\"shadow dom\"></p>\n<p>下面實際 Component 實作的部分，則跟 React Component 類似，一樣有 <code class=\"language-text\">render</code> 函式回傳 <code class=\"language-text\">JSX</code>；ㄧ樣有 private/public method 可以宣告使用。</p>\n<p>你可以利用 <code class=\"language-text\">@State()</code> 與 <code class=\"language-text\">@Prop()</code> 兩個 decorator 來宣告元件的狀態(state) 與可接受的 Props。</p>\n<p><code class=\"language-text\">@Listen()</code> decorator 則是 Stencil 用來監聽外部 DOM Event 的，可以傳入不同的 option，像是上面範例中的 <code class=\"language-text\">{ capture: true }</code> 就是告知我們要在 Capture 階段 fire listener；也可以指定 <code class=\"language-text\">target</code>，告訴 Stencil 你要把這個 listener 綁定在誰身上，像是 scroll event，可以 target 在 window 上：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> target<span class=\"token operator\">:</span> <span class=\"token string\">'window'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">handleScroll</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the body was scrolled'</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>此外，還有個 <code class=\"language-text\">@Event()</code> decorator 可以用來 emit data 跟 event，並用 <code class=\"language-text\">@Listen()</code> decorator 捕獲。詳情可以<a href=\"https://stenciljs.com/docs/events\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">參閱官網</a>。</p>\n<p>最後在 render 函式中有個特別的 Element 叫做 <code class=\"language-text\">Host</code>，在 Web component 的世界中，host environment 代表的是 <em>host</em> 你的 custom web component 的環境，通常就是一般的 DOM Tree，而這邊的 <code class=\"language-text\">Host</code> component 也雷同，代表的就是你的 Web component 本身，你傳入給 Host element 的屬性都會反映在 web component 的 tag 身上。從官網給的範例來看可能會更清楚：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>tag<span class=\"token operator\">:</span> <span class=\"token string\">'todo-list'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoList</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Prop</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> open <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Host\n        aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>open <span class=\"token operator\">?</span> <span class=\"token string\">'false'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'todo-list'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'is-open'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>open\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>根據傳入你的 custom tag 的屬性 <code class=\"language-text\">open</code> 的狀態，會改變其 <code class=\"language-text\">aria-hidden</code> 屬性的內容。</p>\n<p>如果 <code class=\"language-text\">this.open === true</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token operator\">&lt;</span>todo<span class=\"token operator\">-</span>list <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"todo-list open\"</span> aria<span class=\"token operator\">-</span>hidden<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>todo<span class=\"token operator\">-</span>list<span class=\"token operator\">></span></code></pre></div>\n<p>此外，<code class=\"language-text\">Host</code> element 也可以單純用來取代 React 中的 <code class=\"language-text\">Fragement</code>。</p>\n<h3 id=\"其他細節與注意事項\" style=\"position:relative;\"><a href=\"#%E5%85%B6%E4%BB%96%E7%B4%B0%E7%AF%80%E8%88%87%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85\" aria-label=\"其他細節與注意事項 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他細節與注意事項</h3>\n<p>至此為止其實就已經可以產出一個 Web Component 了，接下來要做的就都只是加入元件所需的實作細節，下面程式碼我省略了一些產生動畫的細節，有興趣的可以<a href=\"https://github.com/ArvinH/claps-button\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">從 GitHub 上參考原始碼</a>，實作方式其實很簡單暴力，就是固定產生許多小光點，然後算好圓形座標的位置與位移，並利用 <code class=\"language-text\">animate API</code> 來加上 <code class=\"language-text\">keyframe</code>，在點擊拍手 emoji 的時候觸發動畫，並加上 <code class=\"language-text\">text-shadow</code> 與 <code class=\"language-text\">filter: grayscale</code> 的屬性來增加效果。</p>\n<p>這邊我著重說明一些關於 Stencil 實作 web component 上的一些細節：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Component</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  tag<span class=\"token operator\">:</span> <span class=\"token string\">'claps-button'</span><span class=\"token punctuation\">,</span>\n  styleUrl<span class=\"token operator\">:</span> <span class=\"token string\">'claps-button.scss'</span><span class=\"token punctuation\">,</span>\n  shadow<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Element</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> el<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">State</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> count<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Prop</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> color<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Prop</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> size<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Prop</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> preserve<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Listen</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> capture<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>preserve<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">claps-wc-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">runAnimation</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>preserve<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">claps-wc-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">runAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rootElm  <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">.</span>shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.claps-btn-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ...略</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateChi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...略</span>\n      <span class=\"token comment\">// 產生圓形氣體顆粒效果</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> chiArray <span class=\"token operator\">=</span> <span class=\"token function\">generateChi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    chiArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>chi <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      root<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>chi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    rootElm<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Host<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"counter\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          color<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\n          borderColor<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\n          width<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token string\">'3rem'</span><span class=\"token punctuation\">,</span>\n          height<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token string\">'3rem'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div\n          <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"claps-btn-container\"</span>\n          data<span class=\"token operator\">-</span>count<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span>\n          onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span>\n          style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            width<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token string\">'3rem'</span><span class=\"token punctuation\">,</span>\n            height<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token string\">'3rem'</span><span class=\"token punctuation\">,</span>\n            fontSize<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token string\">'3rem'</span><span class=\"token punctuation\">,</span>\n            textShadow<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">1px 0px </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px red</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            filter<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">grayscale(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span>\n              <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">/</span> <span class=\"token number\">20</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          👏\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Host<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>首先是 <strong>lifecycle</strong>，Stencil 除了提供 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Web Component 標準的 lifecycle</a> - <code class=\"language-text\">connectedCallback()</code> 與 <code class=\"language-text\">disconnectedCallback()</code> 外，還提供了許多類似當初 React 的 component lifecycle，可以從官方的圖檔中一目瞭然：</p>\n<p><img src=\"/image/stencil-component-lifecycle.png\" alt=\"stencil-component-lifecycle\" title=\"stencil component lifecycle\"></p>\n<p>我們範例中用到的 <code class=\"language-text\">componentWillLoad</code> 會在 Component 進行第一次 render 前被呼叫，所以適合用來 initialized data，這邊的例子是從 localStorage 中取出資料。</p>\n<p>另一個執得注意的地方是取得 shadow dom 元素的方法。</p>\n<p>在 <code class=\"language-text\">runAnimation()</code> 函數中，我需要將動態產生的光點掛載到 web component 的 shadow dom 上，而要能存取 shadow dom，需要先利用 <code class=\"language-text\">@Element()</code> decorator 來宣告一個 Host element 的 reference，該 decorator 會回傳一個 <code class=\"language-text\">HTMLElement</code> 的 instance，你就能以此來存取 shadow dom：</p>\n<p><code class=\"language-text\">const rootElm  = this.el.shadowRoot.querySelector('.claps-btn-container');</code></p>\n<p>最後，還有一些這次範例中未用到的 API，像是 public method 的使用與類似 Observable 的 Watch decorator 等等，有興趣的讀者在前往官網查看即可，都寫得蠻清楚的。</p>\n<p><a href=\"https://stenciljs.com/docs/decorators\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Stencil API Docs</a></p>\n<h2 id=\"如何運用在不同-framework-上\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E9%81%8B%E7%94%A8%E5%9C%A8%E4%B8%8D%E5%90%8C-framework-%E4%B8%8A\" aria-label=\"如何運用在不同 framework 上 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何運用在不同 framework 上</h2>\n<p>使用在不同框架的方法，我試了兩種，首先是 React；</p>\n<iframe\n  src=\"https://codesandbox.io/embed/webcomponent-test-react-w7lyv?fontsize=14&hidenavigation=1&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"webcomponent-test-react\"\n  allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\"\n  sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n></iframe>\n<p>最簡單的方式就是在 template index.html 中放入：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>https://unpkg.com/claps-button@1.0.7/dist/claps-button.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>然後就能在任意 component 中加入：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>claps-button</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3rem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">preserve</span> <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>claps-button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>然而像 Vue 的話，就沒辦法直接這樣做，必須要以 <code class=\"language-text\">npm install ${your web component}</code> 的方式載入到你的 App 中，並在 <code class=\"language-text\">main.js</code> 中，從 stencil 提供的 loader 中去 <code class=\"language-text\">defineCustomElements</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  applyPolyfills<span class=\"token punctuation\">,</span>\n  defineCustomElements\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"claps-button/loader/index.cjs.js\"</span><span class=\"token punctuation\">;</span>\nVue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Tell Vue to ignore all components defined in the claps-button</span>\n<span class=\"token comment\">// package. The regex assumes all components names are prefixed</span>\n<span class=\"token comment\">// 'claps'</span>\nVue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>ignoredElements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">claps-\\w*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Bind the custom elements to the window object</span>\n<span class=\"token function\">applyPolyfills</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">defineCustomElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"but\" style=\"position:relative;\"><a href=\"#but\" aria-label=\"but permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>But！</strong></h3>\n<p>這樣的做法目前似乎有許多問題，會一直出現 <code class=\"language-text\">TypeError: Cannot read property 'isProxied' of undefined</code> 的 Error，在網路上有許多討論，截至我完成這篇文章為止，尚未有結論。例如：<a href=\"https://github.com/ionic-team/stencil/issues/1661\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub 上的 issue</a> 和 <a href=\"https://en.programqa.com/question/59887533/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Svelte 的例子</a></p>\n<p>所以我想目前可能還是以 script tag 的方式引入最為保險。</p>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>Web Component 的存在必要還是有很多爭議，我個人偏好將其運用在 Design System 中，由一個固定的 Team 去維護，如此以來才能發揮他目前的最大功用。</p>\n<p>用 Stencil 開發 Web Component 的體驗挺不錯的，如果你有手刻過 custom elements，你應該也會驚艷於他們將整個開發體驗包裹得很好，有時間的話值得玩玩！</p>\n<p>這次我在開發的拍手元件的同時，除了學習到 Stencil 的開發方式外，也意外練習到動畫製作的經驗，挺有趣的，大家也拿個自己想做的小 component 來試試看吧！也歡迎跟我分享心得互相指教！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://stenciljs.com/docs/introduction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">StencilJS official site</a></li>\n<li><a href=\"https://codepen.io/realdennis/pen/RwNNqbj\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">emoji claps inspired by this codepen</a></li>\n</ol>","id":"0d43301a-6acf-560a-a1b6-8a606988fb21","fields":{"slug":"stenciljs-webcomponent"},"frontmatter":{"date":"2020-03-28T13:37:30.000Z","title":"利用 Stencil 建構 Web Component","tags":["web","stencil","JavaScript","Web Component"],"type":"tech","slug":"stenciljs-webcomponent"},"timeToRead":12}],"tagName":"Web Component","type":"tech"}},"staticQueryHashes":["2123680655"]}