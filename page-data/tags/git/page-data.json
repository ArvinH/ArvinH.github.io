{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/git","result":{"pageContext":{"posts":[{"excerpt":"May the force be with you.","html":"<p>May the force be with you.</p>\n<!-- more -->\n<p><img src=\"/image/baby-yoda.gif\" alt=\"Baby yoda\"></p>\n<p><a href=\"https://tenor.com/zh-TW/view/baby-yoda-grogu-gif-20086152\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gif credits</a></p>\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>一直以來都有需要在同台電腦上切換不同 git 帳號的需求，試過一些工具都不甚理想，最後繞了一圈發現還是透過簡單的 shell script 跟 git config 設定最簡單，然而即便步驟真的很少，似乎也到了事情不記下來很容易就會忘記的階段了...（不是年齡增長只是事情越來越多 LOL）</p>\n<p>今天這篇文章算是一個小筆記，讓自己之後換電腦時能記得該怎麼設定。P.S. 這只是我自己覺得方便的設定，有需要的讀者可以自行修改成自己喜歡的形狀。</p>\n<h2 id=\"設定-ssh-keys\" style=\"position:relative;\"><a href=\"#%E8%A8%AD%E5%AE%9A-ssh-keys\" aria-label=\"設定 ssh keys permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>設定 ssh keys</h2>\n<p>要能 access 你的 GitHub repo，最方便的做法就是產生 ssh keys 然後綁定到 GitHub 上，接著註冊到 ssh-agent 上。</p>\n<p>這部分建議直接參考 <a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub 官方文件</a>，上面除了有 GitHub 的最新資訊外，也會額外提供作業系統版本不同時，在指令上的一些差異（像是 macOS Sierra 、 Monterey 與之前版本都有些許不同）。</p>\n<p>當你為你的個別 git account 產生 ssh key 並設定到 GitHub 上後，基本上要透過以下指令來將 key 註冊至 ssh-agent 上：</p>\n<p><code class=\"language-text\">ssh-add ~/.ssh/my_git_a</code></p>\n<p>Note: 如果你的 key 有設定 passphrase，可以加入 <code class=\"language-text\">--apple-use-keychain</code> 之類的參數，讓 ssh-agent 從你的 keychain 中抓密碼。（前提是你要有存在 Keychain 中。）</p>\n<p>你也能設定 <code class=\"language-text\">~/.ssh/config</code> 讓系統自動載入你的 key，但由於接下來切換帳號的 script 中，我是直接用 <code class=\"language-text\">ssh-add</code> 來主動設定 ssh-agent 上綁定的 key，config 這部分我就沒有設定了。</p>\n<h2 id=\"撰寫簡單的-script\" style=\"position:relative;\"><a href=\"#%E6%92%B0%E5%AF%AB%E7%B0%A1%E5%96%AE%E7%9A%84-script\" aria-label=\"撰寫簡單的 script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>撰寫簡單的 script</h2>\n<p>接著就是主要的設置。</p>\n<p>在你的 <code class=\"language-text\">.zshrc</code> 或其他 shell script rc file 中，新增下列兩個 functions：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"UserName_for_gitA\"</span>\n  <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"Email_for_gitA\"</span>\n  ssh-add -D\n  ssh-add ~/.ssh/my_git_a\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">git</span> config --global user.name <span class=\"token string\">\"UserName_for_gitB\"</span>\n  <span class=\"token function\">git</span> config --global user.email <span class=\"token string\">\"Email_for_giＢ\"</span>\n  ssh-add -D\n  ssh-add ~/.ssh/my_git_b\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Function 內基本上就做三件事：</p>\n<ol>\n<li>設定全域的 git config 變數，讓你切換成 git A 時，user name 與 user email 會是 git A 的。</li>\n<li><code class=\"language-text\">ssh-add -D</code> 會刪除所以目前 attached 到 ssh-agent 上的 key</li>\n<li>最後加入指定的 git account key</li>\n</ol>\n<p>這樣設置好後，你就能在 terminal 中直接以 <code class=\"language-text\">gitA</code> 與 <code class=\"language-text\">gitB</code> 的指令來切換兩個 git account。</p>\n<p>如果你怕不清楚自己現在是在哪個 git account 底下，也可以另外加上一個 Function：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">gitwho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">git</span> config user.name\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>或是修改你 terminal 的 prompt，像是：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PROMPT</span><span class=\"token operator\">=</span><span class=\"token string\">\"\n%F{green}[%~]%f &lt;<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">git</span> config user.name<span class=\"token variable\">`</span></span>>\n=> %# \"</span>\n<span class=\"token assign-left variable\">RPROMPT</span><span class=\"token operator\">=</span><span class=\"token string\">'%*'</span></code></pre></div>\n<br>\n<h2 id=\"結論\" style=\"position:relative;\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-label=\"結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>這樣的設定是目前最符合我需求且最快速的方式，他當然有一些明顯的缺點，像是每次切換都會刪掉所有 ssh-agent 的 entries，然後再重新加入，且一次只能有一個 key attach 在 ssh-agent 中等等。這部分理論上可以用 <code class=\"language-text\">.ssh/config</code> 來處理，但這樣一來，每次 clone repo 的時候就得注意 host 是不是跟 config 設定的一樣，我覺得有點麻煩 😅</p>\n<p>找到最適合自己的做法才能真正改善效率，這篇文章除了作為給自己的筆記外，希望也能帶給看到的讀者一點幫助，如果有更好的設置方式也歡迎留言分享！</p>\n<h2 id=\"資料來源\" style=\"position:relative;\"><a href=\"#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90\" aria-label=\"資料來源 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>資料來源</h2>\n<ol>\n<li><a href=\"https://www.freecodecamp.org/news/manage-multiple-github-accounts-the-ssh-way-2dadc30ccaca/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How to manage multiple GitHub accounts on a single machine with SSH keys</a></li>\n<li><a href=\"https://zenn.dev/taichifukumoto/articles/how-to-use-multiple-github-accounts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">複数のGitHubアカウントを使い分けたい時の設定方法とTips</a></li>\n</ol>","id":"2deb2464-2d6b-59e6-bdce-df069ae04b56","fields":{"slug":"how-to-setup-multiple-git-account-on-the-same-machine"},"frontmatter":{"date":"2023-05-04T13:37:30.000Z","title":"如何在一台電腦上輕易切換不同的 git account 與 ssh key","tags":["git","productivity"],"type":"tech","slug":"how-to-setup-multiple-git-account-on-the-same-machine"},"timeToRead":3}],"tagName":"git","type":"tech"}},"staticQueryHashes":["2123680655"]}