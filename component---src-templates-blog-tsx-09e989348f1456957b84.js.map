{"version":3,"sources":["webpack:///./src/templates/Blog.tsx"],"names":["BlogPage","pageContext","data","currentPage","totalPages","type","edges","allMarkdownRemark","title","config","siteTitle","to","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","key","url"],"mappings":"4FAAA,qGAgDeA,UA9BE,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KACvBC,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,WAAYC,EAASJ,EAATI,KACzBC,EAAUJ,EAAKK,kBAAfD,MACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQE,MAAK,UAAYC,IAAOC,YAChC,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAMM,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEL,MAAOK,EAAKC,KAAKC,YAAYP,MAC7BQ,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BC,QAASJ,EAAKC,KAAKG,QACnBC,WAAYL,EAAKC,KAAKI,WACtBC,KAAMN,EAAKC,KAAKM,OAAOD,KACvBE,IAAKR,EAAKC,KAAKM,OAAOD,KACtBd,KAAMQ,EAAKC,KAAKC,YAAYV,UAGhC,kBAAC,IAAD,CAAYF,YAAaA,EAAaC,WAAYA,EAAYkB,IAAKjB,MAGvE,kBAAC,IAAD","file":"component---src-templates-blog-tsx-09e989348f1456957b84.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { Layout, Article, Wrapper, Header, Content, Pagination } from '../components';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport Data from '../models/Data';\nimport { Edges } from '../models/AllMarkdownRemark';\nimport { BMCButton } from '../components/BMCButton';\n\ninterface Props {\n  data: Data;\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n    type: string;\n  };\n}\n\nconst BlogPage = ({ pageContext, data }: Props) => {\n  const { currentPage, totalPages, type } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={`Blog | ${config.siteTitle}`} />\n      <Header>\n        <Link to=\"/\">{config.siteTitle}</Link>\n      </Header>\n      <Wrapper>\n        <Content>\n          {edges.map((post: Edges) => (\n            <Article\n              title={post.node.frontmatter.title}\n              date={post.node.frontmatter.date}\n              excerpt={post.node.excerpt}\n              timeToRead={post.node.timeToRead}\n              slug={post.node.fields.slug}\n              key={post.node.fields.slug}\n              type={post.node.frontmatter.type}\n            />\n          ))}\n          <Pagination currentPage={currentPage} totalPages={totalPages} url={type} />\n        </Content>\n      </Wrapper>\n      <BMCButton />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!, $type: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: $type } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MM-DD-YYYY\")\n            type\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}